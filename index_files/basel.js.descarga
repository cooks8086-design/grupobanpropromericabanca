(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
(function (global){(function (){
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.basel = exports.BASEL_APP = void 0;
var src_1 = require("../../src");
exports.BASEL_APP = {
    appId: "basel-partners",
    appNamespace: "Basel",
    appEnv: "browser",
    appModules: {
        "basel-package-renderer": true,
        "basel-package-manager": true
    }
};
var BaselPartners = (function () {
    function BaselPartners(basel, appConfig) {
        this.core = basel;
        this.appConfig = appConfig;
        this.state = {
            ready: false,
            polyfilled: false,
            partners: {},
            metaPartners: {},
            logs: []
        };
    }
    BaselPartners.prototype.initBasel = function (callback) {
        if (!this.state.ready) {
            this.basel = this.initBaselCore(this.core, this.appConfig);
            this.state.polyfilled = this.applyPolyfills();
            this.renderer = this.basel.extensions["basel-package-renderer"];
            this.manager = this.basel.extensions["basel-package-manager"];
            this.fetchMaterialIcons();
            this.state.ready = true;
        }
        this.clearPartnerDemoCookie();
        this.initPartnerDemo();
        this.dispatchBaselReady();
        this.importBaselStyles();
        return (typeof callback === "function") ? callback() : void 0;
    };
    BaselPartners.prototype.initPartnerDemo = function () {
        var context = this.renderer.fetchGlobalContext();
        var globalContext = this;
        var enablePartnerDemo = this.getUrlParameter() || this.getDemoPackagesFromCookies();
        if (enablePartnerDemo) {
            var assets = context['build'].assets;
            var version = context['build'].version;
            var demoPackage_1 = {
                version: version,
                assetsDomain: assets,
                meta: {}
            };
            enablePartnerDemo = JSON.parse(decodeURI(enablePartnerDemo));
            for (var key in enablePartnerDemo) {
                demoPackage_1.meta[key] = {
                    partner: key,
                    partnerProperties: enablePartnerDemo[key]
                };
            }
            document.addEventListener("BaselReady", function () {
                globalContext.initPartnersMeta(demoPackage_1);
            });
        }
    };
    BaselPartners.prototype.clearPartnerDemoCookie = function () {
        if (this.getDemoPackagesFromCookies() && window.location.href.indexOf("clearPartnerDemoCookie") > -1) {
            document.cookie = "enablePartnerDemoCookie= ; expires = Thu, 01 Jan 1970 00:00:00 GMT";
        }
    };
    BaselPartners.prototype.getCookie = function (cname) {
        var name = cname + "=";
        var ca = document.cookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
                return c.substring(name.length, c.length);
            }
        }
        return "";
    };
    BaselPartners.prototype.setPartnerDemoCookie = function (cookie) {
        var now = new Date();
        var time = now.getTime();
        var expireTime = time + (1000 * 60 * 15);
        now.setTime(expireTime);
        document.cookie = "enablePartnerDemoCookie=".concat(cookie, ";path=/;expires=").concat(now.toUTCString());
    };
    BaselPartners.prototype.getUrlParameter = function () {
        var isUrlMatched = window.location.href.match(/enablePartnerDemo=(.*?)($|&)/);
        var match = isUrlMatched && isUrlMatched[1].replace(/"(\w+)"\s*:/g, '$1:');
        if (match) {
            this.setPartnerDemoCookie(match);
        }
        return (match || void 0);
    };
    BaselPartners.prototype.getDemoPackagesFromCookies = function () {
        return this.getCookie("enablePartnerDemoCookie");
    };
    BaselPartners.prototype.clearDemoPackages = function () {
        var isUrlMatched = window.location.search.match(/clearPartnerDemo=(.*?)($|&)/) || "";
        return isUrlMatched && isUrlMatched[1];
    };
    BaselPartners.prototype.importBaselStyles = function () {
        var context = this.renderer.fetchGlobalContext();
        var assets = context['build'].assets;
        var version = context['build'].version;
        var path = "baselDeploy/master.css";
        var url = "".concat(assets, "/").concat(version, "/").concat(path);
        var el = document.createElement('link');
        el.rel = "stylesheet";
        el.href = url;
        document.head.appendChild(el);
    };
    BaselPartners.prototype.importPackage = function (pkg, params, sharedInvProperties, callback) {
        var _this = this;
        var idKey = "partnerName";
        var partnerId = pkg && pkg[idKey];
        var enablePartnerDemo = this.getUrlParameter() || this.getDemoPackagesFromCookies();
        var clearPartnerDemo = this.clearDemoPackages();
        if (enablePartnerDemo) {
            var parsedEnablePartnerDemo = JSON.parse(decodeURI(enablePartnerDemo));
            for (var partner in parsedEnablePartnerDemo) {
                if (partner === partnerId && clearPartnerDemo.indexOf(partner) > -1) {
                    return;
                }
                if (partner === partnerId) {
                    var _a = this.separateDefaultFromSharedProps(parsedEnablePartnerDemo[partner]), defaultProps = _a.defaultProps, sharedProps = _a.sharedProps;
                    params = __assign(__assign({}, params), defaultProps);
                    sharedInvProperties = this.overloadSharedWithDemoSharedProps(sharedInvProperties, sharedProps);
                    break;
                }
            }
        }
        var stats = this.initPartnerStats(params);
        var error = this.checkImportErrors(partnerId, pkg);
        if (error) {
            return callback(error);
        }
        else {
            this.state.partners[partnerId] = stats;
            return this.renderPackage(partnerId, params, sharedInvProperties, function (err) {
                _this.checkPartnerCardLoad();
                callback(_this.updatePartnerStats(partnerId, err));
            });
        }
    };
    BaselPartners.prototype.separateDefaultFromSharedProps = function (props) {
        return Object.entries(props).reduce(function (_a, _b) {
            var _c;
            var defaultProps = _a.defaultProps, sharedProps = _a.sharedProps;
            var _d = __read(_b, 2), key = _d[0], value = _d[1];
            var isSharedInvProp = key === "sharedInvProperties";
            return {
                defaultProps: isSharedInvProp
                    ? defaultProps
                    : __assign(__assign({}, defaultProps), (_c = {}, _c[key] = value, _c)),
                sharedProps: isSharedInvProp
                    ? value
                    : sharedProps
            };
        }, { defaultProps: {}, sharedProps: {} });
    };
    BaselPartners.prototype.overloadSharedWithDemoSharedProps = function (initial, demo) {
        initial = initial || {};
        demo = demo || {};
        var sharingWebIds = Array.from(new Set(__spreadArray(__spreadArray([], __read(Object.keys(initial)), false), __read(Object.keys(demo)), false)));
        return sharingWebIds.reduce(function (overloaded, webId) {
            var _a;
            return __assign(__assign({}, overloaded), (_a = {}, _a[webId] = __assign(__assign({}, initial[webId]), demo[webId]), _a));
        }, {});
    };
    BaselPartners.prototype.initPartnersMeta = function (partnerCardData) {
        var _this = this;
        var meta = partnerCardData.meta;
        var priorityPackages = ["termly", "cookiebot", "complyAuto", "complynet", "helionTechnologies", "autoGenius"];
        var orderedKeys = __spreadArray(__spreadArray([], __read(priorityPackages.filter(function (pkg) { return pkg in meta; })), false), __read(Object.keys(meta).filter(function (pkg) { return !priorityPackages.includes(pkg); })), false);
        var filteredPartners = orderedKeys.reduce(function (obj, partnerName) {
            var data = meta[partnerName];
            if (data["error"]) {
                obj.withError[partnerName] = data;
            }
            else {
                obj.noErrors[partnerName] = data;
            }
            return obj;
        }, {
            withError: {},
            noErrors: {}
        });
        Object.keys(filteredPartners.withError).forEach(function (partnerName) {
            var data = filteredPartners.withError[partnerName];
            _this.processPackageResponse({ status: "error", response: { partner: partnerName, error: data.error.message, } });
        });
        this.state.metaPartners = meta;
        return this.manager.processPackagesMeta(__assign(__assign({}, partnerCardData), { meta: filteredPartners.noErrors }), this.processPackageResponse.bind(this), this.processPackageResponse.bind(this));
    };
    BaselPartners.prototype.onContextChange = function (fn, once) {
        return this.renderer.onRenderContextChange(fn, once);
    };
    BaselPartners.prototype.baselActive = function () {
        return this.state.ready;
    };
    BaselPartners.prototype.fetchPartnerStats = function (partner) {
        return (typeof partner === "string") ? this.state.partners[partner] : void 0;
    };
    BaselPartners.prototype.renderPackage = function (packageId, params, sharedInvProperties, callback) {
        var pkg = this.fetchPackageRegistration(packageId);
        return this.renderer.renderPackage(pkg, params, sharedInvProperties, callback);
    };
    BaselPartners.prototype.registerPackage = function (pkg) {
        return this.manager.registerPackage(pkg);
    };
    BaselPartners.prototype.isValidPackage = function (pkg) {
        var assertKeys = ["partnerName", "packageAlias", "packageProperties"];
        return assertKeys.every(function (k) { return pkg.hasOwnProperty(k); });
    };
    BaselPartners.prototype.fetchPackageRegistration = function (packageId) {
        return this.manager.fetchPackage(packageId);
    };
    BaselPartners.prototype.initPartnerStats = function (params) {
        return {
            status: "pending",
            error: void 0,
            stats: {
                start: Date.now(),
                end: void 0,
                total: void 0
            },
            config: params,
            missingElements: []
        };
    };
    BaselPartners.prototype.checkPartnerCardLoad = function () {
        var statePartners = Object.keys(this.state.partners);
        var stateMetaPartners = Object.keys(this.state.metaPartners);
        var isDone = stateMetaPartners.every(function (v) { return statePartners.includes(v); });
        if (isDone) {
            var loadedEvent = new Event('partnersLoaded');
            window.dispatchEvent(loadedEvent);
        }
    };
    BaselPartners.prototype.updatePartnerStats = function (partnerId, error) {
        var stats = this.state.partners[partnerId];
        if (stats) {
            stats.stats.end = Date.now();
            stats.stats.total = stats.stats.end - stats.stats.start;
            stats.status = "success";
            if (error) {
                stats.status = "error";
                stats.error = error;
            }
        }
        return stats;
    };
    BaselPartners.prototype.initBaselCore = function (baselCore, appConfig) {
        return baselCore.init({ target: appConfig["appEnv"] }, appConfig.appModules);
    };
    BaselPartners.prototype.fetchGraphNode = function (clusterId, nodeId) {
        return (typeof nodeId === "string") ? this.basel.fetchNode(clusterId, nodeId) : this.basel.searchNodes(clusterId, function (node) { return (typeof node !== "undefined"); });
    };
    BaselPartners.prototype.processPackageResponse = function (partnerData) {
        var success = partnerData && partnerData.status === "success" && (typeof partnerData.response.partner === "string");
        var pkg = success && this.parsePackageResponse(partnerData.response.pkg);
        if (!pkg || !success) {
            this.state.partners[partnerData.response.partner] = {
                status: "error",
                error: partnerData.response.error
            };
        }
        else {
            var params = partnerData.response.parameters;
            var sharedInvProperties = partnerData.response.sharedInvProperties;
            this.importPackage(pkg, params, sharedInvProperties, function (e) {
            });
        }
    };
    ;
    BaselPartners.prototype.parsePackageResponse = function (pkgStr) {
        var pkg = void 0;
        try {
            pkg = JSON.parse(pkgStr);
            return pkg;
        }
        catch (e) {
            return void 0;
        }
    };
    BaselPartners.prototype.dispatchBaselReady = function () {
        var ieBaselReadyEvent = document.createEvent("CustomEvent");
        ieBaselReadyEvent.initEvent("BaselReady", false, false);
        document.dispatchEvent(ieBaselReadyEvent);
    };
    BaselPartners.prototype.fetchMaterialIcons = function () {
        var icons = document.createElement("link");
        icons.href = "https://fonts.googleapis.com/icon?family=Material+Icons";
        icons.rel = "stylesheet";
        document.head.appendChild(icons);
        return true;
    };
    BaselPartners.prototype.applyPolyfills = function () {
        var polyfills = [
            function () {
                document.write = function (str) {
                    console.warn("Document.write is not supported by the Sincro Platform and has been re-written to support Sincro Partners.");
                    var node = document.createRange().createContextualFragment(str);
                    document.head.appendChild(node);
                };
                if (typeof window["CustomEvent"] === "function") {
                    return false;
                }
                function CustomEvent(event, params) {
                    params = params || { bubbles: false, cancelable: false, detail: undefined };
                    var evt = document.createEvent("CustomEvent");
                    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
                    return evt;
                }
                CustomEvent.prototype = window["Event"].prototype;
                window["CustomEvent"] = CustomEvent;
                return true;
            }
        ];
        return polyfills.every(function (fill) { return fill(); });
    };
    BaselPartners.prototype.getUIController = function (controllerId, context) {
        return this.renderer["helpers"].renderer.helpers.renderer.helpers.elementRenderer.resolvers.controller.fetchController(controllerId, context);
    };
    BaselPartners.prototype.resolveProperty = function (property, context) {
        return this.renderer["helpers"].renderer.helpers.renderer.resolvers.property.resolveBaselProperty(property, context);
    };
    BaselPartners.prototype.log = function (level, msg) {
        var message = (level === "error") ? new Error(msg) : msg;
        this.state.logs.push({
            level: level,
            message: message
        });
        return this;
    };
    BaselPartners.prototype.checkImportErrors = function (partnerId, pkg) {
        var msg;
        if (this.state.partners[partnerId] && this.state.partners[partnerId].hasOwnProperty('error') && this.state.partners[partnerId].error === undefined) {
            msg = "".concat(partnerId, " already imported.");
        }
        else if (!this.state.ready) {
            msg = "Basel not initalized, Unable to import Package. Please ensure Basel.initBasel() is prior to package import";
        }
        else if (!this.isValidPackage(pkg)) {
            msg = "Unable to import package, invalid package format";
        }
        else if (this.manager.fetchPackage(partnerId)) {
            msg = "Package is already registered, please use Basel.renderPackage() method";
        }
        else if (this.registerPackage(pkg) === false) {
            msg = "Unable to register Basel Package";
        }
        return msg ? new Error(msg) : void 0;
    };
    return BaselPartners;
}());
var basel = global["Basel"] || new BaselPartners(src_1.Basel, exports.BASEL_APP);
exports.basel = basel;
global["Basel"] = basel;

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../../src":91}],2:[function(require,module,exports){

},{}],3:[function(require,module,exports){
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LOAD_EXTENSION = exports.REGISTER_ACTION_LISTENER = exports.FETCH_GRAPH_STATE = exports.SEARCH_GRAPH_NODES = exports.FETCH_GRAPH_NODE = exports.REGISTER_GRAPH_NODE = exports.REGISTER_GRAPH_CLUSTER = exports.REGISTER_GRAPH_EXTENSION = exports.REGISTER_ACTION = void 0;
exports.REGISTER_ACTION = registerAction;
exports.REGISTER_GRAPH_EXTENSION = registerGraphExtension;
exports.REGISTER_GRAPH_CLUSTER = registerCluster;
exports.REGISTER_GRAPH_NODE = registerNode;
exports.FETCH_GRAPH_NODE = fetchNode;
exports.SEARCH_GRAPH_NODES = searchNodes;
exports.FETCH_GRAPH_STATE = fetchGraphState;
exports.REGISTER_ACTION_LISTENER = registerActionListener;
exports.LOAD_EXTENSION = loadExtension;
function registerAction(data) {
    var _a = data.action, actionHandler = _a.actionHandler, actionID = _a.actionID;
    var GRAPH_ACTIONS = basel_graph_1.BaselGraph["ACTIONS"];
    return GRAPH_ACTIONS.registerAction(actionID, actionHandler);
}
function registerCluster(data) {
    var clusterID = data.clusterID;
    var GRAPH_REGISTRY = basel_graph_1.BaselGraph["REGISTRY"];
    if (GRAPH_REGISTRY && GRAPH_REGISTRY.hasOwnProperty(clusterID)) {
        return void 0;
    }
    else {
        GRAPH_REGISTRY[clusterID] = [];
        return true;
    }
}
function registerNode(data) {
    var clusterID = data.clusterID, nodeData = data.nodeData, nodeID = data.nodeID;
    var GRAPH_REGISTRY = basel_graph_1.BaselGraph["REGISTRY"];
    var targetCluster = GRAPH_REGISTRY[clusterID];
    var nodeExists = (targetCluster instanceof Array) && fetchNode({ clusterID: clusterID, nodeID: nodeID });
    if (nodeExists) {
        return void 0;
    }
    try {
        return GRAPH_REGISTRY[clusterID].push({ uid: nodeID, data: nodeData });
    }
    catch (e) {
        console.warn(clusterID, nodeID, nodeData);
        console.warn(e);
        throw e;
    }
}
function fetchNode(data) {
    var clusterID = data.clusterID, nodeID = data.nodeID;
    var result = searchNodes({ clusterID: clusterID, searchMethod: function (node, index) { return node.uid === nodeID; } });
    if (!(result instanceof Array) || !result.length) {
        return void 0;
    }
    return result[0];
}
function updateNode(data) {
    var nodeData = data.nodeData, nodeQuery = __rest(data, ["nodeData"]);
    var nodeMatch = fetchNode(nodeQuery);
    if (nodeMatch) {
        nodeMatch["data"] = __assign(__assign({}, nodeMatch.data), nodeData);
    }
    return nodeMatch;
}
function searchNodes(data) {
    var clusterID = data.clusterID, searchMethod = data.searchMethod;
    var nodeList = basel_graph_1.BaselGraph["REGISTRY"][clusterID];
    var result = [];
    if (!nodeList || !nodeList.length) {
        return result;
    }
    for (var i = 0, len = nodeList.length; i < len; i++) {
        var node = nodeList[i];
        var matches = searchMethod(node, i);
        if (matches) {
            result.push(node);
        }
    }
    return result;
}
function registerGraphExtension(data) {
    if (typeof data.extensionID !== "string" || typeof data.extension["init"] !== "function") {
        return null;
    }
    else {
        var GRAPH_STATE = basel_graph_1.BaselGraph["STATE"];
        var GRAPH_REGISTRY = basel_graph_1.BaselGraph["REGISTRY"];
        var GRAPH_ACTIONS_1 = basel_graph_1.BaselGraph["ACTIONS"];
        var extension_1 = data.extension, extensionID = data.extensionID;
        var extended = 0;
        if (GRAPH_REGISTRY["extensions"].length && GRAPH_STATE["extensions"].hasOwnProperty(extensionID)) {
            ++extended;
        }
        else {
            var extensionActionsRegistered_1 = 0;
            registerActionListener({ actionID: "REGISTER_ACTION", actionListener: function (data) { return ++extensionActionsRegistered_1; }, once: true });
            var allActionsBound = Object.keys(extension_1.actions).every(function (actionID) { return GRAPH_ACTIONS_1.registerAction(actionID, extension_1.actions[actionID]) === true; });
            if (allActionsBound) {
                var registered = registerNode({ clusterID: "extensions", nodeID: extensionID, nodeData: extension_1 }) && ++extended;
                if (registered) {
                    var corestate = GRAPH_STATE.core.graph;
                    corestate["extended"] = corestate["extended"] || 1;
                    GRAPH_STATE["extensions"][extensionID] = {
                        registered: 1,
                        actionsBound: extensionActionsRegistered_1 ? 1 : 0
                    };
                }
                else {
                    console.warn("ERROR: Unable to register extension due to previous registration");
                }
            }
            else {
                console.warn("ERROR: Unable to register extension due to overriding actions, please review sources");
            }
        }
        return !!extended;
    }
}
function loadGraphExtension(data) {
}
function loadExtension(data) {
    return basel_graph_1.BaselGraph.DEPENDENCIES.loadDependency(data.extensionID);
}
function fetchGraphState() {
    return basel_graph_1.BaselGraph["STATE"];
}
function registerActionListener(data) {
    var GRAPH_ACTIONS = basel_graph_1.BaselGraph["ACTION_HELPER"];
    var actionID = data.actionID, actionListener = data.actionListener, once = data.once;
    return GRAPH_ACTIONS.registerActionListener(actionID, actionListener, once);
}
var basel_graph_1 = require("../basel-graph");

},{"../basel-graph":4}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaselGraph = void 0;
var BaselGraph = (function () {
    function BaselGraph() {
    }
    BaselGraph.init = function (envFlags, userExtensions) {
        if (this.STATE === undefined || !this.STATE.core.graph.initialized) {
            this.ENV = envFlags || { verbose: false, target: "browser" };
            var graphHelper = new basel_graph_helper_1.BaselGraphHelper(this);
            this.GRAPH = graphHelper;
            this.STATE = {
                core: {
                    graph: {
                        initialized: 1,
                        actionsBound: 1,
                        extended: 0
                    }
                },
                extensions: {}
            };
            this.REGISTRY = {
                extensions: []
            };
            this.ACTIONS = new basel_graph_actions_helper_1.BaselGraphActionsHelper(BaselGraphCoreActions);
            this.EXTENSIONS = this.getCoreExtensions(this.ENV.target);
            this.DEPENDENCIES = basel_dependency_helper_1.BaselDependencyHelper;
            this.DEPENDENCIES.init(graphHelper, this.EXTENSIONS);
            if (userExtensions) {
                this.GRAPH.initExtensions(userExtensions);
            }
            this.READY = true;
        }
        return this.GRAPH;
    };
    BaselGraph.trigger = function (actionID, data) {
        if (!this.ACTIONS.actionIsRegistered(actionID)) {
            return void 0;
        }
        return this.ACTIONS.trigger(actionID, data);
    };
    BaselGraph.bindGraph = function () {
        return (typeof this.GRAPH !== "undefined" && this.READY) && this.GRAPH || void 0;
    };
    BaselGraph.getCoreExtensions = function (target) {
        if (target === "browser") {
            return (0, basel_extensions_1.getClientExtensions)();
        }
        else {
            return (0, basel_extensions_1.getServerExtensions)();
        }
    };
    BaselGraph.prototype.constuctor = function () { };
    BaselGraph.READY = false;
    return BaselGraph;
}());
exports.BaselGraph = BaselGraph;
var basel_extensions_1 = require("../../extensions/basel-extensions");
var BaselGraphCoreActions = require("./actions/basel-graph-core-actions");
var basel_dependency_helper_1 = require("./helpers/basel-dependency-helper");
var basel_graph_actions_helper_1 = require("./helpers/basel-graph-actions-helper");
var basel_graph_helper_1 = require("./helpers/basel-graph-helper");

},{"../../extensions/basel-extensions":17,"./actions/basel-graph-core-actions":3,"./helpers/basel-dependency-helper":5,"./helpers/basel-graph-actions-helper":6,"./helpers/basel-graph-helper":7}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaselDependencyHelper = void 0;
var BaselDependencyHelper = (function () {
    function BaselDependencyHelper() {
    }
    BaselDependencyHelper.init = function (baselGraphHelper, coreExtensions) {
        if ((typeof baselGraphHelper["GRAPH"] === "undefined") || !baselGraphHelper["GRAPH"].hasOwnProperty("REGISTRY")) {
            return void 0;
        }
        else {
            this.GRAPH = baselGraphHelper;
            this.CORE_EXTENSIONS = coreExtensions;
            this.READY = true;
            return true;
        }
    };
    BaselDependencyHelper.loadDependency = function (baselExtensionID) {
        var extension;
        if (this.DEPENDENCY_GRAPH.hasOwnProperty(baselExtensionID)) {
            extension = this.DEPENDENCY_GRAPH[baselExtensionID].link;
            return extension;
        }
        else if (this.CORE_EXTENSIONS.hasOwnProperty(baselExtensionID)) {
            var _extension = this.setupDependency(baselExtensionID);
            extension = _extension && _extension.link;
            return extension;
        }
        else {
            return void 0;
        }
    };
    BaselDependencyHelper.setupDependency = function (baselExtensionID) {
        var baselExtension = this.CORE_EXTENSIONS[baselExtensionID];
        if (!baselExtension.hasOwnProperty("CONFIG")) {
            return void 0;
        }
        else if (!!baselExtension.READY) {
            return this.registerDependency(baselExtension);
        }
        else {
            var dependencies = this.assignDependencies(baselExtension["CONFIG"].externalModules);
            baselExtension.init(this.GRAPH, dependencies);
            return this.registerDependency(baselExtension);
        }
    };
    BaselDependencyHelper.registerDependency = function (baselExtension) {
        if (typeof baselExtension.isBaselExtension !== "function" || !baselExtension.isBaselExtension()) {
            return void 0;
        }
        var id = baselExtension["CONFIG"].extensionID;
        if (this.DEPENDENCY_GRAPH[id] instanceof Object) {
            return this.DEPENDENCY_GRAPH[id];
        }
        else {
            var ready = baselExtension.READY;
            this.DEPENDENCY_GRAPH[id] = {
                active: !!ready,
                link: !!ready && baselExtension["CONFIG"].extensionActions || {}
            };
            return this.DEPENDENCY_GRAPH[id];
        }
    };
    BaselDependencyHelper.assignDependencies = function (dependencies) {
        var _this = this;
        if ((dependencies instanceof Array === false) || !dependencies.length) {
            return {};
        }
        return dependencies.reduce(function (set, extensionID) {
            var source = _this.loadDependency(extensionID);
            set[extensionID] = source;
            return set;
        }, {});
    };
    BaselDependencyHelper.READY = false;
    BaselDependencyHelper.DEPENDENCY_GRAPH = {};
    return BaselDependencyHelper;
}());
exports.BaselDependencyHelper = BaselDependencyHelper;

},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaselGraphActionsHelper = void 0;
var BaselGraphActionsHelper = (function () {
    function BaselGraphActionsHelper(initialActions) {
        this.READY = false;
        this.init(initialActions);
    }
    BaselGraphActionsHelper.prototype.init = function (initialActions) {
        if (this.READY) {
            return true;
        }
        this.ACTION_REGISTRY = initialActions || {};
        this.ACTION_EMITTER = new basel_emitter_1.BaselEmitter();
        this.READY = true;
        return true;
    };
    BaselGraphActionsHelper.prototype.trigger = function (actionID, actionData) {
        if (!this.ACTION_REGISTRY.hasOwnProperty(actionID)) {
            return void 0;
        }
        this.ACTION_EMITTER.dispatch(actionID, actionData);
        return this.ACTION_REGISTRY[actionID](actionData);
    };
    BaselGraphActionsHelper.prototype.actionIsRegistered = function (actionID) {
        return this.ACTION_REGISTRY.hasOwnProperty(actionID);
    };
    BaselGraphActionsHelper.prototype.registerAction = function (actionID, actionHandler) {
        if (this.actionIsRegistered(actionID)) {
            return void 0;
        }
        this.ACTION_REGISTRY[actionID] = actionHandler;
        this.ACTION_EMITTER.dispatch("REGISTER_ACTION", { actionID: actionID });
        return true;
    };
    BaselGraphActionsHelper.prototype.registerActionListener = function (actionID, listener, once) {
        if (once === void 0) { once = false; }
        if (!this.actionIsRegistered(actionID)) {
            return void 0;
        }
        var registered = this.ACTION_EMITTER.on(actionID, listener, once);
        if (registered) {
            this.ACTION_EMITTER.dispatch("ACTION_LISTENER_REGISTERED", { actionID: actionID, once: once });
        }
        return registered;
    };
    return BaselGraphActionsHelper;
}());
exports.BaselGraphActionsHelper = BaselGraphActionsHelper;
var basel_emitter_1 = require("../../../utilities/basel-emitter");

},{"../../../utilities/basel-emitter":92}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaselGraphHelper = void 0;
var BaselGraphHelper = (function () {
    function BaselGraphHelper(baselGraph) {
        this.READY = false;
        if (baselGraph.hasOwnProperty("init")) {
            this.ENV = baselGraph.ENV;
            this.GRAPH = baselGraph;
            this.READY = true;
        }
    }
    BaselGraphHelper.prototype.initExtensions = function (userExtensions) {
        if (!this.extensions) {
            this.extensions = this.getUserExtensions(userExtensions);
        }
    };
    BaselGraphHelper.prototype.trigger = function (actionID, actionData) {
        return this.GRAPH.trigger(actionID, actionData);
    };
    BaselGraphHelper.prototype.loadExtension = function (extensionID) {
        return this.GRAPH.DEPENDENCIES.loadDependency(extensionID);
    };
    BaselGraphHelper.prototype.registerNode = function (clusterID, nodeID, nodeData) {
        return this.trigger("REGISTER_GRAPH_NODE", { clusterID: clusterID, nodeID: nodeID, nodeData: nodeData });
    };
    BaselGraphHelper.prototype.registerCluster = function (clusterID) {
        return this.trigger("REGISTER_GRAPH_CLUSTER", { clusterID: clusterID });
    };
    BaselGraphHelper.prototype.registerExtension = function (extensionID, extension, extensionActions, extensionState) {
        return this.trigger("REGISTER_GRAPH_EXTENSION", { extensionID: extensionID, extension: extension });
    };
    BaselGraphHelper.prototype.registerAction = function (actionID, actionHandler) {
        return this.trigger("REGISTER_ACTION", { action: { actionID: actionID, actionHandler: actionHandler } });
    };
    BaselGraphHelper.prototype.registerActionListener = function (actionID, actionListener, once) {
        return this.trigger("REGISTER_ACTION_LISTENER", { actionID: actionID, actionListener: actionListener, once: once });
    };
    BaselGraphHelper.prototype.fetchNode = function (clusterID, nodeID, nodeIndex) {
        return this.trigger("FETCH_GRAPH_NODE", { clusterID: clusterID, nodeID: nodeID, nodeIndex: nodeIndex });
    };
    BaselGraphHelper.prototype.searchNodes = function (clusterID, searchMethod) {
        return this.trigger("SEARCH_GRAPH_NODES", { clusterID: clusterID, searchMethod: searchMethod });
    };
    BaselGraphHelper.prototype.getUserExtensions = function (userExtensions) {
        var _this = this;
        return Object.keys(userExtensions).reduce(function (extensions, key) {
            if (!!userExtensions[key]) {
                extensions[key] = _this.loadExtension(key);
            }
            return extensions;
        }, {});
    };
    return BaselGraphHelper;
}());
exports.BaselGraphHelper = BaselGraphHelper;

},{}],8:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaselAsync = void 0;
var __1 = require("../");
var CONFIG = {
    extensionActions: void 0,
    extensionClusters: [],
    extensionID: "basel-async",
    externalModules: []
};
var BaselAsync = (function () {
    function BaselAsync() {
    }
    BaselAsync_1 = BaselAsync;
    BaselAsync.bootstrap = function () {
        this.API = Utils.BaselAsync;
        return true;
    };
    BaselAsync.getAPI = function () {
        return this.API;
    };
    var BaselAsync_1;
    BaselAsync = BaselAsync_1 = __decorate([
        (0, __1.Extension)(CONFIG, BaselAsync_1.bootstrap.bind(BaselAsync_1), BaselAsync_1.getAPI.bind(BaselAsync_1))
    ], BaselAsync);
    return BaselAsync;
}());
exports.BaselAsync = BaselAsync;
var Utils = require("./utils");

},{"../":90,"./utils":10}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaselAsync = void 0;
var BaselAsync = (function () {
    function BaselAsync(iteratee) {
        this.iteratee = iteratee;
    }
    BaselAsync.forEach = function (iteratee, exec, callback) {
        if (!iteratee.length) {
            return callback(null);
        }
        var _iteratee = iteratee.slice(0);
        var done = function (err) {
            if (err) {
                return callback(err);
            }
            if (_iteratee.length === 0) {
                return callback(null);
            }
            var item = _iteratee.shift();
            var index = iteratee.indexOf(item);
            exec(item, done, index);
        };
        done(null);
    };
    BaselAsync.forEachLimit = function (limit, iteratee, exec, callback) {
        if (!iteratee.length) {
            return callback(null);
        }
        if (limit === 0 || limit > iteratee.length) {
            limit = iteratee.length;
        }
        var _iteratee = iteratee.slice(limit, iteratee.length);
        var queue = iteratee.slice(0, limit);
        var totalRemaining = iteratee.length;
        var itemIndex = 0;
        var complete = 0;
        var done = function (err) {
            if (err) {
                return ++complete && callback(err);
            }
            else if (complete) {
                return callback(void 0);
            }
            if (queue.length && !complete) {
                if (_iteratee.length) {
                    queue.push(_iteratee.shift());
                }
                var item = queue.shift();
                return exec(item, function (err) {
                    --totalRemaining;
                    if (totalRemaining === 0) {
                        ++complete;
                    }
                    return done(err);
                }, itemIndex++);
            }
        };
        for (var i = 0, len = limit; i < len; i++) {
            done(null);
        }
    };
    BaselAsync.reduce = function (iteratee, collection, reduction) {
    };
    BaselAsync.prototype.forEach = function (exec, callback) {
        if (this.iteratee.length) {
            return callback(null);
        }
        var _iteratee = this.iteratee.slice(0);
        var done = function (err) {
            if (err) {
                return callback(err);
            }
            if (_iteratee.length === 0) {
                return callback(null);
            }
            var item = _iteratee.shift();
            exec(item, done);
        };
        done(null);
    };
    return BaselAsync;
}());
exports.BaselAsync = BaselAsync;

},{}],10:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./async"), exports);

},{"./async":9}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.baselCacheActions = void 0;
exports.baselCacheActions = {
    NEW_BASEL_CACHE: newBaselCache
};
function newBaselCache(storeDefaults) {
    if (storeDefaults === void 0) { storeDefaults = {}; }
    return new basel_cache_helper_1.BaselCacheHelper(storeDefaults);
}
var basel_cache_helper_1 = require("../helpers/basel-cache-helper");

},{"../helpers/basel-cache-helper":13}],12:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaselCache = void 0;
var basel_extension_1 = require("../basel-extension");
var extensionConfig = {
    extensionActions: void 0,
    extensionClusters: [],
    extensionID: "basel-cache",
    externalModules: [],
};
var BaselCache = (function () {
    function BaselCache() {
    }
    BaselCache_1 = BaselCache;
    var BaselCache_1;
    BaselCache = BaselCache_1 = __decorate([
        (0, basel_extension_1.Extension)(extensionConfig, function (dependencies) { return true; }, function () { return basel_cache_actions_1.baselCacheActions; })
    ], BaselCache);
    return BaselCache;
}());
exports.BaselCache = BaselCache;
var basel_cache_actions_1 = require("./actions/basel-cache-actions");

},{"../basel-extension":16,"./actions/basel-cache-actions":11}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaselCacheHelper = void 0;
var BaselCacheHelper = (function () {
    function BaselCacheHelper(storeDefaults) {
        if (storeDefaults === void 0) { storeDefaults = {}; }
        this.store = storeDefaults;
    }
    BaselCacheHelper.prototype.get = function (key) {
        if (typeof key !== "string" || !this.store.hasOwnProperty(key)) {
            return void 0;
        }
        return this.store[key];
    };
    BaselCacheHelper.prototype.set = function (key, value, override) {
        if (override === void 0) { override = false; }
        if (typeof key !== "string" || this.store.hasOwnProperty(key) && !override) {
            return void 0;
        }
        return this.store[key] = value;
    };
    return BaselCacheHelper;
}());
exports.BaselCacheHelper = BaselCacheHelper;

},{}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CLIENT_EXTENSIONS = void 0;
var basel_indexed_db_1 = require("./basel-indexed-db/basel-indexed-db");
var basel_package_renderer_1 = require("./basel-package-renderer/basel-package-renderer");
exports.CLIENT_EXTENSIONS = {
    "basel-package-renderer": basel_package_renderer_1.BaselPackageRenderer,
    "basel-indexed-db": basel_indexed_db_1.BaselIndexedDB
};

},{"./basel-indexed-db/basel-indexed-db":2,"./basel-package-renderer/basel-package-renderer":28}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.COMMON_EXTENSIONS = void 0;
var basel_async_1 = require("./basel-async/basel-async");
var basel_cache_1 = require("./basel-cache/basel-cache");
var basel_logger_1 = require("./basel-logger/basel-logger");
var basel_node_transformer_1 = require("./basel-node-transformer/basel-node-transformer");
var basel_package_manager_1 = require("./basel-package-manager/basel-package-manager");
exports.COMMON_EXTENSIONS = {
    "basel-cache": basel_cache_1.BaselCache,
    "basel-logger": basel_logger_1.BaselLogger,
    "basel-node-transformer": basel_node_transformer_1.BaselNodeTransformer,
    "basel-package-manager": basel_package_manager_1.BaselPackageManager,
    "basel-async": basel_async_1.BaselAsync
};

},{"./basel-async/basel-async":8,"./basel-cache/basel-cache":12,"./basel-logger/basel-logger":19,"./basel-node-transformer/basel-node-transformer":21,"./basel-package-manager/basel-package-manager":24}],16:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Extension = exports.BaselExtension = void 0;
var BaselExtension = (function () {
    function BaselExtension() {
    }
    BaselExtension.init = function (baselGraphHelper, dependencies) {
        var _this = this;
        this.GRAPH = baselGraphHelper;
        var extensionSetup = this.setup(dependencies);
        if (!extensionSetup) {
            return void 0;
        }
        var clustersRegistered = this.CONFIG.extensionClusters.every(function (clusterID) { return _this.GRAPH.registerCluster(clusterID); });
        if (!clustersRegistered) {
            console.error("ERROR: Unable to load Basel Extension -- Duplicate Node Clusters defined");
            return void 0;
        }
        this.READY = true;
        return true;
    };
    BaselExtension.baselExtension = function () {
        return ((this.hasOwnProperty("GRAPH")) && (typeof this.GRAPH.fetchNode === "function"));
    };
    BaselExtension.isBaselExtension = function () {
        return ((this.hasOwnProperty("CONFIG")) && (typeof this.CONFIG.extensionID === "string"));
    };
    BaselExtension.setup = function (dependencies) {
        return true;
    };
    BaselExtension.READY = false;
    BaselExtension.STATE = {};
    return BaselExtension;
}());
exports.BaselExtension = BaselExtension;
function Extension(config, initService, actionGetter) {
    return function (target) {
        var Extended = (function (_super) {
            __extends(Extended, _super);
            function Extended() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            Extended.setup = function (dependencies) {
                dependencies["graph"] = this.GRAPH;
                var ready = initService(dependencies);
                if (ready) {
                    this.CONFIG.extensionActions = actionGetter();
                }
                return ready;
            };
            Extended.CONFIG = config;
            return Extended;
        }(BaselExtension));
        return Extended;
    };
}
exports.Extension = Extension;

},{}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getServerExtensions = exports.getClientExtensions = exports.GET_EXTENSIONS = void 0;
function GET_EXTENSIONS() {
    return Object.assign({}, basel_client_extensions_1.CLIENT_EXTENSIONS, basel_server_extensions_1.SERVER_EXTENSIONS, basel_common_extensions_1.COMMON_EXTENSIONS);
}
exports.GET_EXTENSIONS = GET_EXTENSIONS;
function getClientExtensions() {
    var common = basel_common_extensions_1.COMMON_EXTENSIONS;
    var client = basel_client_extensions_1.CLIENT_EXTENSIONS || {};
    return Object.assign({}, common, client);
}
exports.getClientExtensions = getClientExtensions;
function getServerExtensions() {
    var common = basel_common_extensions_1.COMMON_EXTENSIONS;
    var server = basel_server_extensions_1.SERVER_EXTENSIONS;
    return Object.assign({}, common, server);
}
exports.getServerExtensions = getServerExtensions;
var basel_common_extensions_1 = require("./basel-common-extensions");
var basel_client_extensions_1 = require("./basel-client-extensions");
var basel_server_extensions_1 = require("./basel-server-extensions");

},{"./basel-client-extensions":14,"./basel-common-extensions":15,"./basel-server-extensions":2}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setupLogger = exports.baselLoggerActions = void 0;
exports.baselLoggerActions = {
    NEW_LOGGER: newLogger,
    SEARCH_ALL_LOGS: searchAllLogs,
    SETUP_LOGGER: setupLogger
};
function setupLogger(graphHelper) {
    if (typeof graphHelper === "undefined") {
        return void 0;
    }
    return basel_logger_helper_1.BaselLoggerHelper.init(graphHelper);
}
exports.setupLogger = setupLogger;
function newLogger(loggerID) {
    if (typeof loggerID !== "string") {
        return void 0;
    }
    return new basel_logger_helper_1.BaselLoggerHelper(loggerID);
}
function searchAllLogs(logQuery) {
    if (typeof logQuery === "undefined") {
        return void 0;
    }
    return basel_logger_helper_1.BaselLoggerHelper.printLogs(logQuery);
}
var basel_logger_helper_1 = require("../helpers/basel-logger-helper");

},{"../helpers/basel-logger-helper":20}],19:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaselLogger = void 0;
var basel_extension_1 = require("../basel-extension");
var extensionConfig = {
    extensionID: "basel-logger",
    extensionClusters: ["baselLogs"],
    externalModules: [],
    extensionActions: void 0
};
var BaselLogger = (function () {
    function BaselLogger() {
    }
    BaselLogger_1 = BaselLogger;
    var BaselLogger_1;
    BaselLogger = BaselLogger_1 = __decorate([
        (0, basel_extension_1.Extension)(extensionConfig, function (dependencies) { return (0, basel_logger_actions_1.setupLogger)(BaselLogger_1.GRAPH); }, function () { return basel_logger_actions_1.baselLoggerActions; })
    ], BaselLogger);
    return BaselLogger;
}());
exports.BaselLogger = BaselLogger;
var basel_logger_actions_1 = require("./actions/basel-logger-actions");

},{"../basel-extension":16,"./actions/basel-logger-actions":18}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaselLoggerHelper = void 0;
var BaselLoggerHelper = (function () {
    function BaselLoggerHelper(loggerID) {
        this.LOG = [];
        this.STATIC = this.constructor;
        this.LOGGER_ID = loggerID;
        var duplicateLogger = this.STATIC.GRAPH.fetchNode("baselLogs", loggerID);
        if (duplicateLogger) {
            this.LOG = duplicateLogger.data.logs;
        }
        else {
            this.STATIC.GRAPH.registerNode("baselLogs", loggerID, {
                logs: this.LOG
            });
        }
    }
    BaselLoggerHelper.init = function (graphHelper) {
        if (typeof graphHelper === "undefined") {
            return void 0;
        }
        else if (typeof this.GRAPH !== "undefined") {
            return true;
        }
        else {
            this.GRAPH = graphHelper;
            return true;
        }
    };
    BaselLoggerHelper.printLogs = function (logQuery) {
        var ids = logQuery.ids, levels = logQuery.levels, scopes = logQuery.scopes;
        var filterLogs = function (entry) {
            var result = false;
            var matchFlags = {
                ids: (!ids || ids.indexOf(entry.loggerID) > -1),
                levels: (!levels || levels.indexOf(entry.level) > -1),
                scopes: (!scopes || scopes.indexOf(entry.scope) > -1)
            };
            if (matchFlags.ids && matchFlags.levels && matchFlags.scopes) {
                result = true;
            }
            return result;
        };
        return this.MASTER_LOG.filter(filterLogs);
    };
    BaselLoggerHelper.prototype.pushEntry = function (baselLog) {
        this.LOG.push(baselLog);
        this.STATIC.MASTER_LOG.push(baselLog);
        return true;
    };
    BaselLoggerHelper.prototype.newEntry = function (level, scope, logDetails) {
        var entry = {
            level: level,
            scope: scope,
            loggerID: this.LOGGER_ID,
            detail: logDetails
        };
        return entry;
    };
    BaselLoggerHelper.prototype.error = function (origin, scope, error) {
        var entry = this.newEntry("error", scope, {
            origin: origin,
            stack: error.stack,
            message: error.message,
        });
        return this.pushEntry(entry);
    };
    BaselLoggerHelper.prototype.warn = function (origin, scope, message) {
        var entry = this.newEntry("warn", scope, {
            origin: origin,
            message: message
        });
        return this.pushEntry(entry);
    };
    BaselLoggerHelper.prototype.log = function (origin, scope, message) {
        var entry = this.newEntry("log", scope, { origin: origin, message: message });
        return this.pushEntry(entry);
    };
    BaselLoggerHelper.prototype.printLogs = function (query) {
        if (!this.LOG.length) {
            return [];
        }
        var levels = query.levels, scopes = query.scopes;
        var filterLogs = function (entry) {
            var result = false;
            var matchFlags = {
                levels: (!levels.length || levels.indexOf(entry.level) > -1),
                scopes: (!scopes.length || scopes.indexOf(entry.scope) > -1)
            };
            if (matchFlags.levels && matchFlags.scopes) {
                result = true;
            }
            return result;
        };
        return this.LOG.filter(filterLogs);
    };
    BaselLoggerHelper.MASTER_LOG = [];
    return BaselLoggerHelper;
}());
exports.BaselLoggerHelper = BaselLoggerHelper;

},{}],21:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaselNodeTransformer = void 0;
var basel_extension_1 = require("../basel-extension");
var extensionConfig = {
    extensionID: "basel-node-transformer",
    extensionClusters: [],
    externalModules: ["basel-logger"],
    extensionActions: void 0
};
var BaselNodeTransformer = (function () {
    function BaselNodeTransformer() {
    }
    BaselNodeTransformer_1 = BaselNodeTransformer;
    var BaselNodeTransformer_1;
    BaselNodeTransformer = BaselNodeTransformer_1 = __decorate([
        (0, basel_extension_1.Extension)(extensionConfig, function (dependencies) { return basel_node_transform_service_1.BaselNodeTransformService.initService(dependencies["basel-logger"]); }, function () { return basel_node_transform_service_1.BaselNodeTransformService.fetchServiceActions(); })
    ], BaselNodeTransformer);
    return BaselNodeTransformer;
}());
exports.BaselNodeTransformer = BaselNodeTransformer;
var basel_node_transform_service_1 = require("./service/basel-node-transform-service");

},{"../basel-extension":16,"./service/basel-node-transform-service":22}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceActions = exports.BaselNodeTransformService = void 0;
var BaselNodeTransformService;
(function (BaselNodeTransformService) {
    BaselNodeTransformService.HELPERS = { logger: void 0 };
    BaselNodeTransformService.READY = false;
    function initService(logger) {
        if (!logger || typeof logger.NEW_LOGGER === "undefined") {
            throw new Error("Unable to Initialize BaselNodeTransformService due to missing dependency -- Basel Logger");
        }
        if (BaselNodeTransformService.READY) {
            return true;
        }
        BaselNodeTransformService.HELPERS.logger = logger;
        BaselNodeTransformService.READY = true;
        return true;
    }
    BaselNodeTransformService.initService = initService;
    function fetchServiceActions() {
        if (!BaselNodeTransformService.READY) {
            throw new Error("Unable to fetch Basel Node Transform Service Actions -- service not initialized");
        }
        return ServiceActions;
    }
    BaselNodeTransformService.fetchServiceActions = fetchServiceActions;
})(BaselNodeTransformService = exports.BaselNodeTransformService || (exports.BaselNodeTransformService = {}));
var ServiceActions;
(function (ServiceActions) {
    function transformPackageToGraphData(baselPackage) {
        if (!BaselNodeTransformService.READY) {
            throw new Error("Unable to transform package -- service not initialized");
        }
        var helper = new basel_package_transformer_1.BaselPackageTransformer(baselPackage);
        helper.transformPackage();
        return helper.getPackageNodes();
    }
    ServiceActions.transformPackageToGraphData = transformPackageToGraphData;
})(ServiceActions = exports.ServiceActions || (exports.ServiceActions = {}));
var basel_package_transformer_1 = require("../transformers/basel-package-transformer");

},{"../transformers/basel-package-transformer":23}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaselPackageTransformer = void 0;
var BaselPackageTransformer = (function () {
    function BaselPackageTransformer(baselPackage) {
        if (typeof baselPackage !== "object" || typeof baselPackage.packageAlias !== "string") {
            throw new Error("Unexpected typeof argument 'baselPackage' -- " + typeof baselPackage);
        }
        this.transformed = {
            packages: [],
            components: [],
            elements: [],
            rules: [],
            lifecycleEvents: [],
            deferredDependencies: [],
            dependencies: [],
            packageProperties: [],
            customProperties: [],
            actions: [],
            events: []
        };
        this.sourcePackage = baselPackage;
    }
    BaselPackageTransformer.prototype.getPackageNodes = function () {
        if (typeof this.transformed === "undefined" || !(this.transformed.packages.length)) {
            throw new Error("Unable to get PackageNodes, Package not transformed");
        }
        return this.transformed;
    };
    BaselPackageTransformer.prototype.transformPackage = function () {
        var _this = this;
        if (typeof this.sourcePackage === "undefined") {
            throw new Error("Unexpected typeof argument 'this.sourcePackage'");
        }
        var pkg = this.sourcePackage;
        var nodeID = pkg.partnerName;
        var nodeData = {
            config: {
                partner: pkg.partnerName,
                prefix: pkg.partnerPrefix,
                options: pkg.packageOptions,
                params: pkg.packageProperties,
            },
            refs: {
                components: [],
                customProperties: [],
                deferredDependencies: [],
                dependencies: [],
                packageProperties: [],
                rules: []
            }
        };
        pkg.customProperties.forEach(function (customProperty) {
            var xformed = {
                uid: customProperty.assignBaselToken,
                data: customProperty
            };
            nodeData.refs.customProperties.push(xformed.uid);
            _this.transformed.customProperties.push(xformed);
        });
        pkg.globalScripts.css.forEach(function (script, index) {
            var xformed = _this.transformElement(script);
            nodeData.refs.dependencies.push(xformed.uid);
            _this.transformed.dependencies.push(xformed);
        });
        pkg.globalScripts.js.forEach(function (script, index) {
            var isDeferred = !!script.attributes["defer"] || !!script.options["defer"];
            var xformed = _this.transformElement(script);
            var targetKey = isDeferred ? "deferredDependencies" : "dependencies";
            nodeData.refs[targetKey].push(xformed.uid);
            _this.transformed[targetKey].push(xformed);
        });
        pkg.components.forEach(function (component) {
            var xformed = _this.transformComponent(component);
            nodeData.refs.components.push(xformed.uid);
            _this.transformed.components.push(xformed);
        });
        var packageNode = new BaselNode(nodeID, nodeData);
        this.transformed.packages.push(packageNode);
        return packageNode;
    };
    BaselPackageTransformer.prototype.transformComponent = function (baselComponent) {
        var _this = this;
        if (typeof baselComponent !== "object" || typeof baselComponent.alias !== "string") {
            throw new Error("Unexpected typeof argument 'baselComponent'");
        }
        var nodeID = baselComponent.alias;
        var nodeData = {
            config: {
                activePages: baselComponent.rules.assignPages,
                alias: baselComponent.alias,
            },
            refs: {
                deferredDependencies: [],
                dependencies: [],
                elements: [],
                lifecycleEvents: [],
                rules: []
            }
        };
        Object.keys(baselComponent.lifecycleEvents).forEach(function (eventID) {
            var eventHandlers = baselComponent.lifecycleEvents[eventID];
            eventHandlers.forEach(function (event, index) {
                var id = "".concat(nodeID, "_").concat(eventID, "_").concat(index);
                var data = {
                    eventName: eventID,
                    handler: event
                };
                var xformed = new BaselNode(id, data);
                nodeData.refs.lifecycleEvents.push(xformed.uid);
                _this.transformed.lifecycleEvents.push(xformed);
            });
        });
        baselComponent.scripts.css.forEach(function (script, index) {
            var xformed = _this.transformElement(script);
            nodeData.refs.dependencies.push(xformed.uid);
            _this.transformed.dependencies.push(xformed);
        });
        baselComponent.scripts.js.forEach(function (script, index) {
            var isDeferred = !!script.attributes["defer"] || !!script.options["defer"];
            var xformed = _this.transformElement(script);
            var targetKey = "dependencies";
            if (isDeferred) {
                targetKey = "deferredDependencies";
            }
            nodeData.refs[targetKey].push(xformed.uid);
            _this.transformed[targetKey].push(xformed);
        });
        baselComponent.elements.forEach(function (element, index, target) {
            var xformed = _this.transformElement(element);
            nodeData.refs.elements.push(xformed.uid);
            _this.transformed.elements.push(xformed);
        });
        return new BaselNode(nodeID, nodeData);
    };
    BaselPackageTransformer.prototype.transformElement = function (baselElement) {
        var _this = this;
        if (typeof baselElement !== "object" || typeof baselElement.elType !== "string") {
            throw new Error("Unexpected typeof argument 'baselElement'");
        }
        var NODE_UID = baselElement.alias;
        var NODE_DATA = {
            refs: {
                lifecycleEvents: [],
                rules: [],
                actions: [],
                events: []
            },
            config: {
                active: false,
                alias: baselElement.alias,
                elementType: baselElement.elType,
                options: baselElement.options,
                order: baselElement.order,
                pageRestrictions: baselElement.rules.restrictAssignedPages,
                dom: {
                    tag: baselElement.tag,
                    attributes: baselElement.attributes,
                    style: baselElement.customCSS,
                }
            }
        };
        var elementRules = baselElement.rules.assertRules;
        var elementLifecycleEvents = baselElement.lifecycleEvents;
        var elementActions = baselElement.actions;
        var elementEvents = baselElement.events;
        elementActions && elementActions.forEach(function (_action, index, target) {
            var action = _action.baselAction;
            var nodeUID = "".concat(NODE_UID, "_").concat(action.actionId, "_").concat(index);
            var xformed = new BaselNode(nodeUID, { actionID: action.actionId, payload: action.payload });
            NODE_DATA.refs.actions.push(xformed.uid);
            _this.transformed.actions.push(xformed);
        });
        elementEvents && elementEvents.forEach(function (ev, index) {
            var nodeUID = "".concat(NODE_UID, "_").concat(ev.event, "_").concat(index);
            var baselNode = new BaselNode(nodeUID, ev);
            NODE_DATA.refs.events.push(nodeUID);
            _this.transformed.events.push(baselNode);
        });
        elementRules && elementRules.forEach(function (rule, index, target) {
            var xformed = _this.transformRule(rule, NODE_UID, index);
            NODE_DATA.refs.rules.push(xformed.uid);
            _this.transformed.rules.push(xformed);
        });
        Object.keys(elementLifecycleEvents).forEach(function (eventID, index, target) {
            var events = elementLifecycleEvents[eventID];
            events.forEach(function (event, index) {
                var id = "".concat(NODE_UID, "_").concat(eventID, "_").concat(index);
                var data = {
                    eventName: eventID,
                    handler: event
                };
                var xformed = new BaselNode(id, data);
                NODE_DATA.refs.lifecycleEvents.push(xformed.uid);
                _this.transformed.lifecycleEvents.push(xformed);
            });
        });
        return new BaselNode(NODE_UID, NODE_DATA);
    };
    BaselPackageTransformer.prototype.transformRule = function (baselRule, parentID, index) {
        if (isBaselRule(baselRule) === false) {
            var error = "Unexpected typeof argument 'baselRule' -- ".concat(typeof baselRule);
            throw new Error(error);
        }
        var rule = baselRule;
        var nodeID = "".concat(parentID, "_").concat(index);
        return new BaselNode(nodeID, rule);
    };
    BaselPackageTransformer.prototype.transformCustomProperty = function (baselCustomProperty) {
        if (isBaselCustomProperty(baselCustomProperty) === false) {
            var error = "Unexpected typeof argument 'baselCustomProperty' -- ".concat(typeof baselCustomProperty);
            throw new Error(error);
        }
        var propertyID = baselCustomProperty.assignBaselToken;
        return new BaselNode(propertyID, baselCustomProperty);
    };
    return BaselPackageTransformer;
}());
exports.BaselPackageTransformer = BaselPackageTransformer;
function isBaselCustomProperty(baselCustomProperty) {
    if (typeof baselCustomProperty !== "object") {
        return false;
    }
    var customProp = baselCustomProperty;
    if (typeof customProp.applyPages !== "object") {
        return false;
    }
    else if (typeof customProp.assignBaselToken !== "string") {
        return false;
    }
    else if (typeof customProp.fetchType !== "string") {
        return false;
    }
    return true;
}
function isBaselRule(baselRule) {
    return true;
}
var BaselNode = (function () {
    function BaselNode(uid, data) {
        if (typeof uid !== "string") {
            throw new Error("Unexpected typeof argument 'uid' -- " + typeof uid);
        }
        if (typeof data === "undefined") {
            throw new Error("Unexpected typeof argument 'data' -- " + typeof data);
        }
        this.uid = uid;
        this.data = data;
    }
    return BaselNode;
}());

},{}],24:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaselPackageManager = void 0;
var basel_extension_1 = require("../basel-extension");
var extensionConfig = {
    extensionActions: void 0,
    extensionClusters: [
        "partners",
        "packages",
        "elements",
        "components",
        "rules",
        "eventListeners",
        "actions",
        "packageProperties",
        "customProperties",
        "packageReports",
        "lifecycleEvents",
        "events"
    ],
    extensionID: "basel-package-manager",
    externalModules: ["basel-logger", "basel-node-transformer"]
};
var BaselPackageManager = (function () {
    function BaselPackageManager() {
    }
    BaselPackageManager_1 = BaselPackageManager;
    var BaselPackageManager_1;
    BaselPackageManager = BaselPackageManager_1 = __decorate([
        (0, basel_extension_1.Extension)(extensionConfig, function (dependencies) { return basel_package_manager_service_1.BaselPackageManagerService.initService({
            nodeTransformer: dependencies["basel-node-transformer"],
            logger: dependencies["basel-logger"],
            graph: BaselPackageManager_1.GRAPH
        }); }, function () { return basel_package_manager_service_1.BaselPackageManagerService.fetchServiceActions(); })
    ], BaselPackageManager);
    return BaselPackageManager;
}());
exports.BaselPackageManager = BaselPackageManager;
var basel_package_manager_service_1 = require("./service/basel-package-manager-service");

},{"../basel-extension":16,"./service/basel-package-manager-service":26}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaselPackageAuthHelper = void 0;
var BaselPackageAuthHelper;
(function (BaselPackageAuthHelper) {
    BaselPackageAuthHelper.packageAuthorized = function (partnerName) {
        return true;
    };
})(BaselPackageAuthHelper = exports.BaselPackageAuthHelper || (exports.BaselPackageAuthHelper = {}));

},{}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceActions = exports.BaselPackageManagerService = void 0;
var BaselPackageManagerService;
(function (BaselPackageManagerService) {
    BaselPackageManagerService.READY = false;
    BaselPackageManagerService.initService = function (dependencies) {
        if (BaselPackageManagerService.READY) {
            return true;
        }
        if (typeof dependencies !== "object") {
            return false;
        }
        BaselPackageManagerService.HELPERS = dependencies;
        BaselPackageManagerService.ENV = BaselPackageManagerService.HELPERS.graph.ENV;
        BaselPackageManagerService.coreLogger = BaselPackageManagerService.HELPERS.logger.NEW_LOGGER("core");
        BaselPackageManagerService.READY = true;
        if (BaselPackageManagerService.ENV.verbose) {
            BaselPackageManagerService.coreLogger.log("BaselPackageManager", "basel", "Basel Package Mananger Service Initialized");
        }
        return true;
    };
    BaselPackageManagerService.fetchServiceActions = function () {
        if (!BaselPackageManagerService.READY) {
            if (BaselPackageManagerService.ENV.verbose) {
                BaselPackageManagerService.coreLogger.error("BaselPackageManager", "basel", new Error("Basel Package Manager not Ready -- Unable to assign Service Actions"));
            }
            return void 0;
        }
        return ServiceActions;
    };
})(BaselPackageManagerService = exports.BaselPackageManagerService || (exports.BaselPackageManagerService = {}));
var ServiceActions;
(function (ServiceActions) {
    ServiceActions.registerPackage = function (baselJSONPackage, baselPackageParams) {
        if (typeof baselJSONPackage !== "object" || !baselJSONPackage.partnerName) {
            return void 0;
        }
        var verboseLogs = BaselPackageManagerService.ENV.verbose;
        var packageID = baselJSONPackage.partnerName;
        var helpers = BaselPackageManagerService.HELPERS;
        var packageLogger = helpers.logger.NEW_LOGGER(packageID);
        if (!ServiceActions.packageAuthorized(packageID)) {
            packageLogger.warn("BaselPackageManager#registerPackage", "package", packageID + " not registered -- Blocked By Site Cookies");
            return void 0;
        }
        else if (verboseLogs) {
            packageLogger.log("BaselPackageManager#registerPackage", "package", "Package " + packageID + " Successfully Authorized");
        }
        var transformedPackage = helpers.nodeTransformer.transformPackageToGraphData(baselJSONPackage);
        if (!transformedPackage) {
            packageLogger.error("BaselPackageManager#registerPackage", "package", new Error("Unable to transform basel package, validate package structure."));
            return void 0;
        }
        else if (verboseLogs) {
            packageLogger.log("BaselPackageManager#registerPackage", "package", "Successfully Transformed Package Data");
        }
        var registrationError;
        function registerToGraph() {
            return Object.keys(transformedPackage).every(function (key, index) {
                var clusterID = (key === "dependencies" || key === "deferredDependencies") ? "elements" : key;
                var clusterSet = transformedPackage[key];
                return clusterSet.every(function (graphNode) {
                    var registered = helpers.graph.registerNode(clusterID, graphNode.uid, graphNode.data);
                    var didRegister = (typeof registered === "number");
                    if (!didRegister) {
                        registrationError = new Error("Package Registration Error -- Unable to register node " + graphNode.uid);
                    }
                    return didRegister;
                });
            });
        }
        var registered = registerToGraph();
        if (registrationError instanceof Error) {
            packageLogger.error("BaselPackageManager#registerPackage", "package", registrationError);
        }
        else if (verboseLogs && registered) {
            packageLogger.log("BaselPackageManager#registerPackage", "package", "Package Successfully Registered to Graph");
        }
        return registered;
    };
    ServiceActions.fetchPackage = function (packageID) {
        return BaselPackageManagerService.HELPERS.graph.fetchNode("packages", packageID);
    };
    ServiceActions.packageAuthorized = function (packageID) {
        return basel_package_auth_helper_1.BaselPackageAuthHelper.packageAuthorized(packageID);
    };
    function processPackagesMeta(partnerCardData, fetchSuccess, fetchFail) {
        var worker = new basel_package_loader_worker_1.BaselPackageLoaderWorker(fetchSuccess, fetchFail);
        worker.requestPartnerPackages(partnerCardData);
    }
    ServiceActions.processPackagesMeta = processPackagesMeta;
})(ServiceActions = exports.ServiceActions || (exports.ServiceActions = {}));
var basel_package_auth_helper_1 = require("../helpers/basel-package-auth-helper");
var basel_package_loader_worker_1 = require("../workers/basel-package-loader-worker");

},{"../helpers/basel-package-auth-helper":25,"../workers/basel-package-loader-worker":27}],27:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.baselPackageLoaderWorker = exports.BaselPackageLoaderWorker = void 0;
var BaselPackageLoaderWorker = (function () {
    function BaselPackageLoaderWorker(onPackageLoad, onPackageFail) {
        var _this = this;
        this.active = false;
        this.worker = new Worker(URL.createObjectURL(new Blob(["(", exports.baselPackageLoaderWorker.toString(), ")()"])));
        this.worker.addEventListener("message", function (ev) { return __awaiter(_this, void 0, void 0, function () {
            var fetchedPackage, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this.packageDidFetch(ev);
                        if (_a) return [3, 2];
                        return [4, this.getPackageFromDB(ev).then(function (data) { return data; })];
                    case 1:
                        _a = (_b.sent());
                        _b.label = 2;
                    case 2:
                        fetchedPackage = _a;
                        if (fetchedPackage) {
                            onPackageLoad(fetchedPackage);
                        }
                        else {
                            onPackageFail(ev);
                        }
                        return [2];
                }
            });
        }); });
        this.active = true;
    }
    BaselPackageLoaderWorker.prototype.requestPartnerPackages = function (partnerCardMeta) {
        this.active && this.worker.postMessage(partnerCardMeta);
    };
    BaselPackageLoaderWorker.prototype.getPackageFromDB = function (msg) {
        return __awaiter(this, void 0, void 0, function () {
            var partner, res;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        partner = msg.data && msg.data.response && msg.data.response.partner;
                        return [4, fetch('https://api.sincrotools.com/partner-portal-api/api/v1/partner/packages/' + partner).then(function (response) { return response.json(); }).then(function (res) {
                                res = res.data && res.data.partner_package;
                                if (res) {
                                    msg.data.response.pkg = res;
                                    msg.data.response.error = void 0;
                                    msg.data.status = "success";
                                }
                                return msg.data;
                            }).catch(function (err) {
                                return void 0;
                            })];
                    case 1:
                        res = _a.sent();
                        return [2, res];
                }
            });
        });
    };
    BaselPackageLoaderWorker.prototype.packageDidFetch = function (msg) {
        var data = msg.data || {};
        var status = typeof data["status"] === "string" && data["status"] === "success";
        var response = typeof data["response"] !== "undefined";
        var partner = typeof data["response"].partner === "string";
        var pkg = typeof data["response"].pkg === "string";
        if (status && response && partner && pkg) {
            return data;
        }
        else {
            return void 0;
        }
    };
    BaselPackageLoaderWorker.prototype.terminate = function () {
        this.worker.terminate();
        this.active = false;
        return void 0;
    };
    return BaselPackageLoaderWorker;
}());
exports.BaselPackageLoaderWorker = BaselPackageLoaderWorker;
var baselPackageLoaderWorker = function () {
    var self = this;
    var workerState = {
        db: void 0,
        dbName: "cdkPartners",
        dbVersion: void 0,
        dbReady: void 0,
        dbUpdate: false,
        dbNew: false,
        dbAvailable: false,
        dbError: void 0,
        dbWriteQueue: [],
        assetsDomain: void 0
    };
    self.onmessage = function (message) {
        var valid = typeof message === "object" && typeof message.data === "object" && typeof message.data.meta !== "undefined";
        if (valid) {
            var meta = message.data;
            initWorker(meta);
        }
    };
    self.onerror = function (error) {
        console.log("ERROR");
        console.log(error);
    };
    function initWorker(partnerCardMeta) {
        var assetsDomain = partnerCardMeta.assetsDomain, meta = partnerCardMeta.meta, version = partnerCardMeta.version;
        workerState.assetsDomain = assetsDomain + "/" + version + "/";
        workerState.dbVersion = getAssetsVersionInteger(version);
        openIDB(workerState.dbName, workerState.dbVersion, function (err) {
            fetchPartners(meta, partnerCardMeta.isNonPartner, function () {
                cacheFetchedPartners(function () {
                    console.log("pfs 200");
                    closeIDB();
                });
            });
        });
    }
    function cacheFetchedPartners(callback) {
        if (!workerState.dbAvailable) {
            return callback();
        }
        else {
            var queue = workerState.dbWriteQueue;
            var total_1 = queue.length;
            var count_1 = 0;
            var writeClose_1 = function () {
                ++count_1;
                if (count_1 === total_1) {
                    return callback();
                }
            };
            queue.forEach(function (item) {
                writeIDB(item.partner, item.data, writeClose_1);
            });
        }
    }
    function fetchPartners(partners, isNonPartner, callback) {
        var queue = Object.keys(partners);
        var total = queue.length;
        var count = 0;
        var fetchPartner = function (partnerName) {
            return fetchPartnerData(partnerName, isNonPartner, function (err, pkgStr) {
                ++count;
                dispatchPartnerData(partnerName, partners[partnerName].partnerProperties, partners[partnerName].sharedInvProperties, pkgStr, err);
                if (count === total) {
                    workerState.dbNew = false;
                    return callback(void 0);
                }
            });
        };
        queue.forEach(fetchPartner);
    }
    function fetchPartnerData(partnerName, isNonPartner, callback) {
        var fetchHandle = function (err, data) {
            if (typeof data === "string") {
                workerState.dbWriteQueue.push({ partner: partnerName, data: data });
            }
            return callback(err, data);
        };
        if (!workerState.dbAvailable || workerState.dbUpdate || workerState.dbNew || workerState.dbError) {
            return fetchPartnerFromExternal(partnerName, isNonPartner, fetchHandle);
        }
        else {
            return fetchPartnerFromDB(partnerName, function (err, data) { return (typeof data === "undefined" || !(({}).hasOwnProperty.call(data, "pkg"))) ? fetchPartnerFromExternal(partnerName, isNonPartner, fetchHandle) : callback(err, data.pkg); });
        }
    }
    function fetchPartnerFromExternal(partnerName, isNonPartner, callback) {
        var baseUrl = isNonPartner ? workerState.assetsDomain + "nonpartner/" : workerState.assetsDomain;
        var externalURL = baseUrl + partnerName + "/" + partnerName + ".package.json";
        return request(externalURL, callback);
    }
    function fetchPartnerFromDB(partnerName, callback) {
        return readIDB(partnerName, callback);
    }
    function dispatchPartnerData(partnerName, partnerParameters, sharedInvProperties, partnerData, err) {
        var response = {
            status: "success",
            response: {
                partner: partnerName,
                parameters: partnerParameters,
                pkg: partnerData
            }
        };
        if (sharedInvProperties)
            response.response.sharedInvProperties = sharedInvProperties;
        if (typeof err !== "undefined") {
            response.status = "error";
            response.response.error = err;
        }
        return self.postMessage(response);
    }
    function getAssetsVersionInteger(assetVersion) {
        var clean = (assetVersion.indexOf("partner-packages-") === 0) && assetVersion.slice(17).replace(/\./g, "");
        return typeof clean === "string" && parseInt(clean, void 0) || void 0;
    }
    function browserCheck() {
        var ua = navigator.userAgent, tem, M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
        if (/trident/i.test(M[1])) {
            tem = /\brv[ :]+(\d+)/g.exec(ua) || [];
            return { name: 'IE', version: (tem[1] || '') };
        }
        if (M[1] === 'Chrome') {
            tem = ua.match(/\b(OPR|Edge)\/(\d+)/);
            if (tem != null)
                return { name: tem[1].replace('OPR', 'Opera'), version: tem[2] };
        }
        M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];
        if ((tem = ua.match(/version\/(\d+)/i)) != null)
            M.splice(1, 1, tem[1]);
        return { name: M[0], version: M[1] };
    }
    function verifyIDB() {
        if (typeof browserCheck === "function") {
            if (browserCheck().name === "Edge" && browserCheck().version <= 18)
                return;
        }
        return self["indexedDB"] = self["indexedDB"] || self["mozIndexedDB"] || self["webkitIndexedDB"] || self["msIndexedDB"] || void 0;
    }
    function openIDB(idbName, idbVersion, callback) {
        workerState.dbAvailable = verifyIDB();
        if (!workerState.dbAvailable) {
            return callback(void 0);
        }
        var reqDB = self["indexedDB"].open(idbName, idbVersion);
        reqDB.onsuccess = function (ev) {
            if (ev.target["result"]) {
                workerState.dbReady = true;
                workerState.db = ev.target["result"];
                workerState.db.onversionchange = function () {
                    closeIDB();
                };
                return callback(void 0);
            }
            else {
                workerState.dbReady = void 0;
                workerState.dbError = "Unable to open IDB Instance " + idbName + " version " + idbVersion + " -- " + this.error.toString();
                return callback(workerState.dbError);
            }
        };
        reqDB.onblocked = function () {
            workerState.dbReady = false;
            workerState.dbError = "Update Blocked by previous version";
            return callback(workerState.dbError);
        };
        reqDB.onupgradeneeded = function (ev) {
            var db = ev.target["result"];
            if (db) {
                workerState.db = db;
                workerState.dbReady = false;
                workerState.dbUpdate = (ev.oldVersion > 0);
                workerState.dbNew = (ev.oldVersion === 0);
                if (workerState.dbUpdate) {
                    db.deleteObjectStore("partners");
                }
                db.createObjectStore("partners", { keyPath: "partner" });
                return;
            }
            else {
                workerState.dbReady = void 0;
                workerState.dbError = "Unable to setup IDB";
                return callback(workerState.dbError);
            }
        };
        reqDB.onerror = function (ev) {
            workerState.dbReady = void 0;
            workerState.dbError = this.error;
            return callback(workerState.dbError);
        };
    }
    function closeIDB() {
        return workerState.db && workerState.db.close();
    }
    function setupIDB(db) {
    }
    function readIDB(partnerName, callback) {
        var req = transctionIDB(["partners"], "readonly").objectStore("partners").get(partnerName);
        req.onsuccess = function (ev) {
            return callback(void 0, this.result);
        };
        req.onerror = function (ev) {
            return callback(this.error, void 0);
        };
    }
    function transctionIDB(targetStores, permissions) {
        return workerState.db.transaction(targetStores, permissions);
    }
    function writeIDB(partnerName, partnerData, callback) {
        var req = transctionIDB(["partners"], "readwrite").objectStore("partners").add({ partner: partnerName, pkg: partnerData });
        req.onerror = function () {
            return callback(this.error);
        };
        req.onsuccess = function () {
            return callback(void 0);
        };
    }
    function request(url, callback) {
        var xhr = new XMLHttpRequest();
        xhr.open("GET", url, true);
        xhr.onreadystatechange = function () {
            if (xhr.readyState === xhr.DONE && xhr.response) {
                return callback(void 0, xhr.response);
            }
        };
        xhr.onerror = function (err) {
            return callback("Error: unable to fetch package from " + url, void 0);
        };
        xhr.send();
    }
    return self;
};
exports.baselPackageLoaderWorker = baselPackageLoaderWorker;

},{}],28:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaselPackageRenderer = void 0;
var basel_extension_1 = require("../basel-extension");
var extensionConfig = {
    extensionID: "basel-package-renderer",
    extensionClusters: [
        "packageControllers"
    ],
    externalModules: ["basel-cache", "basel-logger"],
    extensionActions: void 0
};
var BaselPackageRenderer = (function () {
    function BaselPackageRenderer() {
    }
    BaselPackageRenderer_1 = BaselPackageRenderer;
    BaselPackageRenderer.bootstrap = function (dependencies) {
        var _a;
        var isDealerOn = ((_a = document.querySelector("[src*='harmoniq/init.umd.js']")) === null || _a === void 0 ? void 0 : _a.getAttribute("data-website-provider")) || "sincro";
        var externalConfig = Config.renderConfigs()[isDealerOn];
        var stateUtil = Utilities.State;
        var rendererContext = new Context.RendererContext(externalConfig.context, stateUtil);
        var baselPropertyResolver = new Resolvers.PackagePropertyResolver(Utilities.Tokenizer);
        var packagePropertyResolver = new Resolvers.CustomPropertyResolver(baselPropertyResolver, Utilities.XHR);
        var graphResolver = new Resolvers.PackageNodeResolver(dependencies.graph);
        var propertyResolver = new Resolvers.PropertyResolver(packagePropertyResolver, baselPropertyResolver);
        var controllerFactory = new Controllers.UIControllerFactory(Controllers, externalConfig.elementConfigs, propertyResolver);
        var elementRenderer = new Renderers.ElementRenderer({
            controller: controllerFactory,
            graph: graphResolver,
            property: propertyResolver
        });
        var packageRenderer = new Renderers.PackageRenderer({
            context: rendererContext,
            controller: controllerFactory,
            graph: graphResolver,
            property: propertyResolver
        }, elementRenderer, basel_async_1.BaselAsync);
        var baseRenderer = new Renderers.Renderer(rendererContext, packageRenderer);
        return this.initService(Resolvers.PackageActionResolver, rendererContext, baseRenderer, stateUtil);
    };
    BaselPackageRenderer.initService = function (actionsResolver, context, renderer, state) {
        this.SERVICE = new Services.RenderService({
            actions: actionsResolver,
            context: context,
            renderer: renderer,
            state: state
        });
        return true;
    };
    BaselPackageRenderer.fetchActions = function () {
        return this.SERVICE;
    };
    var BaselPackageRenderer_1;
    BaselPackageRenderer = BaselPackageRenderer_1 = __decorate([
        (0, basel_extension_1.Extension)(extensionConfig, function (dependencies) { return bootstrap(dependencies); }, function () { return fetchActions(); })
    ], BaselPackageRenderer);
    return BaselPackageRenderer;
}());
exports.BaselPackageRenderer = BaselPackageRenderer;
var SERVICE;
function bootstrap(dependencies) {
    var _a;
    if (typeof window === "undefined") {
        return true;
    }
    var isDealerOn = ((_a = document.querySelector("[src*='harmoniq/init.umd.js']")) === null || _a === void 0 ? void 0 : _a.getAttribute("data-website-provider")) || "sincro";
    var externalConfig = Config.renderConfigs()[isDealerOn];
    var stateUtil = Utilities.State;
    var rendererContext = new Context.RendererContext(externalConfig.context, stateUtil);
    var baselPropertyResolver = new Resolvers.PackagePropertyResolver(Utilities.Tokenizer);
    var packagePropertyResolver = new Resolvers.CustomPropertyResolver(baselPropertyResolver, Utilities.XHR);
    var graphResolver = new Resolvers.PackageNodeResolver(dependencies.graph);
    var propertyResolver = new Resolvers.PropertyResolver(packagePropertyResolver, baselPropertyResolver);
    var controllerFactory = new Controllers.UIControllerFactory(Controllers, externalConfig.elementConfigs, propertyResolver);
    var elementRenderer = new Renderers.ElementRenderer({
        controller: controllerFactory,
        graph: graphResolver,
        property: propertyResolver
    });
    var packageRenderer = new Renderers.PackageRenderer({
        context: rendererContext,
        controller: controllerFactory,
        graph: graphResolver,
        property: propertyResolver
    }, elementRenderer, basel_async_1.BaselAsync);
    var baseRenderer = new Renderers.Renderer(rendererContext, packageRenderer);
    return initService(Resolvers.PackageActionResolver, rendererContext, baseRenderer, stateUtil);
}
function initService(actionsResolver, context, renderer, state) {
    SERVICE = new Services.RenderService({
        actions: actionsResolver,
        context: context,
        renderer: renderer,
        state: state
    });
    return true;
}
function fetchActions() {
    return SERVICE;
}
var basel_async_1 = require("../basel-utils/basel-async");
var Config = require("./configuration");
var Context = require("./context");
var Controllers = require("./controllers");
var Renderers = require("./renderers");
var Resolvers = require("./resolvers");
var Services = require("./services");
var Utilities = require("./utilities");

},{"../basel-extension":16,"../basel-utils/basel-async":89,"./configuration":29,"./context":32,"./controllers":40,"./renderers":72,"./resolvers":76,"./services":81,"./utilities":88}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.renderConfigs = void 0;
var sincro_basel_dealeron_config_1 = require("./sincro-basel-dealeron-config");
var renderConfigs = function () {
    var config = {
        dealeron: (0, sincro_basel_dealeron_config_1.baselProviderConfig)()
    };
    var trustedOriginPatterns = [
        /^https:\/\/([a-zA-Z0-9-]+\.)*lectrium\.com$/,
        /^https:\/\/co2-badge\.vercel\.app$/
    ];
    window.addEventListener("message", function (event) {
        var _a;
        if (event.data === "getAscDataLayer" && trustedOriginPatterns.some(function (pattern) { return pattern.test(event.origin); })) {
            (_a = event.source) === null || _a === void 0 ? void 0 : _a.postMessage({ type: "asc_datalayer", data: window === null || window === void 0 ? void 0 : window.asc_datalayer }, event.origin);
        }
    });
    if (window.HarmoniqOverrides && window.HarmoniqOverrides.transformer) {
        Object.keys(config).forEach(function (key) {
            config[key] = window.HarmoniqOverrides.transformer(key, config[key]);
        });
    }
    return config;
};
exports.renderConfigs = renderConfigs;

},{"./sincro-basel-dealeron-config":30}],30:[function(require,module,exports){
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.baselProviderConfig = void 0;
var getVehicleConditionFromDataLayer = function () {
    var _a, _b, _c;
    var dataLayerItems = (_c = (_b = (_a = window.dataLayer) === null || _a === void 0 ? void 0 : _a.find(function (e) { return e && e.event === "do.init"; })) === null || _b === void 0 ? void 0 : _b.do) === null || _c === void 0 ? void 0 : _c.items;
    if (dataLayerItems && dataLayerItems.length > 0) {
        var foundDataVehicleTypes = Array.from(new Set(dataLayerItems.map(function (item) { return item.item_condition; })));
        if (foundDataVehicleTypes.length === 0)
            return "all";
        if (foundDataVehicleTypes.length > 1)
            return "all";
        if (foundDataVehicleTypes[0] === "new")
            return "new";
        if (foundDataVehicleTypes[0] === "used")
            return "used";
    }
    return "all";
};
var baselProviderConfig = function () { return ({
    providerName: "dealerOn",
    elementConfigs: {
        ContentModal: {
            domTarget: {
                default: [{
                        selector: "body",
                        appendMethod: "appendChild"
                    }]
            }
        },
        VehicleIcon: {
            domTarget: {
                vsr: [
                    {
                        appendMethod: "appendChild",
                        selector: ".vehicle-more-info .vehicle-more-info__icons"
                    },
                    {
                        appendMethod: "appendChild",
                        selector: ".pricestak-post"
                    }
                ],
                vdp: [
                    {
                        appendMethod: "appendChild",
                        selector: "#price-stack-post"
                    },
                    {
                        appendMethod: "appendChild",
                        selector: "#pricestak-post"
                    }
                ]
            }
        },
        VehicleGalleryAction: {
            domTarget: {
                vdp: [{
                        selector: ".vehicle-images",
                        appendMethod: "appendChild"
                    }],
                vsr: [{
                        selector: ".vehicle-image",
                        appendMethod: "insertAfter"
                    }]
            }
        },
        VehicleLeadAction: {
            domTarget: {
                vdp: [{
                        selector: ".lead-actions",
                        appendMethod: "appendChild"
                    }]
            }
        },
        VehicleCTA: {
            domTarget: {
                vsr: [
                    {
                        appendMethod: "insertBefore",
                        selector: ".vehicleCallsToAction > ul"
                    },
                    {
                        appendMethod: "appendChild",
                        selector: ".pricestak-post"
                    },
                    {
                        appendMethod: "appendChild",
                        selector: ".vehicleCallsToAction"
                    },
                ],
                vdp: [
                    {
                        appendMethod: "insertBefore",
                        selector: ".vehicleCallsToAction > ul"
                    },
                    {
                        appendMethod: "appendChild",
                        selector: ".pricestak-post"
                    },
                    {
                        appendMethod: "appendChild",
                        selector: ".pricing-tab-content"
                    },
                    {
                        appendMethod: "appendChild",
                        selector: ".vehicleCallsToAction"
                    },
                ]
            }
        },
        VehicleFilterCTA: {
            domTarget: {
                vsr: [{
                        appendMethod: "insertBefore",
                        selector: ".no-exist-in-page"
                    }]
            }
        },
        VehicleGallery: {
            domTarget: {
                vdp: [{
                        appendMethod: "appendChild",
                        selector: "#photoGalleryTabContent"
                    }]
            },
            _internal: {
                galleryContainer: {
                    vdp: "main .vdp .vehicle-images, #content .vdp .vehicle-images",
                },
                galleryPanelContainer: {
                    vdp: "#photoGalleryTabContent"
                },
                galleryPanelItem: {
                    vdp: "#photoGalleryTabContent > .tab-pane"
                },
                galleryTabContainer: {
                    vdp: "#photoGalleryTabsWrapper #photoGalleryTabs"
                },
                galleryTabItem: {
                    vdp: "a"
                },
                galleryTabFlags: {
                    vdp: {
                        hide: "",
                        show: "active"
                    }
                },
                galleryPanelFlags: {
                    vdp: {
                        hide: "",
                        show: "active"
                    }
                }
            }
        },
        VehicleGalleryIcon: {
            domTarget: {
                vdp: [{
                        selector: ".lead-actions",
                        appendMethod: "appendChild"
                    }],
                vsr: [
                    {
                        selector: ".vehicle-image",
                        appendMethod: "insertBefore"
                    }
                ]
            }
        },
        VehicleGalleryOverlay: {
            domTarget: {
                vdp: [{
                        appendMethod: "appendChild",
                        selector: ".no-exist-in-page"
                    }]
            }
        },
        VehiclePlatformCTA: {
            domTarget: {
                vdp: [
                    {
                        appendMethod: "appendChild",
                        selector: ".vehicleCallsToAction > ul"
                    },
                    {
                        appendMethod: "appendChild",
                        selector: ".pricestak-post"
                    },
                    {
                        appendMethod: "insertAfter",
                        selector: "[data-pricestak-tpi-location]"
                    },
                    {
                        appendMethod: "appendChild",
                        selector: ".pricing-tab-content"
                    }
                ],
                vsr: [
                    {
                        appendMethod: "appendChild",
                        selector: ".vehicleCallsToAction > ul"
                    },
                    {
                        appendMethod: "appendChild",
                        selector: ".pricestak-post"
                    },
                    {
                        appendMethod: "insertAfter",
                        selector: "[data-pricestak-tpi-location]"
                    },
                    {
                        appendMethod: "appendChild",
                        selector: ".pricing-tab-content"
                    }
                ]
            }
        },
        VehicleGalleryItem: {
            domTarget: {
                vdp: [
                    {
                        appendMethod: "insertBefore",
                        selector: "#thumbnail--desktop--1"
                    }
                ]
            },
            domTargetMobile: {
                default: [
                    {
                        selector: "#thumbnail--mobile--0",
                        appendMethod: "insertBefore",
                    }
                ]
            }
        },
        VehicleMathbox: {
            domTarget: {
                vsr: [
                    {
                        appendMethod: "appendChild",
                        selector: ".pricestak-post"
                    },
                    {
                        appendMethod: "appendChild",
                        selector: ".vehiclePricingDetails"
                    },
                    {
                        appendMethod: "insertAfter",
                        selector: "[data-pricestak-tpi-location]"
                    }
                ],
                vdp: [
                    {
                        appendMethod: "appendChild",
                        selector: "#price-stack-post"
                    },
                    {
                        appendMethod: "appendChild",
                        selector: ".vehiclePricingDetails"
                    }
                ]
            }
        },
        VehiclePriceBadge: {
            domTarget: {
                vsr: [
                    {
                        appendMethod: "appendChild",
                        selector: ".vehiclePricingHighlights .vehiclePricingHighlight.featuredPrice"
                    }
                ],
                vdp: [
                    {
                        appendMethod: "appendChild",
                        selector: "div:not(.similar-vehicles__cards) > .vehicle-card .vehiclePricingHighlights .vehiclePricingHighlight.featuredPrice"
                    },
                    {
                        appendMethod: "insertBefore",
                        selector: ".vehiclePricingDetails > ul"
                    },
                    {
                        appendMethod: "insertBefore",
                        selector: ".vehiclePricingDetails > .priceBlockCollapse > ul"
                    }
                ]
            }
        },
        VehicleInformation: {
            domTarget: {
                vdp: [
                    {
                        appendMethod: "insertBefore",
                        selector: ".vdp__bottom-block .bottom-block .bottom-block__row.bottom-block__row--info-highlights"
                    }
                ]
            }
        },
        VehicleFeatures: {
            domTarget: {
                vdp: [
                    {
                        appendMethod: "insertBefore",
                        selector: ".vdp__bottom-block .bottom-block .bottom-block__row.bottom-block__item--all-features"
                    },
                    {
                        appendMethod: "insertBefore",
                        selector: ".vdp__bottom-block .bottom-block .bottom-block__row.bottom-block__row--features"
                    }
                ]
            }
        },
        VehicleDescription: {
            domTarget: {
                vdp: [
                    {
                        appendMethod: "insertAfter",
                        selector: ".vdp__bottom-block .bottom-block .bottom-block__row.bottom-block__row--info-highlights"
                    },
                    {
                        appendMethod: "insertBefore",
                        selector: ".vdp__bottom-block .bottom-block .bottom-block__row.bottom-block__item--all-features"
                    },
                ]
            }
        },
        VehicleVideos: {
            domTarget: {
                vdp: [
                    {
                        appendMethod: "appendChild",
                        selector: ".no-exist-in-page"
                    }
                ]
            }, _internal: {
                galleryContainer: {
                    vdp: "main .vdp .vehicle-images",
                },
                galleryPanelContainer: {
                    vdp: ".vehicle-image-carousel"
                },
                galleryPanelItem: {
                    vdp: ".no-exist-in-page"
                },
                galleryTabContainer: {
                    vdp: ".no-exist-in-page"
                },
                galleryTabItem: {
                    vdp: ".no-exist-in-page"
                },
                galleryTabFlags: {
                    vdp: {
                        hide: "",
                        show: ""
                    }
                },
                galleryPanelFlags: {
                    vdp: {
                        hide: "",
                        show: ""
                    }
                }
            }
        },
        VehicleFeaturesIcon: {
            domTarget: {
                vsr: [
                    {
                        appendMethod: "insertBefore",
                        selector: ".vehicle-features .vehicle-more-details > div:first-of-type"
                    },
                    {
                        appendMethod: "appendChild",
                        selector: ".vehicle-features .vehicle-more-details"
                    }
                ]
            }
        },
        CSSBlock: {
            domTarget: {
                default: [{
                        selector: "head",
                        appendMethod: "appendChild"
                    }]
            }
        },
        ScriptBlock: {
            domTarget: {
                default: [{
                        selector: "head",
                        appendMethod: "appendChild"
                    }]
            }
        },
        SmartFAB: {
            domTarget: {
                default: [{
                        selector: "body",
                        appendMethod: "appendChild"
                    }]
            }
        },
        PartnerPage: {
            domTarget: {
                default: [
                    {
                        appendMethod: "appendChild",
                        selector: "#partnerPage"
                    }
                ]
            }
        },
        PrivacyPolicy: {
            domTarget: {
                "privacypolicy": [
                    {
                        appendMethod: "insertBefore",
                        selector: "#privacyPolicy"
                    },
                    {
                        appendMethod: "insertAfter",
                        selector: ".contentWrapper .container h1"
                    },
                    {
                        appendMethod: "insertAfter",
                        selector: ".contentWrapper .container h2"
                    },
                    {
                        appendMethod: "insertAfter",
                        selector: ".contentWrapper .container h3"
                    },
                    {
                        appendMethod: "insertAfter",
                        selector: ".contentWrapper .container h4"
                    },
                    {
                        appendMethod: "insertAfter",
                        selector: ".contentWrapper .container h5"
                    },
                    {
                        appendMethod: "insertAfter",
                        selector: ".contentWrapper .container h6"
                    },
                    {
                        appendMethod: "insertBefore",
                        selector: ".contentWrapper .container"
                    },
                    {
                        appendMethod: "insertBefore",
                        selector: ".contentWrapper"
                    }
                ]
            }
        },
        PageBanner: {
            domTarget: {
                default: [
                    {
                        appendMethod: "insertBefore",
                        selector: "main > section > .content-main"
                    },
                    {
                        appendMethod: "insertBefore",
                        selector: "main > section:nth-child(1)"
                    }
                ],
                vsr: [
                    {
                        appendMethod: "insertBefore",
                        selector: ".wasabi_srp"
                    },
                    {
                        appendMethod: "insertBefore",
                        selector: "main > section:nth-child(1)"
                    }
                ],
                homepage: [
                    {
                        selector: "main .quickIntro",
                        appendMethod: "insertAfter"
                    },
                    {
                        selector: "#content .quickIntro",
                        appendMethod: "insertAfter"
                    },
                    {
                        selector: "main .introSec .bannerSec",
                        appendMethod: "insertAfter"
                    },
                    {
                        selector: "main .introSec section:has(.carousel)",
                        appendMethod: "insertAfter"
                    },
                    {
                        selector: "#content .introSec section:has(.carousel)",
                        appendMethod: "insertAfter"
                    },
                    {
                        selector: "#content .qNavSection",
                        appendMethod: "insertAfter"
                    },
                    {
                        selector: "main .introSec",
                        appendMethod: "insertAfter"
                    },
                    {
                        selector: "#content .introSec",
                        appendMethod: "insertAfter"
                    },
                    {
                        selector: ".homepage section:has(.quickIntro)",
                        appendMethod: "insertAfter"
                    },
                    {
                        selector: "main > section:has(.carousel)",
                        appendMethod: "insertAfter"
                    },
                    {
                        selector: "main > section:first-of-type",
                        appendMethod: "insertAfter"
                    }
                ]
            }
        },
        HeaderIconCTA: {
            domTarget: {
                default: [
                    {
                        selector: "header .iconLinks ul",
                        appendMethod: "appendChild"
                    }
                ]
            },
            domTargetMobile: {
                default: [
                    {
                        selector: "#nav-sidebar ul.navbar-nav",
                        appendMethod: "appendChild"
                    }
                ]
            }
        },
        HeaderRight: {
            domTarget: {
                default: [
                    {
                        selector: "header #rightBlockInfo ul.list-inline",
                        appendMethod: "appendChild"
                    }
                ]
            },
            domTargetMobile: {
                default: [
                    {
                        selector: "#nav-sidebar ul.navbar-nav",
                        appendMethod: "appendChild"
                    }
                ]
            }
        },
        NavigationLink: {
            domTarget: {
                default: [
                    {
                        selector: "nav ul.navbar-nav",
                        appendMethod: "appendChild"
                    }
                ]
            },
            domTargetMobile: {
                default: [
                    {
                        selector: "#nav-sidebar ul.navbar-nav",
                        appendMethod: "appendChild"
                    }
                ]
            }
        },
        SubNavigationLink: {
            domTarget: {
                default: [
                    {
                        selector: "nav ul.navbar-nav",
                        appendMethod: "appendChild"
                    }
                ]
            },
            domTargetMobile: {
                default: [
                    {
                        selector: "#nav-sidebar ul.navbar-nav",
                        appendMethod: "appendChild"
                    }
                ]
            }
        },
        FooterLink: {
            domTarget: {
                default: [
                    {
                        selector: "footer .copyrightAdditionalDisclosures",
                        appendMethod: "insertAfter"
                    },
                    {
                        selector: "footer .copyrightPrivacy",
                        appendMethod: "insertAfter"
                    },
                    {
                        selector: "footer .copyrightSitemap",
                        appendMethod: "insertAfter"
                    },
                    {
                        selector: "footer .copyrightProvider",
                        appendMethod: "insertAfter"
                    },
                    {
                        selector: "footer .copyrightDealerInfo",
                        appendMethod: "insertBefore"
                    }
                ]
            }
        },
        HeroElement: {
            domTarget: {
                default: [
                    {
                        selector: "#carousel-Main > .carousel-inner",
                        appendMethod: "appendChild"
                    }
                ]
            }
        },
        HomePageTopBanner: {
            domTarget: {
                homepage: [
                    {
                        selector: "main",
                        appendMethod: "insertBefore"
                    },
                    {
                        selector: "#content .introSec",
                        appendMethod: "insertBefore"
                    },
                    {
                        selector: ".homepage #content .fancy-banner",
                        appendMethod: "insertBefore"
                    }
                ]
            }
        },
        PageElement: {},
        ModifierElement: {},
        ReloadableElement: {},
        VehicleElement: {}
    },
    context: {
        getVehicleListings: function (context) {
            if (context.pageKey === "vdp") {
                var defaultListing = {
                    category: window["vehicleType"],
                    make: window["vehicleMake"],
                    model: window["vehicleModel"],
                    year: window["vehicleYear"]
                };
                defaultListing.node = document;
                var getListingNG = function (domNode) {
                    var reduceVehicleDetails = function (domNode) {
                        var _a;
                        var inventoryStatus = "In-stock";
                        if (domNode.getAttribute("data-intransit") === "true")
                            inventoryStatus = "In-transit";
                        if (domNode.getAttribute("data-inproduction") === "true")
                            inventoryStatus = "In-production";
                        var price;
                        if (domNode.getAttribute("data-price") !== "0") {
                            price = domNode.getAttribute("data-price");
                        }
                        else if (domNode.getAttribute("data-dotagging-item-price") !== "0") {
                            price = domNode.getAttribute("data-dotagging-item-price");
                        }
                        else {
                            var elemPriceText = (_a = domNode.querySelector(".vdp-pricing-details .vehiclePricingHighlightAmount")) === null || _a === void 0 ? void 0 : _a.innerHTML;
                            price = elemPriceText ? parseFloat(elemPriceText === null || elemPriceText === void 0 ? void 0 : elemPriceText.replace(/[$,]/g, "")) : null;
                        }
                        var data = {
                            inventoryStatus: inventoryStatus,
                            exteriorColor: domNode.getAttribute("data-extcolor"),
                            interiorColor: domNode.getAttribute("data-intcolor"),
                            featuredPrice: price,
                            category: domNode.getAttribute("data-vehicletype"),
                            make: domNode.getAttribute("data-make"),
                            model: domNode.getAttribute("data-model"),
                            trim: domNode.getAttribute("data-trim"),
                            vin: domNode.getAttribute("data-vin"),
                            year: domNode.getAttribute("data-year"),
                            stockNumber: domNode.getAttribute("data-stocknum"),
                            modelCode: domNode.getAttribute("data-modelcode"),
                            transmission: domNode.getAttribute("data-trans"),
                            price: price,
                            engine: domNode.getAttribute("data-engine"),
                            fuelType: domNode.getAttribute("data-fueltype"),
                            bodyStyle: domNode.getAttribute("data-bodystyle"),
                            msrp: domNode.getAttribute("data-msrp"),
                            name: domNode.getAttribute("data-name"),
                            cpo: domNode.getAttribute("data-cpo"),
                            mpgCity: domNode.getAttribute("data-mpgcity"),
                            mpgHwy: domNode.getAttribute("data-mpghwy"),
                            inTransit: domNode.getAttribute("data-intransit"),
                            inProduction: domNode.getAttribute("data-inproduction"),
                            inStock: domNode.getAttribute("data-instock"),
                            location: domNode.getAttribute("data-dotagging-item-location"),
                            webId: domNode.getAttribute("data-dotagging-affiliation"),
                            replacementPriceDiscount: null,
                            salePrice: price,
                            savings: null,
                            discountPrice: price,
                            featuredPriceLabel: null,
                            internetPrice: price,
                            invoicePrice: price,
                            photoUrl: null,
                            detailsUrl: null,
                            styleId: null
                        };
                        return data;
                    };
                    var dataParams = reduceVehicleDetails(domNode);
                    return dataParams;
                };
                var dataparamsdata = getListingNG(defaultListing.node.querySelector(".vdp"));
                var mergedListing = __assign(__assign({}, defaultListing), dataparamsdata);
                var listing = this.normalizeVehicleListing(mergedListing, context.pageKey, context);
                return [listing];
            }
            else {
                return this.vsrFetchListings(context);
            }
        },
        vsrFetchListings: function (context) {
            var _this = this;
            var pageKey = context.pageKey;
            var selector = ".vehicle-card";
            var listingNodes = document.querySelectorAll(selector);
            if (!listingNodes) {
                return [];
            }
            else {
                var getListingNG_1 = function (domNode) {
                    var reduceVehicleDetails = function (domNode) {
                        var _a;
                        var inventoryStatus = "In-stock";
                        if (domNode.getAttribute("data-intransit") === "true")
                            inventoryStatus = "In-transit";
                        if (domNode.getAttribute("data-inproduction") === "true")
                            inventoryStatus = "In-production";
                        var price;
                        if (domNode.getAttribute("data-price") !== "0") {
                            price = domNode.getAttribute("data-price");
                        }
                        else {
                            var elemPriceText = (_a = domNode.querySelector(".pricing-tab-content__pane--buy .vehiclePricingHighlight:last-of-type .vehiclePricingHighlightAmount")) === null || _a === void 0 ? void 0 : _a.innerHTML;
                            price = elemPriceText ? parseFloat(elemPriceText === null || elemPriceText === void 0 ? void 0 : elemPriceText.replace(/[$,]/g, "")) : null;
                        }
                        if (!price && domNode.getAttribute("data-dotagging-item-price") !== "0") {
                            price = domNode.getAttribute("data-dotagging-item-price");
                        }
                        var data = {
                            inventoryStatus: inventoryStatus,
                            exteriorColor: domNode.getAttribute("data-extcolor"),
                            interiorColor: domNode.getAttribute("data-intcolor"),
                            featuredPrice: price,
                            category: domNode.getAttribute("data-vehicletype"),
                            make: domNode.getAttribute("data-make"),
                            model: domNode.getAttribute("data-model"),
                            trim: domNode.getAttribute("data-trim"),
                            vin: domNode.getAttribute("data-vin"),
                            year: domNode.getAttribute("data-year"),
                            stockNumber: domNode.getAttribute("data-stocknum"),
                            modelCode: domNode.getAttribute("data-modelcode"),
                            transmission: domNode.getAttribute("data-trans"),
                            price: price,
                            engine: domNode.getAttribute("data-engine"),
                            fuelType: domNode.getAttribute("data-fueltype"),
                            bodyStyle: domNode.getAttribute("data-bodystyle"),
                            msrp: domNode.getAttribute("data-msrp"),
                            name: domNode.getAttribute("data-name"),
                            cpo: domNode.getAttribute("data-cpo"),
                            mpgCity: domNode.getAttribute("data-mpgcity"),
                            mpgHwy: domNode.getAttribute("data-mpghwy"),
                            inTransit: domNode.getAttribute("data-intransit"),
                            inProduction: domNode.getAttribute("data-inproduction"),
                            inStock: domNode.getAttribute("data-instock"),
                            location: domNode.getAttribute("data-dotagging-item-location"),
                            webId: domNode.getAttribute("data-dotagging-affiliation"),
                            replacementPriceDiscount: null,
                            salePrice: price,
                            savings: null,
                            discountPrice: price,
                            featuredPriceLabel: price,
                            internetPrice: price,
                            invoicePrice: price,
                            photoUrl: null,
                            detailsUrl: null,
                            styleId: null
                        };
                        return data;
                    };
                    var dataParams = reduceVehicleDetails(domNode);
                    var listing = __assign({ node: domNode }, dataParams);
                    return listing;
                };
                var getListings = function (nodeList) {
                    var listings = [];
                    for (var i = 0, len = nodeList.length; i < len; i++) {
                        var _domNode = nodeList[i];
                        listings.push(_this.normalizeVehicleListing(getListingNG_1(_domNode), pageKey));
                    }
                    return listings;
                };
                return getListings(listingNodes);
            }
        },
        normalizeVehicleListing: function (vehicleListing, context) {
            var _a;
            var pageKey = context.pageKey || context;
            var listing = {
                node: vehicleListing.node || document instanceof HTMLElement && document || void 0,
                category: (((_a = vehicleListing.category) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === "carbravo" ? "certified" : vehicleListing.category) || void 0,
                vin: vehicleListing.vin || void 0,
                make: vehicleListing.make || void 0,
                model: vehicleListing.model || void 0,
                year: vehicleListing.year || void 0,
                trim: vehicleListing.trim || void 0,
                fuelType: vehicleListing.fuelType || void 0,
                bodyType: vehicleListing.bodyStyle || void 0,
                modelCode: vehicleListing.modelCode || void 0,
                transmission: vehicleListing.transmission || void 0,
                price: vehicleListing.price || void 0,
                internetPrice: vehicleListing.price || void 0,
                salePrice: vehicleListing.price || void 0,
                salePricePriorty: (vehicleListing.price || "") || void 0,
                featuredPrice: vehicleListing.price || void 0,
                featuredPriceLabel: vehicleListing.featuredPriceLabel || void 0,
                featuredPricePriority: (vehicleListing.price || "") || void 0,
                totalDealerFeaturedPrice: vehicleListing.price || void 0,
                totalDealerFeaturedPricePriorty: (vehicleListing.price || "") || void 0,
                exterior: vehicleListing.exterior || vehicleListing.exteriorColor || void 0,
                interior: vehicleListing.interior || vehicleListing.interiorColor || void 0,
                location: vehicleListing.location || vehicleListing.webId || void 0,
                webId: vehicleListing.webId || void 0,
                invoicePrice: vehicleListing.price || void 0,
                msrp: vehicleListing.msrp || void 0,
                discountPrice: vehicleListing.price || void 0,
                inventoryStatus: vehicleListing.inventoryStatus || void 0,
                savings: vehicleListing.savings || void 0,
                replacementPriceDiscount: vehicleListing.replacementPriceDiscount || void 0,
                styleId: vehicleListing.styleId || void 0,
                get stockNumber() {
                    var valueSet = vehicleListing.stockNumber;
                    if (!valueSet) {
                        var dataNode = this.node.querySelector(".vehicle-info .vehicle-identifiers__item--stock-number .vehicle-identifiers__value");
                        valueSet = dataNode instanceof HTMLElement && dataNode.innerHTML || void 0;
                    }
                    delete this.stockNumber;
                    return this.stockNumber = valueSet;
                },
                get miles() {
                    var valueSet = vehicleListing.miles;
                    if (!valueSet) {
                        var dataNode = this.node.querySelector(".vehicle-info .info__item--mileage .info__details .info__value");
                        valueSet = dataNode instanceof HTMLElement && dataNode.innerHTML || void 0;
                    }
                    delete this.miles;
                    return this.miles = valueSet;
                },
                get photoUrl() {
                    var valueSet = vehicleListing.photoUrl;
                    var dataNode;
                    if (!valueSet) {
                        if (pageKey === "vdp") {
                            dataNode = this.node.querySelector("#thumbnail--desktop--0 .thumbnail__image");
                        }
                        if (pageKey === "vsr") {
                            dataNode = this.node.querySelector(".vehicle-image__image-wrapper [data-image-num='1']");
                        }
                        valueSet = dataNode instanceof HTMLImageElement && dataNode.src || void 0;
                    }
                    delete this.photoUrl;
                    return this.photoUrl = valueSet;
                },
                get detailsUrl() {
                    var _a, _b, _c;
                    var valueSet = vehicleListing.detailsUrl;
                    var dataNode;
                    if (!valueSet) {
                        if (pageKey === "vdp") {
                            valueSet = (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.toString()) === null || _b === void 0 ? void 0 : _b.split("?")) === null || _c === void 0 ? void 0 : _c[0];
                        }
                        if (pageKey === "vsr") {
                            dataNode = document.querySelector("[data-vin=\"".concat(vehicleListing.vin, "\"] a"));
                            valueSet = dataNode instanceof HTMLAnchorElement && dataNode.href || void 0;
                        }
                    }
                    delete this.detailsUrl;
                    return this.detailsUrl = valueSet;
                },
                get trimShort() {
                    var fullTrim = vehicleListing.trim;
                    var trimKeywords = {
                        Cadillac: function () { return ["Premium Luxury", "Luxury", "Platinum"]; }
                    };
                    if (!trimKeywords.hasOwnProperty(vehicleListing.make)) {
                        return "N/A";
                    }
                    var curMake = vehicleListing.make;
                    var trimKeyword = function () { return trimKeywords[curMake]().filter(function (key) {
                        return fullTrim.indexOf(key) > -1;
                    }); };
                    var shortTrim = trimKeyword();
                    return shortTrim.length > 0 && shortTrim[0] || "Base";
                },
                get hasDealershipPhotos() {
                    var value = false;
                    if (pageKey === "vdp") {
                        var selector = ".no-exist-in-page";
                        var elementExists = document.querySelector(selector);
                        value = !!elementExists;
                    }
                    return value;
                },
                get hasManufacturePhotos() {
                    var value = false;
                    if (pageKey === "vdp") {
                        var selector = ".no-exist-in-page";
                        var elementExists = document.querySelector(selector);
                        value = !!elementExists;
                    }
                    return value;
                }
            };
            return listing;
        },
        setGlobalContext: function () {
            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;
            var doPageHeadersContainText = function (text) {
                var headers = Array.from(document.querySelectorAll("h1,h2,h3,h4,h5,h6")) || [];
                var headerTexts = headers.map(function (el) { var _a; return (_a = el === null || el === void 0 ? void 0 : el.innerText) === null || _a === void 0 ? void 0 : _a.toLowerCase(); });
                var matches = headerTexts.filter(function (elText) { return elText.includes(text.toLowerCase()); });
                return matches.length > 0;
            };
            var zip = (_b = (_a = document.querySelector(".copyrightDealerZip")) === null || _a === void 0 ? void 0 : _a.textContent) === null || _b === void 0 ? void 0 : _b.trim();
            var CONTEXT = {
                webId: window["DlronGlobal_DealerId"],
                locale: (_c = window["DlronGlobal_DealerCulture"]) === null || _c === void 0 ? void 0 : _c.replace("-", "_"),
                getLocale: function () { var _a; return (_a = window["DlronGlobal_DealerCulture"]) === null || _a === void 0 ? void 0 : _a.replace("-", "_"); },
                protocol: window.location.protocol,
                city: (_e = (_d = document.querySelector(".copyrightDealerCity")) === null || _d === void 0 ? void 0 : _d.textContent) === null || _e === void 0 ? void 0 : _e.trim(),
                state: (_g = (_f = document.querySelector(".copyrightDealerState")) === null || _f === void 0 ? void 0 : _f.textContent) === null || _g === void 0 ? void 0 : _g.trim(),
                preferredState: (_j = (_h = document.querySelector(".copyrightDealerState")) === null || _h === void 0 ? void 0 : _h.textContent) === null || _j === void 0 ? void 0 : _j.trim(),
                zip: zip,
                shortZip: (_k = zip === null || zip === void 0 ? void 0 : zip.split("-")) === null || _k === void 0 ? void 0 : _k.shift(),
                pageUrl: window.location.href,
                originUrl: window.location.origin,
                hostUrl: window && window.location.hostname,
                oemPrefix: window["DlronGlobal_ActiveOemProgram"],
                provider: "dealeron",
                dealershipName: window["DlronGlobal_DealerName"],
                dealerCode: window["DlronGlobal_DealerCode"],
                primaryPhone: (_o = (_m = (_l = window["DlronGlobal_DealerPhone1"]) === null || _l === void 0 ? void 0 : _l.split(":")) === null || _m === void 0 ? void 0 : _m.pop()) === null || _o === void 0 ? void 0 : _o.trim(),
                secondaryPhone: (_r = (_q = (_p = window["DlronGlobal_DealerPhone2"]) === null || _p === void 0 ? void 0 : _p.split(":")) === null || _q === void 0 ? void 0 : _q.pop()) === null || _r === void 0 ? void 0 : _r.trim(),
                pageKey: (function () {
                    var _currentPage = window.location.pathname;
                    var _isSpecialsPage = _currentPage.indexOf("specials") > -1 ? true : false;
                    var _isVSRPage = document.querySelector(".Search-Inventory-page, .srp-inventory") ? true : false;
                    var _isVDPPage = window["DealerOn_PageName"] === "Vehicle Details" ? true : false;
                    var _isHomePage = _currentPage === "/";
                    var _isVendorPage = _currentPage === "/Vendor";
                    var _isContactForm = _currentPage === "/contactus.aspx";
                    var _isFinanceForm = _currentPage === "/preapproved.aspx";
                    var _isPartsForm = _currentPage === "/orderparts.aspx";
                    var _isThankYouPage = _currentPage.indexOf("thankyou.aspx") > -1;
                    var _isServicePage = _currentPage.indexOf("service.aspx") > -1 || _currentPage.indexOf("serviceappmt.aspx") > -1;
                    var _isPrivacyPolicyPage = _currentPage.indexOf("/privacy.aspx") > -1 || _currentPage.indexOf("privacy-policy") > -1 || doPageHeadersContainText("privacy policy");
                    var _isMySavedVehicles = _currentPage.indexOf("mysavedvehicles") > -1;
                    var _isLandingPage = (!_isHomePage && !_isSpecialsPage && !_isVSRPage && !_isVDPPage && !_isPrivacyPolicyPage && !_isThankYouPage && !_isMySavedVehicles);
                    var _pageKeyMap = {
                        Specials: "specials",
                        VehicleSearchResults: "vsr",
                        VehicleDetails: "vdp",
                        HomePage: "homepage",
                        get PartnerPage() {
                            var urlKey = window.location.search.match(/(\?.*?)(=|&|$|\/)/);
                            return urlKey ? urlKey[1] : "partnerpage";
                        },
                        get VendorPage() {
                            var urlKey = window.location.search.match(/(\?.*?)(=|&|$|\/)/);
                            return urlKey ? urlKey[1] : "vendorpage";
                        },
                        get Vendor_D() {
                            var urlKey = window.location.search.match(/(\?.*?)(=|&|$|\/)/);
                            return urlKey ? urlKey[1] : "vendorpage";
                        },
                        ContactUsForm: "contactform",
                        FinancePreQualForm: "financeform",
                        PartsOrderForm: "partsform",
                        LandingPage: "landingpage",
                        ServiceForm: "serviceform",
                        PrivacyPolicy: "privacypolicy",
                        ThankYou: "thankyou"
                    };
                    var _mapkey = (function () {
                        if (_isHomePage)
                            return "HomePage";
                        if (_isVSRPage)
                            return "VehicleSearchResults";
                        if (_isVDPPage)
                            return "VehicleDetails";
                        if (_isVendorPage)
                            return "VendorPage";
                        if (_isServicePage)
                            return "ServiceForm";
                        if (_isSpecialsPage)
                            return "Specials";
                        if (_isContactForm)
                            return "ContactUsForm";
                        if (_isFinanceForm)
                            return "FinancePreQualForm";
                        if (_isPartsForm)
                            return "PartsOrderForm";
                        if (_isPrivacyPolicyPage)
                            return "PrivacyPolicy";
                        if (_isThankYouPage)
                            return "ThankYou";
                        if (_isLandingPage)
                            return "LandingPage";
                        if (_isMySavedVehicles)
                            return "VehicleSearchResults";
                        return _currentPage;
                    })();
                    return _pageKeyMap[_mapkey] || "default";
                })(),
                get pageName() {
                    if (this.pageKey === "vsr") {
                        return "VehicleSearchResults";
                    }
                    else if (this.pageKey === "vdp") {
                        return "VehicleDetails";
                    }
                    return this.pageKey;
                },
                get pageLabel() {
                    if (this.pageKey === "vsr") {
                        return "VehicleSearchResults";
                    }
                    else if (this.pageKey === "vdp") {
                        return "VehicleDetails";
                    }
                    return this.pageKey;
                },
                get category() {
                    var _a, _b;
                    var vehicleCondition = undefined;
                    if (this.pageKey === "vdp" && window["vehicleType"] && typeof window["vehicleType"] === "string") {
                        vehicleCondition = ((_a = window["vehicleType"]) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === "carbravo" ? "used" : (_b = window["vehicleType"]) === null || _b === void 0 ? void 0 : _b.toLowerCase();
                    }
                    if (this.pageKey === "vsr") {
                        var pageName = window.location.pathname;
                        if (pageName.indexOf("searchall") > -1)
                            vehicleCondition = "all";
                        if (pageName.indexOf("searchnew") > -1)
                            vehicleCondition = "new";
                        if (pageName.indexOf("searchused") > -1)
                            vehicleCondition = "used";
                    }
                    if (!vehicleCondition) {
                        vehicleCondition = getVehicleConditionFromDataLayer();
                    }
                    delete this.category;
                    return this.category = vehicleCondition === "all" ? "both" : vehicleCondition;
                },
                get specificCategory() {
                    var _a, _b;
                    var vehicleCondition = undefined;
                    if (this.pageKey === "vdp" && window["vehicleType"] && typeof window["vehicleType"] === "string") {
                        vehicleCondition = ((_a = window["vehicleType"]) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === "carbravo" ? "certified" : (_b = window["vehicleType"]) === null || _b === void 0 ? void 0 : _b.toLowerCase();
                    }
                    if (this.pageKey === "vsr") {
                        var pageName = window.location.pathname;
                        if (pageName.indexOf("searchall") > -1)
                            vehicleCondition = "all";
                        if (pageName.indexOf("searchnew") > -1)
                            vehicleCondition = "new";
                        if (pageName.indexOf("searchused") > -1)
                            vehicleCondition = "used";
                    }
                    if (!vehicleCondition) {
                        vehicleCondition = getVehicleConditionFromDataLayer();
                    }
                    delete this.specificCategory;
                    return this.specificCategory = vehicleCondition === "all" ? "both" : vehicleCondition;
                },
                get domainName() {
                    var value = window.location.hostname.replace("www.", "").replace(/\.com|\.net|\.org|\.cdk/gi, "");
                    delete this.domainName;
                    return this.domainName = value;
                },
                get conversionPage() {
                    var value = this.pageKey.indexOf("form") > -1;
                    delete this.conversionPage;
                    return this.conversionPage = value;
                },
                get uniquePageNumber() {
                    delete this.uniquePageNumber;
                    return this.uniquePageNumber = "";
                },
                get assetServerUrl() {
                    var _a, _b;
                    var url = (_a = document.querySelector("[src*='harmoniq/init.umd.js']")) === null || _a === void 0 ? void 0 : _a.getAttribute("src");
                    return ((_b = url.match(/^(https?:\/\/[^/]+)/)) === null || _b === void 0 ? void 0 : _b[1]) || null;
                },
                get build() {
                    var data;
                    var el = document.querySelector("[base-basel]") || document.querySelector("[basel]");
                    if (el) {
                        var baselAttribute = el.getAttribute("base-basel") || el.getAttribute("basel");
                        data = window["Co"].util.options.prototype.parse(baselAttribute);
                        var assetsDomain = data["assetsDomain"];
                        if (data["assetsDomain"]) {
                            data.assets = assetsDomain;
                            delete data["assetsDomain"];
                        }
                    }
                    else if (window.BaselConfig) {
                        data = window.BaselConfig.error.state;
                    }
                    else {
                        data = {};
                    }
                    delete this.build;
                    return this.build = data;
                },
                isMobile: typeof navigator !== "undefined" && (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)),
                activeVehicleListings: []
            };
            if (window.location.href.indexOf("localhost") > -1 && !window["ContextManager"]) {
                console.error('Please provide ContextManager to validate basel implementations!');
            }
            CONTEXT.activeVehicleListings = this.getVehicleListings(CONTEXT);
            CONTEXT["vehicle"] = CONTEXT.activeVehicleListings[0];
            CONTEXT["bodyType"] = (_s = CONTEXT.activeVehicleListings[0]) === null || _s === void 0 ? void 0 : _s.bodyStyle,
                CONTEXT["uniquePageName"] = CONTEXT.pageName;
            CONTEXT["getPageName"] = function () { return CONTEXT.pageName; };
            CONTEXT["getVin"] = function () { var _a; return (_a = CONTEXT.activeVehicleListings[0]) === null || _a === void 0 ? void 0 : _a.vin; };
            CONTEXT["getEnvName"] = function () { return window.location.href.indexOf("http://dealeronqa.com/") > -1 ? "dit" : "prod"; };
            window["BaselContext"] = __assign(__assign({}, window["BaselContext"]), CONTEXT);
            return CONTEXT;
        },
        onPageContextChanged: function (context, exec, once) {
            function baselTriggerPlacements() {
                exec.call();
                var bzlResultsUpdatedEvent = new CustomEvent("bzlResultsUpdated");
                window.dispatchEvent(bzlResultsUpdatedEvent);
            }
            var retrievalTimeout;
            document.addEventListener("do.vehiclesearchend", function (event) {
                clearTimeout(retrievalTimeout);
                retrievalTimeout = setTimeout(function () {
                    requestAnimationFrame(function () {
                        var searchResults = document.querySelectorAll('.srp-inventory .vehicle-card');
                        if (searchResults.length > 0) {
                            baselTriggerPlacements();
                        }
                    });
                }, 150);
            });
            function debounce(fn, delay) {
                if (delay === void 0) { delay = 100; }
                var timeout;
                return function () {
                    var _this = this;
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    clearTimeout(timeout);
                    timeout = setTimeout(function () { return fn.apply(_this, args); }, delay);
                };
            }
            function onPricingStackAdded(callback, delay) {
                if (delay === void 0) { delay = 500; }
                var params = new URLSearchParams(window.location.search);
                var disableObserver = params.get("disableObserver") === "true";
                if (disableObserver) {
                    console.warn("Basel: pricing-stack MutationObserver disabled via URL parameter");
                    return;
                }
                var timer;
                function debounce(fn) {
                    clearTimeout(timer);
                    timer = setTimeout(fn, delay);
                }
                function observe(container) {
                    new MutationObserver(function (muts) {
                        var e_1, _a, e_2, _b;
                        try {
                            for (var muts_1 = __values(muts), muts_1_1 = muts_1.next(); !muts_1_1.done; muts_1_1 = muts_1.next()) {
                                var m = muts_1_1.value;
                                try {
                                    for (var _c = (e_2 = void 0, __values(m.addedNodes)), _d = _c.next(); !_d.done; _d = _c.next()) {
                                        var n = _d.value;
                                        if (n.nodeType === 1 && (n.matches('pricing-stack') || n.querySelector('pricing-stack'))) {
                                            debounce(callback);
                                            return;
                                        }
                                    }
                                }
                                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                                finally {
                                    try {
                                        if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                                    }
                                    finally { if (e_2) throw e_2.error; }
                                }
                            }
                        }
                        catch (e_1_1) { e_1 = { error: e_1_1 }; }
                        finally {
                            try {
                                if (muts_1_1 && !muts_1_1.done && (_a = muts_1.return)) _a.call(muts_1);
                            }
                            finally { if (e_1) throw e_1.error; }
                        }
                    }).observe(container, { childList: true, subtree: true });
                }
                function waitForContainer() {
                    var el = document.querySelector('.beforeLeadSubmission');
                    if (el)
                        observe(el);
                    else
                        requestAnimationFrame(waitForContainer);
                }
                waitForContainer();
            }
            onPricingStackAdded(function () {
                baselTriggerPlacements();
            });
            document.addEventListener("do.vehicleloadend", debounce(function () {
                baselTriggerPlacements();
                onPricingStackAdded(function () {
                    baselTriggerPlacements();
                });
            }, 500));
        },
    }
}); };
exports.baselProviderConfig = baselProviderConfig;

},{}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RendererContext = void 0;
var RendererContext = (function () {
    function RendererContext(contextHelpers, stateUtil) {
        var _this = this;
        this.helpers = {
            stateUtil: stateUtil
        };
        this.globalContext = new this.helpers.stateUtil(contextHelpers.setGlobalContext());
        this.getVehicleListings = contextHelpers.getVehicleListings;
        this.vsrFetchListings = contextHelpers.vsrFetchListings;
        this.normalizeVehicleListing = contextHelpers.normalizeVehicleListing;
        this.onGlobalContextChanged = contextHelpers.onPageContextChanged.bind(this);
        this.onPageContextChange(function () { return _this.updateVehicleListings(); });
    }
    RendererContext.prototype.getContext = function (packageState, instanceIndex, element, elementMeta) {
        if (instanceIndex === void 0) { instanceIndex = 0; }
        var self = this;
        return {
            get global() {
                delete this.global;
                return this.global = self.globalContext.fetch();
            },
            get package() {
                delete this.package;
                return this.package = packageState.fetch();
            },
            self: elementMeta,
            get element() {
                delete this.element;
                return this.element = self.getElementContext(element).fetch();
            },
            get vehicle() {
                delete this.vehicle;
                return this.vehicle = self.getVehicleContext(instanceIndex).fetch();
            },
            get window() {
                return window;
            }
        };
    };
    RendererContext.prototype.getElementContext = function (el) {
        return {
            state: el && el.dataset || {},
            get: function (key) { return this.state[key]; },
            fetch: function () { return this.state; },
        };
    };
    RendererContext.prototype.getVehicleContext = function (instanceIndex) {
        var _this = this;
        if (instanceIndex === void 0) { instanceIndex = 0; }
        var vehicleData = function () { return _this.globalContext.get("activeVehicleListings")[instanceIndex]; };
        return new this.helpers.stateUtil(vehicleData());
    };
    RendererContext.prototype.onPageContextChange = function (fn, once) {
        this.onGlobalContextChanged(this.globalContext.fetch(), fn, once);
    };
    RendererContext.prototype.updateVehicleListings = function () {
        return this.globalContext.set("activeVehicleListings", this.getVehicleListings(this.globalContext.fetch()));
    };
    return RendererContext;
}());
exports.RendererContext = RendererContext;

},{}],32:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./basel-renderer-context"), exports);

},{"./basel-renderer-context":31}],33:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentModal = void 0;
var _1 = require("./");
var config = {
    activeNodes: {
        drawer: false,
        wrapper: false
    },
    activePages: { default: true },
    domTarget: void 0,
    elementTypeAlias: "ContentModal",
    reloadable: false,
    passive: true,
    vehicleContext: false,
    defaultCSS: "",
    defaultClass: "bzl-contentmodal"
};
var options = {
    openAction: void 0,
    closeAction: void 0,
    modalTitle: void 0,
    modalCSS: void 0,
    overlayColor: void 0,
    closeOnOverlayClick: void 0,
};
var ContentModal = (function (_super) {
    __extends(ContentModal, _super);
    function ContentModal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.STATE = { visible: false, activeContentId: void 0, activeNode: void 0 };
        _this.registry = {};
        return _this;
    }
    ContentModal.prototype.renderPassive = function (nodeBuilder, optionsResolver, ruleResolver, lifecycleDispatcher, context, callback) {
        var elementData = context.self;
        var options = optionsResolver(elementData.options, context);
        this.registerModalContent(context, nodeBuilder, optionsResolver, ruleResolver, lifecycleDispatcher);
        this.bindModalActions(context, { openAction: options.openAction, closeAction: options.closeAction });
        return callback(void 0);
    };
    ContentModal.prototype.triggerModal = function (contentId) {
        var registration = this.registry[contentId];
        var context = registration && registration.context;
        var willRun = context && typeof registration.willRun === "function" || (registration.willRun(context));
        var contentNode = willRun && this.newContentNode(context);
        if (contentNode) {
            var options_1 = registration.getOptions(context);
            var content = registration.buildContent(contentNode, context);
            var modal = this.createModal(content, options_1, context);
            if (content instanceof HTMLIFrameElement) {
                content.addEventListener("load", function () { return registration.dispatch("elementDidLoad"); });
                content.addEventListener("error", function () { return registration.dispatch("elementDidError"); });
            }
            this.clearModal();
            document.body.appendChild(modal);
            registration.dispatch("elementDidRender");
            this.toggleBodyScrollLock(true);
            this.STATE.activeNode = modal;
            this.STATE.activeContentId = contentId;
            this.STATE.visible = true;
        }
        else {
            registration.dispatch("elementDidError");
        }
    };
    ContentModal.prototype.registerModalContent = function (context, nodeBuilder, optionsResolver, rulesResolver, lifecycleDispatcher) {
        var contentId = context.self.alias;
        this.registry[contentId] = {
            context: context,
            dispatch: function (ev) { return lifecycleDispatcher(ev); },
            buildContent: function (el, context) { return nodeBuilder(el, context.self, context); },
            getOptions: function (context) { return optionsResolver(context.self.options, context); },
            willRun: function (context) { return rulesResolver(context.self, context); }
        };
    };
    ContentModal.prototype.bindModalActions = function (context, actions) {
        var _this = this;
        var contentId = context.self.alias;
        var ctxActions = context.package.__actions;
        var openAction = actions.openAction;
        var closeAction = actions.closeAction;
        openAction && ctxActions.onAction(actions.openAction, function () { return _this.triggerModal(contentId); });
        closeAction && ctxActions.onAction(actions.closeAction, function () { return _this.modalIsActive(contentId) && _this.clearModal(); });
        return !!openAction;
    };
    ContentModal.prototype.newContentNode = function (context) {
        var node;
        var elementData = context.self;
        if (elementData && elementData.dom) {
            var tag = this.resolveProperty(elementData.dom.tag, context);
            node = document.createElement(tag);
        }
        return node;
    };
    ContentModal.prototype.toggleBodyScrollLock = function (lock) {
        if (lock === void 0) { lock = false; }
        var cssClass = "bzl-scroll-lock";
        var body = document.getElementsByTagName("body")[0];
        if (lock) {
            body.classList.add(cssClass);
        }
        else {
            body.classList.remove(cssClass);
        }
    };
    ContentModal.prototype.createModal = function (contentNode, options, context) {
        var _this = this;
        if (options.closeOnOverlayClick === void 0) {
            options.closeOnOverlayClick = true;
        }
        var modalTitle = options.modalTitle;
        var headerActions = options.headerActions || [];
        var overlay = this.createModalOverlay(options);
        var modal = this.createModalShell(context);
        var modalHeader = this.createModalHeader(modalTitle);
        var closeAction = {
            icon: "close",
            event: "click",
            handler: function () { return _this.unloadModal(overlay); }
        };
        headerActions.unshift(closeAction);
        var modalActions = this.createModalHeaderActions(headerActions.map(function (action) { return _this.createModalHeaderAction(action); }));
        modalHeader.appendChild(modalActions);
        modal.appendChild(modalHeader);
        modal.appendChild(contentNode);
        overlay.appendChild(modal);
        if (options.closeOnOverlayClick === true) {
            overlay.addEventListener("click", function () { return _this.unloadModal(overlay); });
        }
        return overlay;
    };
    ContentModal.prototype.createModalShell = function (context) {
        var modal;
        var contentId = context.self && context.self.alias;
        if (typeof contentId === "string") {
            modal = document.createElement("div");
            modal.classList.add("bzl-modal");
            modal.setAttribute("data-bzl-id", contentId);
            modal.setAttribute("data-bzl-ui", "content-modal");
        }
        return modal;
    };
    ContentModal.prototype.createModalHeader = function (modalTitle) {
        var header = document.createElement("div");
        if (modalTitle) {
            header.innerHTML = "<span>" + modalTitle + "</span>";
        }
        header.classList.add("bzl-modal-header");
        return header;
    };
    ContentModal.prototype.createModalHeaderAction = function (buttonAction) {
        var action = document.createElement("div");
        var eventId = buttonAction.event;
        var handler = buttonAction.handler;
        var onlyOnce = buttonAction.once;
        var icon = buttonAction.icon;
        action.classList.add("bzl-modal-action");
        action.innerHTML = "<i class='material-icons' data-notranslate>" + icon + "</i>";
        action.addEventListener(eventId, handler, { once: onlyOnce });
        return action;
    };
    ContentModal.prototype.createModalHeaderActions = function (headerActions) {
        var actions = document.createElement("div");
        actions.classList.add("bzl-modal-actions");
        headerActions.forEach(function (action) { return actions.appendChild(action); });
        return actions;
    };
    ContentModal.prototype.createModalOverlay = function (options) {
        var overlay = document.createElement("div");
        var backgroundColor = options && options.overlayColor || "rgba(0,0,0,0.67)";
        overlay.id = "bzl-modal-overlay";
        overlay.style.backgroundColor = backgroundColor;
        overlay.style.position = "fixed";
        overlay.style.display = "flex";
        overlay.style.justifyContent = "center";
        overlay.style.alignItems = "center";
        overlay.style.height = "100%";
        overlay.style.width = "100%";
        overlay.style.left = "0px";
        overlay.style.top = "0px";
        overlay.style.zIndex = "9999999999";
        return overlay;
    };
    ContentModal.prototype.clearModal = function () {
        var target = this.STATE.activeNode || document.querySelector("#bzl-modal-overlay");
        if (target) {
            target.remove();
            this.STATE.activeNode = void 0;
            this.STATE.visible = false;
            this.STATE.activeContentId = void 0;
        }
    };
    ContentModal.prototype.unloadModal = function (node) {
        var didUnload;
        if (node instanceof HTMLElement) {
            this.toggleBodyScrollLock(false);
            node.remove();
            this.STATE.activeContentId = void 0;
            this.STATE.visible = false;
            didUnload = true;
        }
        return didUnload;
    };
    ContentModal.prototype.modalIsActive = function (contentId) {
        return this.STATE.activeContentId === contentId;
    };
    ContentModal.prototype.modalOnDOM = function (contentId) {
        var selector = "[data-bzl-ui='content-modal'][data-bzl-id='" + contentId + "']";
        var node = document.querySelector(selector) || void 0;
        return node;
    };
    ContentModal.prototype.resolveProperty = function (property, context) {
        return this.resolvers.property.resolveBaselProperty(property, context);
    };
    return ContentModal;
}((0, _1.UIController)(config, options)));
exports.ContentModal = ContentModal;

},{"./":40}],34:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CSSBlock = void 0;
var _1 = require("./");
var config = {
    activeNodes: {
        drawer: false,
        wrapper: false
    },
    activePages: {
        default: true
    },
    domTarget: "head",
    elementTypeAlias: "CSSBlock",
    reloadable: false,
    vehicleContext: false,
    defaultCSS: void 0,
    defaultClass: "bzl-css"
};
var OPTIONS = {
    inlineCSS: void 0,
    href: void 0,
    styleID: void 0,
    await: void 0
};
var CSSBlock = (function (_super) {
    __extends(CSSBlock, _super);
    function CSSBlock() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CSSBlock.prototype.render = function (instanceNode, options, context, eventDispatcher, callback) {
        if (instanceNode instanceof HTMLStyleElement && typeof options.inlineCSS === "string") {
            instanceNode.innerHTML = options.inlineCSS;
            document.getElementsByTagName("head")[0].appendChild(instanceNode);
            eventDispatcher("elementDidRender");
            eventDispatcher("elementDidLoad");
            return callback(void 0);
        }
        else if (instanceNode instanceof HTMLLinkElement && typeof options.href === "string") {
            instanceNode.href = options.href;
            if (options.await) {
                instanceNode.addEventListener("load", function () {
                    eventDispatcher("elementDidLoad");
                    return callback();
                });
                instanceNode.addEventListener("error", function (e) {
                    eventDispatcher("elementDidError");
                    return callback(new Error(e.message));
                });
                document.getElementsByTagName("head")[0].appendChild(instanceNode);
                eventDispatcher("elementDidRender");
            }
            else {
                document.getElementsByTagName("head")[0].appendChild(instanceNode);
                eventDispatcher("elementDidRender");
                return callback();
            }
        }
        else {
            eventDispatcher("elementDidError");
            return callback(new Error("Invalid Element Options, Script Block requires options.inlineJs or options.src"));
        }
    };
    return CSSBlock;
}((0, _1.UIController)(config, OPTIONS)));
exports.CSSBlock = CSSBlock;

},{"./":40}],35:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.FooterLink = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { drawer: false, wrapper: false },
    activePages: { default: true },
    domTarget: void 0,
    defaultCSS: "",
    elementTypeAlias: "FooterLink",
    vehicleContext: false,
    passive: true,
    reloadable: false,
    defaultClass: "bzl-footer-link",
};
var OPTIONS = {
    ctaLabel: void 0,
    href: void 0,
    target: void 0,
};
var FooterLink = (function (_super) {
    __extends(FooterLink, _super);
    function FooterLink() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FooterLink.prototype.renderPassive = function (nodeBuilder, optionsResolver, ruleResolver, lifecycleDispatcher, context, callback) {
        var error;
        var config = this.renderSettings;
        var elementData = this.getElementData(context);
        if (ruleResolver(elementData, context)) {
            var options = optionsResolver(elementData.options, context);
            var element = nodeBuilder(document.createElement("a"), elementData, context);
            var domTarget = this.resolveControllerSelector(this.getParentNode(context), config.domTarget);
            var ctaLabel = options.ctaLabel;
            var href = options.href || void 0;
            var attrTarget = options.target || "_self";
            if (domTarget) {
                try {
                    var footerLink = this.addDecorators(element, href, attrTarget, ctaLabel);
                    this.appendNode(domTarget.appendMethod, footerLink, domTarget.node);
                }
                catch (error) {
                    console.error("Basel Render Error: FooterLink.renderPassive => injecting footer link to domTarget. ".concat(error.message));
                }
            }
            lifecycleDispatcher("elementDidRender");
        }
        else {
            error = new Error("Element Bypassed, render blocked by element rules");
            lifecycleDispatcher("elementDidError");
        }
        return callback(error);
    };
    FooterLink.prototype.addDecorators = function (element, href, target, ctaLabel) {
        var wrapper = this.createWrapper(element);
        element.setAttribute("href", href);
        element.setAttribute("target", target);
        element.innerHTML = ctaLabel;
        wrapper.classList.add("bzlFooterLink");
        return wrapper;
    };
    FooterLink.prototype.createWrapper = function (cta) {
        var wrapper = document.createElement("span");
        wrapper.innerHTML = "&nbsp;|&nbsp;";
        wrapper.appendChild(cta);
        return wrapper;
    };
    return FooterLink;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.FooterLink = FooterLink;

},{".":40}],36:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.HeaderIconCTA = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { drawer: false, wrapper: false },
    activePages: { default: true },
    domTarget: void 0,
    domTargetMobile: void 0,
    defaultCSS: "",
    elementTypeAlias: "HeaderIconCTA",
    vehicleContext: false,
    passive: true,
    reloadable: false,
    defaultClass: "bzl-headericoncta",
};
var OPTIONS = {
    ctaLabel: void 0,
    ctaLink: void 0,
    ctaTarget: void 0,
    icon: void 0,
    link: void 0
};
var HeaderIconCTA = (function (_super) {
    __extends(HeaderIconCTA, _super);
    function HeaderIconCTA() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HeaderIconCTA.prototype.renderPassive = function (nodeBuilder, optionsResolver, ruleResolver, lifecycleDispatcher, context, callback) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        var error;
        var config = this.renderSettings;
        var elementData = this.getElementData(context);
        if (ruleResolver(elementData, context)) {
            var options = optionsResolver(elementData.options, context);
            var element = nodeBuilder(document.createElement("li"), elementData, context);
            var elementMobile = nodeBuilder(document.createElement("li"), elementData, context);
            var domTarget = this.resolveControllerSelector(this.getParentNode(context), config.domTarget);
            var domTargetMobile = this.resolveControllerSelector(this.getParentNode(context), config.domTargetMobile);
            var ctaLabel = options.ctaLabel;
            var ctaLink = options.ctaLink || "javascript:void(0)";
            var ctaTarget = options.ctaTarget || "_self";
            var isDO = ((_a = window["BaselContext"]) === null || _a === void 0 ? void 0 : _a.provider) === "dealeron";
            var iClasses = (_c = this.getCommonCssClasses((_b = domTarget === null || domTarget === void 0 ? void 0 : domTarget.node) === null || _b === void 0 ? void 0 : _b.querySelectorAll("a i"))) === null || _c === void 0 ? void 0 : _c.join(" ");
            var labelClasses = (_e = this.getCommonCssClasses((_d = domTarget === null || domTarget === void 0 ? void 0 : domTarget.node) === null || _d === void 0 ? void 0 : _d.querySelectorAll("a span"))) === null || _e === void 0 ? void 0 : _e.join(" ");
            var iStyles = null;
            if (!isDO) {
                var styles_1 = ((_f = domTarget === null || domTarget === void 0 ? void 0 : domTarget.node) === null || _f === void 0 ? void 0 : _f.querySelector("li a")) ? window.getComputedStyle(domTarget.node.querySelector("li a"), ":before") : null;
                var capturedStyles = ["display", "font-size", "line-height", "text-transform", "color", "margin", "padding"];
                iStyles = styles_1 ? capturedStyles.reduce(function (acc, key) {
                    acc[key] = styles_1.getPropertyValue(key);
                    return acc;
                }, {}) : null;
            }
            var ctaIcon = this.getCTAIcon(options.icon, iClasses, iStyles);
            var aInnerHTML = ctaIcon + "<span class=\"".concat(labelClasses, "\" style=\"display: block\">").concat(ctaLabel, "</span>");
            var liInnerHtml = isDO ? "<a href=\"".concat(ctaLink, "\" target=\"").concat(ctaTarget, "\"><div class=\"iconLink\">").concat(aInnerHTML, "</div></a>") : "<a href=\"".concat(ctaLink, "\" target=\"").concat(ctaTarget, "\">").concat(aInnerHTML, "</a>");
            element.innerHTML = liInnerHtml;
            elementMobile.innerHTML = liInnerHtml;
            element.classList.add("bzl-headericoncta");
            elementMobile.classList.add("bzl-headericoncta");
            if (domTarget) {
                try {
                    this.appendNode(domTarget.appendMethod, element, domTarget.node);
                    if (!isDO && ((_g = options.icon) === null || _g === void 0 ? void 0 : _g.startsWith("fa-"))) {
                        var hasFaCSS = document.querySelector(".fa") ? (_j = (_h = window.getComputedStyle(document.querySelector(".fa"), ":before")) === null || _h === void 0 ? void 0 : _h.fontFamily) === null || _j === void 0 ? void 0 : _j.includes("Awesome") : false;
                        if (!hasFaCSS) {
                            var faCSS = document.createElement("link");
                            faCSS.rel = "stylesheet";
                            faCSS.href = "https://media.assets.sincrod.com/agency/release/agency-web-fonts/FontAwesome/FontAwesome.css";
                            document.head.appendChild(faCSS);
                        }
                    }
                }
                catch (error) {
                    console.error("Basel Render Error: (DealerOn) => HeaderIconCTA.renderPassive => injecting cta to domTarget. ".concat(error.message));
                }
            }
            if (domTargetMobile) {
                try {
                    elementMobile.setAttribute("data-bzl-id", element.getAttribute("data-bzl-id") + "_mobile");
                    this.appendNode(domTargetMobile.appendMethod, elementMobile, domTargetMobile.node);
                }
                catch (error) {
                    console.error("Basel Render Error: (DealerOn) => HeaderIconCTA.renderPassive => injecting cta to domTargetMobile. ".concat(error.message));
                }
            }
            lifecycleDispatcher("elementDidRender");
        }
        else {
            error = new Error("Element Bypassed, render blocked by element rules");
            lifecycleDispatcher("elementDidError");
        }
        return callback(error);
    };
    HeaderIconCTA.prototype.getCTAIcon = function (iconKey, iClasses, iStyles) {
        var styles = "";
        if (iStyles) {
            styles = Object.keys(iStyles).reduce(function (acc, key) {
                acc += "".concat(key, ": ").concat(iStyles[key], ";");
                return acc;
            }, "");
        }
        return (typeof iconKey === "string") ? (iconKey.startsWith("fa-") ? "<i class=\"".concat(iClasses, " fa ").concat(iconKey, "\" style=\"").concat(styles, "\"></i>") : "<i class=\"".concat(iClasses, " material-icons\">").concat(iconKey, "</i>")) : "";
    };
    HeaderIconCTA.prototype.getCommonCssClasses = function (elements) {
        if (!elements || elements.length === 0)
            return [];
        var commonClasses = new Set(elements[0].classList);
        var _loop_1 = function (i) {
            commonClasses = new Set(Array.from(commonClasses).filter(function (cls) { return elements[i].classList.contains(cls); }));
            if (commonClasses.size === 0)
                return "break";
        };
        for (var i = 1; i < elements.length; i++) {
            var state_1 = _loop_1(i);
            if (state_1 === "break")
                break;
        }
        return Array.from(commonClasses);
    };
    return HeaderIconCTA;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.HeaderIconCTA = HeaderIconCTA;

},{".":40}],37:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.HeaderRight = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { drawer: false, wrapper: false },
    activePages: { default: true },
    domTarget: void 0,
    domTargetMobile: void 0,
    defaultCSS: "",
    elementTypeAlias: "HeaderRight",
    vehicleContext: false,
    reloadable: false,
    passive: true,
    defaultClass: "bzl-headerright",
};
var OPTIONS = {};
var HeaderRight = (function (_super) {
    __extends(HeaderRight, _super);
    function HeaderRight() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HeaderRight.prototype.renderPassive = function (nodeBuilder, optionsResolver, ruleResolver, lifecycleDispatcher, context, callback) {
        var error;
        var config = this.renderSettings;
        var elementData = this.getElementData(context);
        if (ruleResolver(elementData, context)) {
            var element = nodeBuilder(document.createElement("li"), elementData, context);
            var elementMobile = nodeBuilder(document.createElement("li"), elementData, context);
            var domTarget = this.resolveControllerSelector(this.getParentNode(context), config.domTarget);
            var domTargetMobile = this.resolveControllerSelector(this.getParentNode(context), config.domTargetMobile);
            element.classList.add("bzl-headerright");
            elementMobile.classList.add("bzl-headerright");
            if (domTarget) {
                try {
                    this.appendNode(domTarget.appendMethod, element, domTarget.node);
                }
                catch (error) {
                    console.error("Basel Render Error: (DealerOn) => HeaderRight.renderPassive => injecting cta to domTarget. ".concat(error.message));
                }
            }
            if (domTargetMobile) {
                try {
                    elementMobile.setAttribute("data-bzl-id", element.getAttribute("data-bzl-id") + "_mobile");
                    this.appendNode(domTargetMobile.appendMethod, elementMobile, domTargetMobile.node);
                }
                catch (error) {
                    console.error("Basel Render Error: (DealerOn) => HeaderRight.renderPassive => injecting cta to domTargetMobile. ".concat(error.message));
                }
            }
            lifecycleDispatcher("elementDidRender");
        }
        else {
            error = new Error("Element Bypassed, render blocked by element rules");
            lifecycleDispatcher("elementDidError");
        }
        return callback(error);
    };
    return HeaderRight;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.HeaderRight = HeaderRight;

},{".":40}],38:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.HeroElement = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { drawer: false, wrapper: false },
    activePages: { default: true },
    domTarget: void 0,
    defaultCSS: "",
    elementTypeAlias: "HeroElement",
    vehicleContext: false,
    passive: true,
    reloadable: false,
    defaultClass: "bzl-hero-element"
};
var OPTIONS = {
    domTarget: void 0,
    targetAll: void 0,
    href: void 0,
    target: void 0,
    src: void 0,
    srcMobile: void 0,
    alt: void 0,
};
var HeroElement = (function (_super) {
    __extends(HeroElement, _super);
    function HeroElement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HeroElement.prototype.renderPassive = function (nodeBuilder, optionsResolver, ruleResolver, lifecycleDispatcher, context, callback) {
        var _this = this;
        var error;
        var config = this.renderSettings;
        var elementData = this.getElementData(context);
        if (ruleResolver(elementData, context)) {
            var options_1 = optionsResolver(elementData.options, context);
            var parentNode = this.getParentNode(context);
            var appendTarget_1 = this.resolveControllerSelector(parentNode, config.domTarget);
            var element_1 = nodeBuilder(document.createElement("img"), elementData, context);
            if (appendTarget_1) {
                if (options_1.targetAll) {
                    var nodeList = parentNode.querySelectorAll(appendTarget_1.selector);
                    Array.prototype.forEach.call(nodeList, function (target) {
                        var currentSlides = target.querySelectorAll(":scope > div.item");
                        var currentSlideCount = currentSlides.length;
                        var newSlideCount = currentSlideCount + 1;
                        var el = _this.createSlide(element_1, newSlideCount, options_1);
                        _this.appendNode(appendTarget_1.appendMethod, el, target);
                        _this.updatePips(appendTarget_1.node, newSlideCount);
                        _this.updateSlideCounts(currentSlides, currentSlideCount, newSlideCount);
                    });
                }
                else {
                    var currentSlides = appendTarget_1.node.querySelectorAll(":scope > div.item");
                    var currentSlideCount = currentSlides.length;
                    var newSlideCount = currentSlideCount + 1;
                    var el = this.createSlide(element_1, newSlideCount, options_1);
                    this.appendNode(appendTarget_1.appendMethod, el, appendTarget_1.node);
                    this.updatePips(appendTarget_1.node, newSlideCount);
                    this.updateSlideCounts(currentSlides, currentSlideCount, newSlideCount);
                }
                lifecycleDispatcher("elementDidRender");
            }
        }
        else {
            error = new Error("Unable to locate DOM node at selector defined in element options");
            lifecycleDispatcher("elementDidError");
        }
        return callback(error);
    };
    HeroElement.prototype.createSlide = function (img, newSlideCount, options) {
        var wrapper = document.createElement("div");
        wrapper.classList.add("item", "banner-slide");
        wrapper.setAttribute("role", "region");
        wrapper.setAttribute("aria-label", "carousel slide number ".concat(newSlideCount, " of ").concat(newSlideCount));
        var anchorElem = document.createElement("a");
        anchorElem.href = options.href;
        anchorElem.classList.add("stat-image-link");
        anchorElem.setAttribute("target", options.target || "_self");
        var pictureElem = document.createElement("picture");
        var sourceDesktop = document.createElement("source");
        var sourceMobile = document.createElement("source");
        sourceDesktop.media = "(min-width: 768px)";
        sourceDesktop.srcset = options.src;
        sourceMobile.media = "(max-width: 769px)";
        sourceMobile.srcset = options.srcMobile || options.src;
        if (sourceMobile.srcset.includes("/media.assets.sincrod.com")) {
            var mobileExt = sourceMobile.srcset.split(".").pop();
            sourceMobile.srcset = sourceMobile.srcset.replace(".".concat(mobileExt), "x768.".concat(mobileExt));
        }
        img.src = options.src;
        img.alt = options.alt;
        img.classList.add("img-responsive");
        pictureElem.appendChild(sourceMobile);
        pictureElem.appendChild(sourceDesktop);
        pictureElem.appendChild(img);
        anchorElem.appendChild(pictureElem);
        wrapper.appendChild(anchorElem);
        return wrapper;
    };
    HeroElement.prototype.updateSlideCounts = function (slides, currentSlideCount, newSlideCount) {
        Array.from(slides).forEach(function (slide) {
            slide.setAttribute("aria-label", slide.getAttribute("aria-label").replace("of ".concat(currentSlideCount.toString()), "of ".concat(newSlideCount.toString())));
        });
    };
    HeroElement.prototype.updatePips = function (heroElement, newSlideCount) {
        var _a;
        var pips = (_a = heroElement === null || heroElement === void 0 ? void 0 : heroElement.parentElement) === null || _a === void 0 ? void 0 : _a.querySelector(".carousel-indicators");
        if (!pips)
            return;
        var newPip = document.createElement("li");
        newPip.setAttribute("data-slide-to", (newSlideCount - 1).toString());
        newPip.classList.add("slideIndicator", "slide-indicator--basic", "hideOnMobile", "stat-dot", "active");
        newPip.tabIndex = 0;
        newPip.role = "button";
        newPip.setAttribute("aria-label", "Go to slide number ".concat(newSlideCount));
        newPip.setAttribute("data-target", "#carousel-Main");
        pips.appendChild(newPip);
    };
    return HeroElement;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.HeroElement = HeroElement;

},{".":40}],39:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.HomePageTopBanner = void 0;
var _1 = require("./");
var CONFIG = {
    activeNodes: { drawer: true, wrapper: true },
    activePages: { default: true },
    elementTypeAlias: "HomePageTopBanner",
    domTarget: void 0,
    reloadable: false,
    passive: false,
    vehicleContext: false,
    defaultClass: "bzl-hometopbanner",
    defaultCSS: void 0
};
var OPTIONS = {};
var HomePageTopBanner = (function (_super) {
    __extends(HomePageTopBanner, _super);
    function HomePageTopBanner() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return HomePageTopBanner;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.HomePageTopBanner = HomePageTopBanner;

},{"./":40}],40:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./ui-controller-factory"), exports);
__exportStar(require("./ui-controller"), exports);
__exportStar(require("./content-modal"), exports);
__exportStar(require("./css-block"), exports);
__exportStar(require("./modifier-element"), exports);
__exportStar(require("./page-banner"), exports);
__exportStar(require("./page-element"), exports);
__exportStar(require("./partner-page"), exports);
__exportStar(require("./reloadable-element"), exports);
__exportStar(require("./script-block"), exports);
__exportStar(require("./smart-fab"), exports);
__exportStar(require("./vehicle-cta"), exports);
__exportStar(require("./vehicle-element"), exports);
__exportStar(require("./vehicle-filter-cta"), exports);
__exportStar(require("./vehicle-gallery-action"), exports);
__exportStar(require("./vehicle-gallery"), exports);
__exportStar(require("./vehicle-icon"), exports);
__exportStar(require("./vehicle-mathbox"), exports);
__exportStar(require("./vehicle-platform-cta"), exports);
__exportStar(require("./vehicle-gallery-icon"), exports);
__exportStar(require("./vehicle-gallery-overlay"), exports);
__exportStar(require("./vehicle-price-badge"), exports);
__exportStar(require("./vehicle-videos"), exports);
__exportStar(require("./vehicle-information"), exports);
__exportStar(require("./vehicle-features"), exports);
__exportStar(require("./vehicle-description"), exports);
__exportStar(require("./header-icon-cta"), exports);
__exportStar(require("./header-right"), exports);
__exportStar(require("./navigation-link"), exports);
__exportStar(require("./sub-navigation-link"), exports);
__exportStar(require("./hero-element"), exports);
__exportStar(require("./vehicle-lead-action"), exports);
__exportStar(require("./homepage-top-banner"), exports);
__exportStar(require("./footer-link"), exports);
__exportStar(require("./privacy-policy"), exports);
__exportStar(require("./vehicle-gallery-item"), exports);
__exportStar(require("./vehicle-features-icon"), exports);

},{"./content-modal":33,"./css-block":34,"./footer-link":35,"./header-icon-cta":36,"./header-right":37,"./hero-element":38,"./homepage-top-banner":39,"./modifier-element":41,"./navigation-link":42,"./page-banner":43,"./page-element":44,"./partner-page":45,"./privacy-policy":46,"./reloadable-element":47,"./script-block":48,"./smart-fab":49,"./sub-navigation-link":50,"./ui-controller":52,"./ui-controller-factory":51,"./vehicle-cta":53,"./vehicle-description":54,"./vehicle-element":55,"./vehicle-features":57,"./vehicle-features-icon":56,"./vehicle-filter-cta":58,"./vehicle-gallery":63,"./vehicle-gallery-action":59,"./vehicle-gallery-icon":60,"./vehicle-gallery-item":61,"./vehicle-gallery-overlay":62,"./vehicle-icon":64,"./vehicle-information":65,"./vehicle-lead-action":66,"./vehicle-mathbox":67,"./vehicle-platform-cta":68,"./vehicle-price-badge":69,"./vehicle-videos":70}],41:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModifierElement = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { drawer: false, wrapper: false },
    activePages: { default: true },
    elementTypeAlias: "ModifierElement",
    reloadable: false,
    passive: true,
    vehicleContext: false,
    domTarget: void 0,
    defaultCSS: "",
    defaultClass: "bzl-modelement"
};
var OPTIONS = {
    domTarget: void 0,
    targetAll: void 0
};
var ModifierElement = (function (_super) {
    __extends(ModifierElement, _super);
    function ModifierElement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ModifierElement.prototype.renderPassive = function (nodeBuilder, optionsResolver, ruleResolver, lifecycleDispatcher, context, callback) {
        var error;
        var elementData = this.getElementData(context);
        var options = optionsResolver(elementData.options, context);
        var targetData = this.resolveControllerSelector(this.getParentNode(context), options.domTarget);
        var targets = targetData && (options.targetAll ? document.querySelectorAll(targetData.selector) : [document.querySelector(targetData.selector)]);
        if (targets && !!(targets[0])) {
            Array.prototype.forEach.call(targets, function (target) {
                nodeBuilder(target, elementData, context);
            });
            lifecycleDispatcher("elementDidRender");
        }
        else {
            error = new Error("Unable to locate DOM Node at specified selector in 'options'");
            lifecycleDispatcher("elementDidError");
        }
        return callback(error);
    };
    return ModifierElement;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.ModifierElement = ModifierElement;

},{".":40}],42:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.NavigationLink = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { drawer: false, wrapper: false },
    activePages: { default: true },
    domTarget: void 0,
    defaultCSS: "",
    elementTypeAlias: "NavigationLink",
    vehicleContext: false,
    passive: true,
    reloadable: false,
    defaultClass: "bzl-navigation-link",
};
var OPTIONS = {
    ctaLabel: void 0,
    href: void 0,
    target: void 0,
};
var NavigationLink = (function (_super) {
    __extends(NavigationLink, _super);
    function NavigationLink() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NavigationLink.prototype.renderPassive = function (nodeBuilder, optionsResolver, ruleResolver, lifecycleDispatcher, context, callback) {
        var _a, _b, _c;
        var error;
        var config = this.renderSettings;
        var elementData = this.getElementData(context);
        if (ruleResolver(elementData, context)) {
            var options = optionsResolver(elementData.options, context);
            var element = nodeBuilder(document.createElement("a"), elementData, context);
            var elementMobile = nodeBuilder(document.createElement("a"), elementData, context);
            var domTarget = this.resolveControllerSelector(this.getParentNode(context), config.domTarget);
            var domTargetMobile = this.resolveControllerSelector(this.getParentNode(context), config.domTargetMobile);
            var ctaLabel = options.ctaLabel;
            var href = options.href || void 0;
            var attrTarget = options.target || "_self";
            var isDO = ((_a = window["BaselContext"]) === null || _a === void 0 ? void 0 : _a.provider) === "dealeron";
            if (domTarget) {
                try {
                    var navItem = this.addDecorators(element, href, attrTarget, ctaLabel, isDO);
                    this.appendNode(domTarget.appendMethod, navItem, domTarget.node);
                }
                catch (error) {
                    console.error("Basel Render Error: NavigationItem.renderPassive => injecting nav item to domTarget. ".concat(error.message));
                }
            }
            if (domTargetMobile) {
                try {
                    var navItem = this.addDecorators(elementMobile, href, attrTarget, ctaLabel, isDO);
                    elementMobile.setAttribute("data-bzl-id", elementMobile.getAttribute("data-bzl-id") + "_mobile");
                    if (isDO) {
                        elementMobile.classList.remove("navlink");
                        elementMobile.classList.add("dropdown-parent-link", "dropdown-toggle", "stat-text-link");
                    }
                    this.appendNode(domTargetMobile.appendMethod, navItem, domTargetMobile.node);
                }
                catch (error) {
                    console.error("Basel Render Error: NavigationItem.renderPassive => injecting nav item to domTargetMobile. ".concat(error.message));
                }
            }
            if (!isDO) {
                (_c = (_b = window["Co"]) === null || _b === void 0 ? void 0 : _b.directive) === null || _c === void 0 ? void 0 : _c.activate();
            }
            lifecycleDispatcher("elementDidRender");
        }
        else {
            error = new Error("Element Bypassed, render blocked by element rules");
            lifecycleDispatcher("elementDidError");
        }
        return callback(error);
    };
    NavigationLink.prototype.addDecorators = function (element, href, target, ctaLabel, isDO) {
        var wrapper = this.createWrapper(element);
        element.setAttribute("href", href);
        element.setAttribute("target", target);
        element.innerHTML = ctaLabel;
        if (isDO) {
            wrapper.classList.add("dropdown");
            element.classList.add("navlink", "stat-text-link");
            wrapper.addEventListener("mouseover", function () {
                wrapper.classList.add("open");
            });
            wrapper.addEventListener("mouseout", function () {
                wrapper.classList.remove("open");
            });
            return wrapper;
        }
        wrapper.classList.add("navigation-link");
        element.setAttribute("role", "button");
        var span = document.createElement("span");
        span.innerText = element.innerText;
        element.innerHTML = span.outerHTML;
        return wrapper;
    };
    NavigationLink.prototype.createWrapper = function (cta) {
        var wrapper = document.createElement("li");
        wrapper.appendChild(cta);
        return wrapper;
    };
    return NavigationLink;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.NavigationLink = NavigationLink;

},{".":40}],43:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PageBanner = void 0;
var _1 = require("./");
var CONFIG = {
    activeNodes: { drawer: true, wrapper: true },
    activePages: { default: true },
    elementTypeAlias: "PageBanner",
    domTarget: void 0,
    reloadable: false,
    passive: false,
    vehicleContext: false,
    defaultClass: "bzl-banner",
    defaultCSS: void 0
};
var OPTIONS = {};
var PageBanner = (function (_super) {
    __extends(PageBanner, _super);
    function PageBanner() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PageBanner;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.PageBanner = PageBanner;

},{"./":40}],44:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PageElement = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { drawer: false, wrapper: false },
    activePages: { default: true },
    elementTypeAlias: "PageElement",
    reloadable: false,
    passive: false,
    vehicleContext: false,
    domTarget: void 0,
    defaultCSS: "",
    defaultClass: "bzl-pageelement"
};
var OPTIONS = {
    domTarget: void 0,
    targetAll: void 0
};
var PageElement = (function (_super) {
    __extends(PageElement, _super);
    function PageElement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PageElement.prototype.render = function (element, options, context, eventDispatcher, callback) {
        var _this = this;
        var error;
        var parentNode = this.getParentNode(context);
        var appendTarget = this.resolveControllerSelector(parentNode, options.domTarget);
        if (appendTarget) {
            if (options.targetAll) {
                var nodeList = parentNode.querySelectorAll(appendTarget.selector);
                Array.prototype.forEach.call(nodeList, function (target) {
                    var el = Object.assign(element.cloneNode(true), element);
                    _this.appendNode(appendTarget.appendMethod, el, target);
                });
            }
            else {
                this.appendNode(appendTarget.appendMethod, element, appendTarget.node);
            }
            eventDispatcher("elementDidRender");
        }
        else {
            error = new Error("Unable to locate DOM node at selector defined in element options");
            eventDispatcher("elementDidError");
        }
        return callback(error);
    };
    return PageElement;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.PageElement = PageElement;

},{".":40}],45:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PartnerPage = void 0;
var _1 = require("./");
var CONFIG = {
    activeNodes: {
        wrapper: false,
        drawer: false
    },
    activePages: {
        partnerpage: true
    },
    elementTypeAlias: "PartnerPage",
    vehicleContext: false,
    reloadable: false,
    passive: false,
    defaultCSS: "",
    domTarget: void 0,
    defaultClass: "bzl-landingpage"
};
var OPTIONS = {
    urlKey: void 0,
    waitForContent: void 0,
    iframePostResize: void 0,
    pageTitle: void 0
};
var PartnerPage = (function (_super) {
    __extends(PartnerPage, _super);
    function PartnerPage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.layoutFix = function (platform) {
            if (platform === "TETRA") {
                window["jQuery"]("#content > .flexible").trigger("masonryLayoutChanged");
            }
            return;
        };
        return _this;
    }
    PartnerPage.patchRenderConfig = function (context) {
        var _a;
        var config;
        if (context && context.global) {
            var pageKey = context.global.pageKey;
            var isActive = (pageKey === context.self.options["urlKey"] && ["Vendor_D", "Vendor", "PartnerPage", "VendorPage"].includes(context.self.elType));
            config = {
                activePages: (_a = {},
                    _a[pageKey] = isActive,
                    _a),
                vehicleContext: false,
                reloadable: false,
                passive: false
            };
        }
        return config;
    };
    PartnerPage.prototype.render = function (element, options, context, eventDispatcher, callback) {
        var _this = this;
        var platform = context.global.platform;
        var target = this.getAppendTarget(this.getParentNode(context));
        document.title = options.pageTitle || context.global.dealershipName;
        if (element instanceof HTMLIFrameElement) {
            element.addEventListener("load", function () {
                if (options.iframePostResize) {
                    _this.registerIframePostMessage(element, options);
                }
                eventDispatcher("elementDidLoad");
                eventDispatcher("elementContentInjected");
            });
            this.removePlaceholder(platform);
        }
        else {
            if (options.waitForContent) {
                this.applyMutationObserver(element, context, eventDispatcher);
            }
            else {
                this.removePlaceholder(platform);
            }
        }
        this.appendNode(target.appendMethod, element, target.node);
        eventDispatcher("elementDidRender");
        return callback();
    };
    PartnerPage.prototype.applyMutationObserver = function (observeTarget, platform, eventDispatcher) {
        var _this = this;
        observeTarget.setAttribute("data-basel-hide", "");
        var observer = new MutationObserver(function (mutations) {
            mutations.forEach(function (mutation) {
                _this.removePlaceholder(platform);
                observeTarget.removeAttribute("data-basel-hide");
                eventDispatcher("elementContentInjected");
                observer.disconnect();
            });
        });
        observer.observe(observeTarget, { childList: true });
    };
    PartnerPage.prototype.removePlaceholder = function (platform) {
        this.elementRemovePolyfill();
        var placeholder = document.getElementById("loadingContainer");
        if (!placeholder) {
            this.layoutFix(platform);
            return;
        }
        else if (platform === "TETRA") {
            var placeholderContainer = placeholder.parentElement.parentElement.parentElement.parentElement;
            if (!placeholderContainer.classList.contains("cell")) {
                return;
            }
            placeholderContainer.remove();
            this.layoutFix(platform);
            return;
        }
        else {
            return placeholder.remove();
        }
    };
    PartnerPage.prototype.elementRemovePolyfill = function () {
        if (!("remove" in Element.prototype)) {
            Element.prototype.remove = function () {
                if (this.parentNode) {
                    this.parentNode.removeChild(this);
                }
            };
        }
    };
    PartnerPage.prototype.registerIframePostMessage = function (iframeNode, options) {
        var iframePostResize = options.iframePostResize;
        var _iframeTargetOrigin = iframePostResize.hasOwnProperty("iframePostOrigin") && iframePostResize.iframePostOrigin;
        var iframeTargetOrigin = (_iframeTargetOrigin && _iframeTargetOrigin !== "default") ? _iframeTargetOrigin : iframeNode.src;
        var postUntilIsActive = iframePostResize["postUntilResponse"];
        var postIntervalActive = false;
        var postInterval = function () {
            postInterval = setInterval(postMessageToIframe, 500);
            var clearPostInterval = function () { return (!!postIntervalActive) ? clearInterval(postInterval) : null; };
            setTimeout(clearPostInterval, 5000);
            return postInterval;
        };
        var postMessageToIframe = function () {
            var messageData = {
                origin: document.location.href,
                height: document.documentElement.clientHeight,
                width: document.documentElement.clientWidth,
                message: "Please Send Iframe Width and Height."
            };
            iframeNode.contentWindow.postMessage(messageData, iframeTargetOrigin);
            return true;
        };
        var initPostMessageListener = function () {
            var postUntilMinHeight = postUntilIsActive && postUntilIsActive["minHeightValue"];
            var handleFrameMessage = function (e) {
                if (e.origin !== iframeTargetOrigin) {
                    return;
                }
                else {
                    var data = e.data;
                    var height = data.height, width = data.width;
                    if (postIntervalActive) {
                        if (postUntilMinHeight && e.data.height < postUntilMinHeight) {
                            return;
                        }
                        clearInterval(postInterval);
                        postIntervalActive = false;
                    }
                    if (height) {
                        iframeNode.style.height = height + "px";
                    }
                    if (width) {
                        iframeNode.style.width = width + "px";
                    }
                    return;
                }
            };
            window.addEventListener("message", handleFrameMessage, false);
            return true;
        };
        var initResizeListener = function () {
            window.addEventListener("resize", function () {
                postMessageToIframe();
            });
            return;
        };
        initPostMessageListener();
        initResizeListener();
        if (postUntilIsActive) {
            postIntervalActive = true;
            postInterval();
        }
        else {
            postMessageToIframe();
        }
        return iframeNode;
    };
    return PartnerPage;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.PartnerPage = PartnerPage;

},{"./":40}],46:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrivacyPolicy = void 0;
var _1 = require("./");
var CONFIG = {
    activeNodes: { drawer: true, wrapper: true },
    activePages: { default: false, privacypolicy: true },
    elementTypeAlias: "PrivacyPolicy",
    domTarget: void 0,
    reloadable: false,
    passive: false,
    vehicleContext: false,
    defaultClass: "bzl-privacy-policy",
    defaultCSS: void 0
};
var OPTIONS = {};
var PrivacyPolicy = (function (_super) {
    __extends(PrivacyPolicy, _super);
    function PrivacyPolicy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PrivacyPolicy;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.PrivacyPolicy = PrivacyPolicy;

},{"./":40}],47:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReloadableElement = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { drawer: false, wrapper: false },
    activePages: { default: true },
    elementTypeAlias: "ReloadableElement",
    reloadable: true,
    passive: false,
    vehicleContext: false,
    domTarget: void 0,
    defaultCSS: "",
    defaultClass: "bzl-reloadable"
};
var OPTIONS = {
    domTarget: void 0,
    targetAll: void 0
};
var ReloadableElement = (function (_super) {
    __extends(ReloadableElement, _super);
    function ReloadableElement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ReloadableElement.prototype.render = function (element, options, context, eventDispatcher, callback) {
        var _this = this;
        var error;
        var parentNode = this.getParentNode(context);
        var appendTarget = this.resolveControllerSelector(parentNode, options.domTarget);
        if (appendTarget) {
            if (options.targetAll) {
                var nodeList = parentNode.querySelectorAll(appendTarget.selector);
                Array.prototype.forEach.call(nodeList, function (target) {
                    _this.appendNode(appendTarget.appendMethod, element.cloneNode(true), target);
                });
            }
            else {
                this.appendNode(appendTarget.appendMethod, element, appendTarget.node);
            }
            eventDispatcher("elementDidRender");
        }
        else {
            error = new Error("Unable to locate DOM node at selector defined in element options");
            eventDispatcher("elementDidError");
        }
        return callback(error);
    };
    return ReloadableElement;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.ReloadableElement = ReloadableElement;

},{".":40}],48:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScriptBlock = void 0;
var _1 = require("./");
var config = {
    activeNodes: {
        drawer: false,
        wrapper: false
    },
    activePages: {
        default: true
    },
    domTarget: "head",
    elementTypeAlias: "ScriptBlock",
    reloadable: false,
    vehicleContext: false,
    defaultCSS: void 0,
    defaultClass: "bzl-script"
};
var OPTIONS = {
    await: void 0,
    defer: void 0,
    inlineJs: void 0,
    src: void 0,
    singleInstance: void 0,
    location: void 0
};
var ScriptBlock = (function (_super) {
    __extends(ScriptBlock, _super);
    function ScriptBlock() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ScriptBlock.prototype.render = function (instanceNode, options, context, eventDispatcher, callback) {
        var script = instanceNode;
        var appendTargetSelector = options.location || "head";
        var appendTarget = document.querySelector(appendTargetSelector);
        if (typeof options.inlineJs === "string") {
            script.innerHTML = options.inlineJs;
            appendTarget.appendChild(script);
            eventDispatcher("elementDidRender");
            eventDispatcher("elementDidLoad");
            return callback(void 0);
        }
        else if (options.src) {
            script.src = options.src;
            script.addEventListener("load", function (e) {
                eventDispatcher("elementDidLoad");
            });
            if (options.await) {
                script.addEventListener("load", function (e) {
                    return callback();
                });
                script.addEventListener("error", function (e) {
                    eventDispatcher("elementDidError");
                    return callback(new Error(e.message));
                });
                appendTarget.appendChild(script);
                eventDispatcher("elementDidRender");
            }
            else {
                appendTarget.appendChild(script);
                eventDispatcher("elementDidRender");
                return callback();
            }
        }
        else {
            eventDispatcher("elementDidError");
            return callback(new Error("Invalid Element Options, Script Block requires options.inlineJs or options.src"));
        }
    };
    return ScriptBlock;
}((0, _1.UIController)(config, OPTIONS)));
exports.ScriptBlock = ScriptBlock;

},{"./":40}],49:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SmartFAB = void 0;
var _1 = require("./");
var CONFIG = {
    activeNodes: { drawer: true, wrapper: false },
    activePages: { default: true },
    reloadable: false,
    vehicleContext: false,
    defaultCSS: "",
    defaultClass: "bzl-smartfab",
    domTarget: void 0,
    elementTypeAlias: "SmartFAB"
};
var OPTIONS = {};
var SmartFAB = (function (_super) {
    __extends(SmartFAB, _super);
    function SmartFAB() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SmartFAB.prototype.bindChatIcon = function (injectedNode) {
        var chatSelector = "";
        var chatAction = document.querySelector(chatSelector);
        if (chatAction) {
            chatAction.addEventListener("click", function (e) {
                e.preventDefault();
                if (injectedNode instanceof HTMLElement) {
                    injectedNode.click();
                }
            });
        }
    };
    return SmartFAB;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.SmartFAB = SmartFAB;

},{"./":40}],50:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubNavigationLink = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { drawer: false, wrapper: false },
    activePages: { default: true },
    domTarget: void 0,
    defaultCSS: "",
    elementTypeAlias: "SubNavigationLink",
    vehicleContext: false,
    passive: true,
    reloadable: false,
    defaultClass: "bzl-sub-navigation-link",
};
var OPTIONS = {
    ctaLabel: void 0,
    href: void 0,
    target: void 0,
    parentNavText: void 0
};
var SubNavigationLink = (function (_super) {
    __extends(SubNavigationLink, _super);
    function SubNavigationLink() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SubNavigationLink.prototype.renderPassive = function (nodeBuilder, optionsResolver, ruleResolver, lifecycleDispatcher, context, callback) {
        var _a, _b, _c;
        var error;
        var config = this.renderSettings;
        var elementData = this.getElementData(context);
        if (ruleResolver(elementData, context)) {
            var options = optionsResolver(elementData.options, context);
            var element = nodeBuilder(document.createElement("a"), elementData, context);
            var elementMobile = nodeBuilder(document.createElement("a"), elementData, context);
            var domTarget = this.resolveControllerSelector(this.getParentNode(context), config.domTarget);
            var domTargetMobile = this.resolveControllerSelector(this.getParentNode(context), config.domTargetMobile);
            var ctaLabel = options.ctaLabel;
            var href = options.href || void 0;
            var attrTarget = options.target || "_self";
            var parentNavText = options.parentNavText || void 0;
            var isDO = ((_a = window["BaselContext"]) === null || _a === void 0 ? void 0 : _a.provider) === "dealeron";
            if (domTarget) {
                try {
                    var navItem = this.addDecorators(element, href, attrTarget, ctaLabel, isDO);
                    var destination = isDO
                        ? this.getParentNav(domTarget.node, parentNavText, "> ul")
                        : (_b = this.getParentNav(domTarget.node, parentNavText, "li.subnavigation-link")) === null || _b === void 0 ? void 0 : _b.closest("ul");
                    this.appendNode(domTarget.appendMethod, navItem, destination);
                }
                catch (error) {
                    console.error("Basel Render Error: SubNavigationItem.renderPassive => injecting subnav item to domTarget ".concat(parentNavText, ". ").concat(error.message));
                }
            }
            if (domTargetMobile) {
                try {
                    var navItem = this.addDecorators(elementMobile, href, attrTarget, ctaLabel, isDO);
                    var destination = isDO
                        ? this.getParentNav(domTargetMobile.node, parentNavText, "> ul")
                        : (_c = this.getParentNav(domTargetMobile.node, parentNavText, "li.subnavigation-link")) === null || _c === void 0 ? void 0 : _c.closest("ul");
                    elementMobile.setAttribute("data-bzl-id", elementMobile.getAttribute("data-bzl-id") + "_mobile");
                    if (isDO) {
                        navItem.setAttribute("role", "none");
                    }
                    this.appendNode(domTargetMobile.appendMethod, navItem, destination);
                }
                catch (error) {
                    console.error("Basel Render Error: SubNavigationItem.renderPassive => injecting nav item to domTargetMobile index ".concat(parentNavText, ". ").concat(error.message));
                }
            }
            lifecycleDispatcher("elementDidRender");
        }
        else {
            error = new Error("Element Bypassed, render blocked by element rules");
            lifecycleDispatcher("elementDidError");
        }
        return callback(error);
    };
    SubNavigationLink.prototype.addDecorators = function (element, href, target, ctaLabel, isDO) {
        var wrapper = this.createWrapper(element);
        element.setAttribute("href", href);
        element.setAttribute("target", target);
        element.innerHTML = ctaLabel;
        if (isDO) {
            wrapper.setAttribute("role", "presentation");
            element.setAttribute("role", "menuitem");
            return wrapper;
        }
        wrapper.classList.add("subnavigation-link");
        return wrapper;
    };
    SubNavigationLink.prototype.getParentNav = function (domTarget, parentNavText, subNavSelector) {
        var e_1, _a;
        var navItems = Array.from(domTarget.querySelectorAll(":scope > li > a, :scope > li > div"));
        try {
            for (var navItems_1 = __values(navItems), navItems_1_1 = navItems_1.next(); !navItems_1_1.done; navItems_1_1 = navItems_1.next()) {
                var nav = navItems_1_1.value;
                var navText = nav.innerText.trim().toLowerCase();
                var parentText = parentNavText.trim().toLowerCase();
                if (navText === parentText)
                    return nav.closest("li").querySelector(":scope ".concat(subNavSelector));
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (navItems_1_1 && !navItems_1_1.done && (_a = navItems_1.return)) _a.call(navItems_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return null;
    };
    SubNavigationLink.prototype.createWrapper = function (cta) {
        var wrapper = document.createElement("li");
        wrapper.appendChild(cta);
        return wrapper;
    };
    return SubNavigationLink;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.SubNavigationLink = SubNavigationLink;

},{".":40}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UIControllerFactory = void 0;
var UIControllerFactory = (function () {
    function UIControllerFactory(availableControllers, controllerConfigs, propertyResolver) {
        this.controllers = {};
        this.availableControllers = availableControllers;
        this.controllerConfigs = controllerConfigs;
        this.helpers = {
            properties: propertyResolver
        };
    }
    UIControllerFactory.prototype.fetchController = function (controllerAlias, context) {
        var alias = this.formatDeprecatedAliases(controllerAlias);
        var controller = this.controllers[alias];
        if (!controller) {
            controller = this.setController(alias, this.setupController(alias, context));
        }
        return controller;
    };
    UIControllerFactory.prototype.setupController = function (controllerAlias, context) {
        controllerAlias = this.formatDeprecatedAliases(controllerAlias);
        var activeController;
        var controller = controllerAlias && this.availableControllers[controllerAlias];
        activeController = controller ? new controller(this.helpers.properties, this.resolveControllerConfig(controllerAlias, context)) : void 0;
        return activeController;
    };
    UIControllerFactory.prototype.setController = function (controllerAlias, controller) {
        controllerAlias = this.formatDeprecatedAliases(controllerAlias);
        return controller && controller.ready ? this.controllers[controllerAlias] = controller : void 0;
    };
    UIControllerFactory.prototype.getControllerConfig = function (controllerAlias, context) {
        var config;
        controllerAlias = this.formatDeprecatedAliases(controllerAlias);
        var controller = controllerAlias ? this.availableControllers[controllerAlias] : void 0;
        if (controller) {
            config = (typeof controller.patchRenderConfig === "function") ? controller.patchRenderConfig(context) : controller.renderConfig;
        }
        return config;
    };
    UIControllerFactory.prototype.resolveControllerConfig = function (controllerAlias, context) {
        var _this = this;
        var configuration = this.controllerConfigs[controllerAlias];
        return Object.keys(configuration).reduce(function (config, configProperty) {
            if (configProperty === "_internal") {
                var base_1 = configuration[configProperty];
                config[configProperty] = Object.keys(base_1).reduce(function (internal, prop) {
                    internal[prop] = _this.resolveDynamicField(base_1[prop], context);
                    return internal;
                }, {});
            }
            else {
                config[configProperty] = _this.resolveDynamicField(configuration[configProperty], context);
            }
            return config;
        }, {});
    };
    UIControllerFactory.prototype.resolveDynamicField = function (fieldToResolve, context) {
        var _a = context.global, oemPrefix = _a.oemPrefix, pageKey = _a.pageKey;
        var base = fieldToResolve;
        base = base[pageKey] || base["default"] || void 0;
        return base;
    };
    UIControllerFactory.prototype.formatDeprecatedAliases = function (alias) {
        var formatted = alias;
        var aliases = {
            SCRIPT_BLOCK: "ScriptBlock",
            VEHICLE_ICON: "VehicleIcon",
            CSS_BLOCK: "CSSBlock",
            VEHICLE_MATHBOX: "VehicleMathbox",
            PARTNER_PAGE: "PartnerPage",
            VendorPage: "PartnerPage",
            Vendor_D: "PartnerPage",
            VENDOR_PAGE: "PartnerPage",
            VEHICLE_GALLERY: "VehicleGallery",
            SMART_FAB: "SmartFAB",
            VEHICLE_CTA: "VehicleCTA",
            VEHICLE_FILTER_CTA: "VehicleFilterCTA",
            VEHICLE_GALLERY_ACTION: "VehicleGalleryAction",
            VEHICLE_GALLERY_OVERLAY: "VehicleGalleryOverlay",
            VEHICLE_PLATFORM_CTA: "VehiclePlatformCTA",
            GENERIC_PAGE_ELEMENT: "GenericPageElement",
            PAGE_BANNER: "PageBanner"
        };
        var deprecated = aliases[alias];
        if (deprecated) {
            formatted = deprecated;
        }
        return formatted;
    };
    return UIControllerFactory;
}());
exports.UIControllerFactory = UIControllerFactory;

},{}],52:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UIController = void 0;
function UIController(config, options) {
    var _a;
    var controller = (_a = (function () {
            function UIController(propertyResolver, elementConfig) {
                this.options = options;
                this.resolvers = {
                    property: propertyResolver
                };
                this.renderSettings = elementConfig;
                this.Static.setup.internal = elementConfig._internal;
                if (this.renderSettings.defaultCSS) {
                    this.writeCSS(this.renderSettings.defaultCSS);
                }
                this.ready = true;
            }
            Object.defineProperty(UIController, "renderConfig", {
                get: function () {
                    return {
                        activePages: this.setup.activePages,
                        vehicleContext: this.setup.vehicleContext,
                        reloadable: this.setup.reloadable,
                        passive: this.setup.passive
                    };
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(UIController.prototype, "Static", {
                get: function () {
                    return controller;
                },
                enumerable: false,
                configurable: true
            });
            UIController.prototype.render = function (element, options, context, eventDispatcher, callback) {
                var node = element;
                var parentNode = this.getParentNode(context);
                var hasDrawer = this.Static.setup.activeNodes.drawer;
                var hasWrapper = this.Static.setup.activeNodes.wrapper;
                var alias = node.getAttribute("data-bzl-id");
                if (hasDrawer && !(this.drawerExists(parentNode))) {
                    this.renderDrawer(parentNode, context);
                }
                if (hasWrapper) {
                    var wrapper = this.getWrapperNode("div");
                    wrapper.appendChild(node);
                    node = wrapper;
                }
                var appendData = this.getAppendTarget(this.getParentNode(context), false, context.global.pageKey);
                if (appendData) {
                    this.appendNode(appendData.appendMethod, node, appendData.node, alias);
                    var typeAlias = this.Static.setup.elementTypeAlias;
                    var isMultiColumn = document.querySelector(".wrap-multi-col");
                    if (isMultiColumn) {
                        var multiColumnDomTarget = null;
                        if (typeAlias === "VehicleCTA") {
                            multiColumnDomTarget = this.resolveControllerSelector(parentNode, [{ selector: ".content .link[template='hyperlink-multi-col']", appendMethod: appendData.appendMethod }]);
                            if (!!multiColumnDomTarget) {
                                var multiColAppendData = this.getAppendTarget(multiColumnDomTarget.node, true, context.global.pageKey);
                                var multiColElement = !multiColAppendData.node ? appendData.node.cloneNode(true) : node.cloneNode(true);
                                this.appendNode(appendData.appendMethod, multiColElement, multiColAppendData.node || multiColumnDomTarget.node);
                            }
                        }
                    }
                    eventDispatcher("elementDidRender");
                }
                else {
                    var missingElements = window["Basel"].state.partners[context.package.packageId].missingElements;
                    if (missingElements.indexOf(context.self.elementType) === -1) {
                        missingElements.push(context.self.elementType);
                    }
                }
                return callback(void 0);
            };
            UIController.prototype.renderPassive = function (nodeBuilder, optionsResolver, ruleResolver, lifecycleDispatcher, context, callback) {
                throw new Error("Subclass must provide unique implementation");
            };
            UIController.prototype.renderDrawer = function (parentNode, context) {
                var styleId = this.getControllerStyleID() + "-drawer";
                var appendData = this.resolveControllerSelector(parentNode, this.renderSettings.domTarget);
                var drawer = document.createElement("div");
                if (styleId) {
                    drawer.classList.add(styleId);
                }
                if (context) {
                    drawer.setAttribute("data-bzl-page", context.global.pageKey);
                }
                if (appendData && appendData.appendMethod && appendData.node) {
                    var sel = document.querySelector("section.grid-2-1 .deck section[data-origin-name*='heroCard']") || document.querySelector("section.grid-1-2 .deck section[data-origin-name*='heroCard']");
                    ;
                    if (sel && context.global.pageKey === 'homepage' && this.Static.setup.elementTypeAlias === 'PageBanner') {
                        appendData.appendMethod = "default";
                    }
                    this.appendNode(appendData.appendMethod, drawer, appendData.node);
                    return drawer;
                }
            };
            UIController.prototype.drawerExists = function (parentNode) {
                var drawerStyleId = ".".concat(this.getControllerStyleID(), "-drawer");
                return !!(parentNode.querySelector(drawerStyleId));
            };
            UIController.prototype.getWrapperNode = function (tag) {
                var wrapper;
                if (typeof tag === "string") {
                    var styleId = this.getControllerStyleID();
                    wrapper = document.createElement(tag);
                    styleId && wrapper.classList.add(styleId);
                }
                return wrapper;
            };
            UIController.prototype.getParentNode = function (context) {
                return this.Static.setup.vehicleContext ? context.vehicle.node : document;
            };
            UIController.prototype.getElementData = function (context) {
                return context.self;
            };
            UIController.prototype.getAppendTarget = function (parentNode, hasParent, pageKey) {
                var _b, _c;
                if (parentNode === void 0) { parentNode = document; }
                var result;
                var hasDrawer = this.Static.setup.activeNodes.drawer;
                try {
                    if (hasDrawer) {
                        var drawerSelector = ".".concat(this.getControllerStyleID(), "-drawer");
                        var parent_1 = (this.Static.setup.elementTypeAlias === "VehicleCTA"
                            && !hasParent
                            && pageKey != 'vdp'
                            && ((_b = window["BaselContext"]) === null || _b === void 0 ? void 0 : _b.provider) !== "dealeron")
                            ? (_c = this.resolveControllerSelector(parentNode, this.renderSettings.domTarget)) === null || _c === void 0 ? void 0 : _c.node
                            : parentNode;
                        result = { node: parent_1 === null || parent_1 === void 0 ? void 0 : parent_1.querySelector(drawerSelector), appendMethod: "appendChild", selector: drawerSelector };
                    }
                    else {
                        result = this.resolveControllerSelector(parentNode, this.renderSettings.domTarget);
                    }
                    return result;
                }
                catch (error) {
                    console.error("Basel Render Error: => UICOntroller.getAppendTarget => ".concat(error.message));
                }
            };
            UIController.prototype.appendNode = function (appendMethod, appendNode, appendTarget, alias) {
                var methods = {
                    insertBefore: function (appendNode, targetNode) {
                        var elementExist = targetNode.parentNode.querySelector("[data-bzl-id='" + alias + "']");
                        if (elementExist)
                            return elementExist;
                        return targetNode.parentNode.insertBefore(appendNode, targetNode);
                    },
                    insertAfter: function (appendNode, targetNode) {
                        var elementExist = targetNode.parentNode.querySelector("[data-bzl-id='" + alias + "']");
                        if (elementExist)
                            return elementExist;
                        return targetNode.parentNode.insertBefore(appendNode, targetNode.nextSibling);
                    },
                    appendChild: function (appendNode, targetNode) {
                        if (appendNode && targetNode) {
                            var elementExist = targetNode.querySelector("[data-bzl-id='" + alias + "']");
                            if (elementExist)
                                return elementExist;
                            return targetNode.appendChild(appendNode);
                        }
                    },
                    default: function (appendNode, targetNode) {
                        if (appendNode && targetNode && targetNode.parentElement) {
                            var elementExist = targetNode.parentElement.querySelector("[data-bzl-id='" + alias + "']");
                            if (elementExist)
                                return elementExist;
                            return targetNode.parentElement.appendChild(appendNode);
                        }
                    }
                };
                return methods[appendMethod](appendNode, appendTarget) && appendNode;
            };
            UIController.prototype.resolveControllerSelector = function (baseNode, selectors) {
                if (baseNode === void 0) { baseNode = document; }
                if (selectors === void 0) { selectors = []; }
                var activeSelector;
                for (var i = 0, len = selectors.length; i < len; i++) {
                    var selectorData = selectors[i];
                    var selectorMatch = baseNode.querySelector(selectorData.selector);
                    if (selectorMatch) {
                        activeSelector = { node: selectorMatch, appendMethod: selectorData.appendMethod, selector: selectorData.selector };
                        break;
                    }
                }
                return activeSelector || void 0;
            };
            UIController.prototype.writeCSS = function (cssContent) {
                var style = document.createElement("style");
                var head = document.getElementsByTagName("head")[0];
                style.innerHTML = cssContent;
                head.appendChild(style);
            };
            UIController.prototype.getControllerStyleID = function () {
                return this.Static.setup.defaultClass;
            };
            UIController.prototype.getDrawer = function (parentNode) {
                var drawerStyleId = ".".concat(this.getControllerStyleID(), "-drawer");
                return parentNode.querySelector(drawerStyleId) || void 0;
            };
            return UIController;
        }()),
        _a.setup = config,
        _a);
    return controller;
}
exports.UIController = UIController;

},{}],53:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehicleCTA = void 0;
var _1 = require("./");
var CONFIG = {
    activeNodes: { drawer: true, wrapper: true },
    activePages: { vsr: true, vdp: true },
    reloadable: false,
    vehicleContext: true,
    defaultCSS: "",
    defaultClass: "bzl-vcta",
    domTarget: void 0,
    elementTypeAlias: "VehicleCTA"
};
var OPTIONS = {};
var VehicleCTA = (function (_super) {
    __extends(VehicleCTA, _super);
    function VehicleCTA() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VehicleCTA.prototype.render = function (element, options, context, eventDispatcher, callback) {
        var _this = this;
        var error;
        var alias = element.getAttribute("data-bzl-id");
        var parentNode = this.getParentNode(context);
        var isTripleMathbox = parentNode === null || parentNode === void 0 ? void 0 : parentNode.querySelector(".multi-tabs--pricing");
        var node = this.createWrapper(context, parentNode, element);
        if (isTripleMathbox) {
            try {
                var tabs = parentNode === null || parentNode === void 0 ? void 0 : parentNode.querySelectorAll(".pricing-tab-content__pane .vehicleCallsToAction");
                Array.from(tabs).forEach(function (tab) {
                    var parentElem = tab.parentElement;
                    var newElement = element.cloneNode(true);
                    newElement.addEventListener("click", function () {
                        element.click();
                    });
                    var injectableElement = _this.createWrapper(context, parentElem, newElement);
                    var targetNode = parentElem.querySelector(".bzl-vcta-drawer");
                    var appendData = _this.getAppendTarget(parentNode, false, context.global.pageKey);
                    _this.appendNode(appendData.appendMethod, injectableElement, targetNode, alias);
                });
            }
            catch (error) {
                console.error("Basel Render Error: (DealerOn) => VehicleCTA.render => applying drawer and cta to triple mathbox. ".concat(error.message));
            }
            eventDispatcher("elementDidRender");
            return callback(error);
        }
        try {
            var appendData = this.getAppendTarget(parentNode, false, context.global.pageKey);
            this.appendNode(appendData.appendMethod, node, appendData.node, alias);
            eventDispatcher("elementDidRender");
            return callback(error);
        }
        catch (error) {
            var errorMessage = "Basel Render Error: (Sincro) => VehicleCTA.render => applying drawer and cta. ".concat(error.message);
            error = new Error(errorMessage);
            console.error(errorMessage);
            eventDispatcher("elementDidError");
            return callback(error);
        }
    };
    VehicleCTA.prototype.createWrapper = function (context, parentNode, element) {
        var hasDrawer = this.Static.setup.activeNodes.drawer;
        var hasWrapper = this.Static.setup.activeNodes.wrapper;
        if (hasDrawer && !(this.drawerExists(parentNode))) {
            this.renderDrawer(parentNode, context);
        }
        if (hasWrapper) {
            var wrapper = this.getWrapperNode("div");
            wrapper.appendChild(element);
            return wrapper;
        }
        return element;
    };
    return VehicleCTA;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.VehicleCTA = VehicleCTA;

},{"./":40}],54:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehicleDescription = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { drawer: false, wrapper: true },
    activePages: { vdp: true },
    domTarget: void 0,
    defaultCSS: "",
    elementTypeAlias: "VehicleDescription",
    vehicleContext: true,
    reloadable: false,
    defaultClass: "bzl-vehicledescription",
};
var OPTIONS = {};
var VehicleDescription = (function (_super) {
    __extends(VehicleDescription, _super);
    function VehicleDescription() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return VehicleDescription;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.VehicleDescription = VehicleDescription;

},{".":40}],55:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehicleElement = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { wrapper: false, drawer: false },
    activePages: { vsr: true, vdp: true },
    elementTypeAlias: "VehicleElement",
    vehicleContext: true,
    passive: false,
    reloadable: false,
    domTarget: void 0,
    defaultCSS: void 0,
    defaultClass: "bzl-velement"
};
var OPTIONS = {
    domTarget: void 0,
    targetAll: void 0
};
var VehicleElement = (function (_super) {
    __extends(VehicleElement, _super);
    function VehicleElement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VehicleElement.prototype.render = function (element, options, context, eventDispatcher, callback) {
        var _this = this;
        var error;
        var alias = element.getAttribute("data-bzl-id");
        var parentNode = this.getParentNode(context);
        var appendTarget = this.resolveControllerSelector(parentNode, options.domTarget);
        if (appendTarget) {
            if (options.targetAll) {
                var nodeList = parentNode.querySelectorAll(appendTarget.selector);
                Array.prototype.forEach.call(nodeList, function (target) {
                    _this.appendNode(appendTarget.appendMethod, element.cloneNode(true), target, alias);
                });
            }
            else {
                this.appendNode(appendTarget.appendMethod, element, appendTarget.node, alias);
            }
            eventDispatcher("elementDidRender");
        }
        else {
            error = new Error("Unable to locate DOM node at selector defined in element options");
            eventDispatcher("elementDidError");
        }
        return callback(error);
    };
    return VehicleElement;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.VehicleElement = VehicleElement;

},{".":40}],56:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehicleFeaturesIcon = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { drawer: false, wrapper: true },
    activePages: { vsr: true, vdp: false },
    reloadable: false,
    vehicleContext: true,
    defaultCSS: "",
    defaultClass: "bzl-vehiclefeaturesicon",
    domTarget: void 0,
    elementTypeAlias: "VehicleFeaturesIcon",
    passive: true
};
var OPTIONS = {
    ctaTitle: void 0,
    ctaLink: void 0,
    ctaTarget: void 0,
    icon: void 0,
    link: void 0
};
var VehicleFeaturesIcon = (function (_super) {
    __extends(VehicleFeaturesIcon, _super);
    function VehicleFeaturesIcon() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VehicleFeaturesIcon.prototype.renderPassive = function (nodeBuilder, optionsResolver, ruleResolver, lifecycleDispatcher, context, callback) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        var error;
        var config = this.renderSettings;
        var elementData = this.getElementData(context);
        if (ruleResolver(elementData, context)) {
            var options = optionsResolver(elementData.options, context);
            var element = nodeBuilder(document.createElement("a"), elementData, context);
            var domTarget = this.resolveControllerSelector(this.getParentNode(context), config.domTarget);
            var ctaTitle = options.ctaTitle;
            var ctaLink = options.ctaLink || "javascript:void(0)";
            var ctaTarget = options.ctaTarget || "_self";
            var iClasses = (_b = this.getCommonCssClasses((_a = domTarget === null || domTarget === void 0 ? void 0 : domTarget.node) === null || _a === void 0 ? void 0 : _a.querySelectorAll("a i"))) === null || _b === void 0 ? void 0 : _b.join(" ");
            var borderRadius = ((_c = domTarget === null || domTarget === void 0 ? void 0 : domTarget.node) === null || _c === void 0 ? void 0 : _c.querySelector("a,button")) ? (((_e = window.getComputedStyle((_d = domTarget === null || domTarget === void 0 ? void 0 : domTarget.node) === null || _d === void 0 ? void 0 : _d.querySelector("a,button"))) === null || _e === void 0 ? void 0 : _e.borderRadius) || "0px") : "0px";
            var ctaIcon = this.getCTAIcon(options.icon, iClasses);
            var liInnerHtml = "<a href=\"".concat(ctaLink, "\" target=\"").concat(ctaTarget, "\" title=\"").concat(ctaTitle, "\" class=\"window-sticker-button\" style=\"border-radius: ").concat(borderRadius, "\"><div class=\"iconLink\">").concat(ctaIcon, "</div></a>");
            element.innerHTML = liInnerHtml;
            element.classList.add("bzl-vehiclefeaturesicon");
            if (domTarget) {
                try {
                    this.appendNode(domTarget.appendMethod, element, domTarget.node, elementData === null || elementData === void 0 ? void 0 : elementData.alias);
                    if ((_f = options.icon) === null || _f === void 0 ? void 0 : _f.startsWith("fa-")) {
                        var hasFaCSS = document.querySelector(".fa") ? (_h = (_g = window.getComputedStyle(document.querySelector(".fa"), ":before")) === null || _g === void 0 ? void 0 : _g.fontFamily) === null || _h === void 0 ? void 0 : _h.includes("Awesome") : false;
                        if (!hasFaCSS) {
                            var faCSS = document.createElement("link");
                            faCSS.rel = "stylesheet";
                            faCSS.href = "https://media.assets.sincrod.com/agency/release/agency-web-fonts/FontAwesome/FontAwesome.css";
                            document.head.appendChild(faCSS);
                        }
                    }
                }
                catch (error) {
                    console.error("Basel Render Error: (DealerOn) => VehicleFeaturesIcon.renderPassive => injecting cta to domTarget. ".concat(error.message));
                }
            }
            lifecycleDispatcher("elementDidRender");
        }
        else {
            error = new Error("Element Bypassed, render blocked by element rules");
            lifecycleDispatcher("elementDidError");
        }
        return callback(error);
    };
    VehicleFeaturesIcon.prototype.getCTAIcon = function (iconKey, iClasses) {
        var styles = "";
        return (typeof iconKey === "string") ? (iconKey.startsWith("fa-") ? "<i class=\"".concat(iClasses, " fa ").concat(iconKey, "\" style=\"").concat(styles, "\"></i>") : "<i class=\"".concat(iClasses, " material-icons\">").concat(iconKey, "</i>")) : "";
    };
    VehicleFeaturesIcon.prototype.getCommonCssClasses = function (elements) {
        if (!elements || elements.length === 0)
            return [];
        var commonClasses = new Set(elements[0].classList);
        var _loop_1 = function (i) {
            commonClasses = new Set(Array.from(commonClasses).filter(function (cls) { return elements[i].classList.contains(cls); }));
            if (commonClasses.size === 0)
                return "break";
        };
        for (var i = 1; i < elements.length; i++) {
            var state_1 = _loop_1(i);
            if (state_1 === "break")
                break;
        }
        return Array.from(commonClasses);
    };
    return VehicleFeaturesIcon;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.VehicleFeaturesIcon = VehicleFeaturesIcon;

},{".":40}],57:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehicleFeatures = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { drawer: false, wrapper: true },
    activePages: { vdp: true },
    domTarget: void 0,
    defaultCSS: "",
    elementTypeAlias: "VehicleFeatures",
    vehicleContext: true,
    reloadable: false,
    defaultClass: "bzl-vehiclefeatures",
};
var OPTIONS = {};
var VehicleFeatures = (function (_super) {
    __extends(VehicleFeatures, _super);
    function VehicleFeatures() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return VehicleFeatures;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.VehicleFeatures = VehicleFeatures;

},{".":40}],58:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehicleFilterCTA = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { drawer: true, wrapper: true },
    activePages: { vsr: true },
    elementTypeAlias: "VehicleFilterCTA",
    reloadable: true,
    vehicleContext: false,
    domTarget: void 0,
    defaultCSS: void 0,
    defaultClass: "bzl-vfiltercta"
};
var OPTIONS = {};
var VehicleFilterCTA = (function (_super) {
    __extends(VehicleFilterCTA, _super);
    function VehicleFilterCTA() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return VehicleFilterCTA;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.VehicleFilterCTA = VehicleFilterCTA;

},{".":40}],59:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehicleGalleryAction = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { wrapper: true, drawer: true },
    activePages: { vsr: true, vdp: true },
    elementTypeAlias: "VehicleGalleryAction",
    vehicleContext: true,
    reloadable: false,
    domTarget: void 0,
    defaultCSS: void 0,
    defaultClass: "bzl-vgalleryaction"
};
var OPTIONS = {};
var VehicleGalleryAction = (function (_super) {
    __extends(VehicleGalleryAction, _super);
    function VehicleGalleryAction() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VehicleGalleryAction.prototype.renderDrawer = function (parentNode, context) {
        var styleId = this.getControllerStyleID() + "-drawer";
        var appendData = this.resolveControllerSelector(parentNode, this.renderSettings.domTarget);
        var drawer = document.createElement("div");
        if (styleId) {
            drawer.classList.add(styleId, "content");
        }
        if (context) {
            drawer.setAttribute('data-bzl-page', context.global.pageKey);
        }
        if (appendData) {
            this.appendNode(appendData.appendMethod, drawer, appendData.node);
        }
        return drawer;
    };
    return VehicleGalleryAction;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.VehicleGalleryAction = VehicleGalleryAction;

},{".":40}],60:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehicleGalleryIcon = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { wrapper: true, drawer: true },
    activePages: { vsr: true, vdp: true },
    elementTypeAlias: "VehicleGalleryIcon",
    vehicleContext: true,
    reloadable: false,
    domTarget: void 0,
    defaultCSS: void 0,
    defaultClass: "bzl-vgalleryicon"
};
var OPTIONS = {
    position: void 0
};
var VehicleGalleryIcon = (function (_super) {
    __extends(VehicleGalleryIcon, _super);
    function VehicleGalleryIcon() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VehicleGalleryIcon.prototype.render = function (element, options, context, eventDispatcher, callback) {
        var parentNode = this.getParentNode(context);
        var wrapper = this.getWrapperNode("div");
        var drawer = this.getDrawer(parentNode);
        if (!drawer) {
            drawer = this.renderDrawer(parentNode, context);
            this.registerDrawerToGallery(drawer, options);
        }
        wrapper.appendChild(element);
        drawer.appendChild(wrapper);
        eventDispatcher("elementDidRender");
        return callback(void 0);
    };
    VehicleGalleryIcon.prototype.registerDrawerToGallery = function (drawerNode, options) {
        this.observeGallery(drawerNode, options);
    };
    VehicleGalleryIcon.prototype.observeGallery = function (drawerNode, options) {
        var _this = this;
        var prevHeightOffset;
        var heightOffsetTarget;
        var galleryNode = document.querySelector("[class*='dealershipPhotoGallery'] > .content > .media");
        var observeMutation = function (mutation) {
            var node = mutation.target;
            heightOffsetTarget = node.querySelector("figure");
            prevHeightOffset = heightOffsetTarget.offsetHeight;
            setTimeout(function () {
                var checkHeight = setInterval(function () {
                    if (heightOffsetTarget.offsetHeight === prevHeightOffset) {
                        _this.updateDrawerOffset(drawerNode, prevHeightOffset, options.position);
                        drawerNode.style.display = "flex";
                        clearInterval(checkHeight);
                    }
                }, 100);
            }, 400);
        };
        var observeMutations = function (mutations) { return mutations.forEach(observeMutation); };
        var observer = new MutationObserver(observeMutations);
        observer.observe(galleryNode, { attributes: true, attributeFilter: ["class"] });
        return true;
    };
    VehicleGalleryIcon.prototype.updateDrawerOffset = function (drawerNode, heightOffset, position) {
        var heightOffsetSelector = "[class*='dealershipPhotoGallery'] [class*='dealershipPhotos'] > .content > .media > figure";
        var leftOffsetSelector = ".arrow.single.prev";
        var alignLeft = position.indexOf("left") > -1;
        var alignTop = position.indexOf("top") > -1;
        if (window.innerWidth < 640) {
            drawerNode.style.display = "none";
        }
        else {
            var height = heightOffset || document.querySelector(heightOffsetSelector).offsetHeight;
            var left = document.querySelector(leftOffsetSelector).offsetLeft;
            drawerNode.style.top = alignTop ? "0px" : (height - 48) + "px";
            drawerNode.style[(alignLeft ? "left" : "right")] = left + "px";
        }
        return true;
    };
    return VehicleGalleryIcon;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.VehicleGalleryIcon = VehicleGalleryIcon;

},{".":40}],61:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehicleGalleryItem = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { drawer: false, wrapper: false },
    activePages: { vdp: true },
    domTarget: void 0,
    domTargetMobile: void 0,
    defaultCSS: "",
    elementTypeAlias: "VehicleGalleryItem",
    vehicleContext: true,
    passive: true,
    reloadable: false,
    defaultClass: "bzl-galleryitem"
};
var OPTIONS = {};
var VehicleGalleryItem = (function (_super) {
    __extends(VehicleGalleryItem, _super);
    function VehicleGalleryItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VehicleGalleryItem.prototype.renderPassive = function (nodeBuilder, optionsResolver, ruleResolver, lifecycleDispatcher, context, callback) {
        var error;
        var config = this.renderSettings;
        var elementData = this.getElementData(context);
        if (ruleResolver(elementData, context)) {
            var element = nodeBuilder(document.createElement("div"), elementData, context);
            var elementMobile = nodeBuilder(document.createElement("div"), elementData, context);
            var domTarget = this.resolveControllerSelector(this.getParentNode(context), config.domTarget);
            var domTargetMobile = this.resolveControllerSelector(this.getParentNode(context), config.domTargetMobile);
            element.classList.add("bzl-galleryitem");
            elementMobile.classList.add("bzl-galleryitem");
            var removeExtraChildrenFromDesktopGallerySidebar = function () {
                var gallerySidebar = document.querySelector(".thumbnails--desktop__sidebar");
                var maxChildCount = 3;
                if (gallerySidebar) {
                    var children = Array.from(gallerySidebar.children);
                    if (children.length > maxChildCount) {
                        for (var i = children.length - 1; i >= maxChildCount; i--) {
                            gallerySidebar.removeChild(children[i]);
                        }
                    }
                }
            };
            if (domTarget) {
                try {
                    this.appendNode(domTarget.appendMethod, element, domTarget.node);
                    removeExtraChildrenFromDesktopGallerySidebar();
                }
                catch (error) {
                    console.error("Basel Render Error: (DealerOn) => VehicleGalleryItem.renderPassive => injecting cta to domTarget. ".concat(error.message));
                }
            }
            if (domTargetMobile) {
                try {
                    elementMobile.setAttribute("data-bzl-id", element.getAttribute("data-bzl-id") + "_mobile");
                    this.appendNode(domTargetMobile.appendMethod, elementMobile, domTargetMobile.node);
                }
                catch (error) {
                    console.error("Basel Render Error: (DealerOn) => VehicleGalleryItem.renderPassive => injecting cta to domTargetMobile. ".concat(error.message));
                }
            }
            lifecycleDispatcher("elementDidRender");
        }
        else {
            error = new Error("Element Bypassed, render blocked by element rules");
            lifecycleDispatcher("elementDidError");
        }
        return callback(error);
    };
    return VehicleGalleryItem;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.VehicleGalleryItem = VehicleGalleryItem;

},{".":40}],62:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehicleGalleryOverlay = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { wrapper: true, drawer: true },
    activePages: { vdp: true },
    elementTypeAlias: "VehicleGalleryOverlay",
    vehicleContext: true,
    reloadable: false,
    domTarget: void 0,
    defaultCSS: void 0,
    defaultClass: "bzl-vgalleryoverlay"
};
var OPTIONS = {};
var VehicleGalleryOverlay = (function (_super) {
    __extends(VehicleGalleryOverlay, _super);
    function VehicleGalleryOverlay() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return VehicleGalleryOverlay;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.VehicleGalleryOverlay = VehicleGalleryOverlay;

},{".":40}],63:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehicleGallery = void 0;
var _1 = require(".");
var CONFIG = {
    elementTypeAlias: "VehicleGallery",
    activeNodes: { drawer: false, wrapper: true },
    activePages: { vdp: true },
    vehicleContext: true,
    reloadable: false,
    domTarget: void 0,
    defaultCSS: void 0,
    defaultClass: "bzl-vgallery",
    internal: void 0
};
var OPTIONS = {
    galleryTabLabel: void 0,
    deferGalleryTab: void 0,
    deferGallery: void 0,
    aspectRatio: void 0,
    toggleAction: void 0,
    classList: void 0,
};
var VehicleGallery = (function (_super) {
    __extends(VehicleGallery, _super);
    function VehicleGallery() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.STATE = { activeGalleryId: void 0 };
        _this.REGISTRY = {};
        _this.NODES = {
            get galleryPanelContainer() {
                var node = this.galleryContainer.querySelector(VehicleGallery.setup.internal.galleryPanelContainer);
                delete this.galleryPanelContainer;
                return this.galleryPanelContainer = node;
            },
            get galleryTabContainer() {
                var node = this.galleryContainer.querySelector(VehicleGallery.setup.internal.galleryTabContainer);
                delete this.galleryTabContainer;
                return this.galleryTabContainer = node;
            },
            get galleryContainer() {
                var node = document.querySelector(VehicleGallery.setup.internal.galleryContainer);
                delete this.galleryContainer;
                return this.galleryContainer = node;
            },
            get initialPanel() {
                return this.galleryPanelContainer.querySelector(VehicleGallery.setup.internal.galleryPanelItem);
            },
            get initialTab() {
                var node = this.galleryTabContainer.querySelector(VehicleGallery.setup.internal.galleryTabItem);
                delete this.initialTab;
                return this.initialTab = node;
            },
            get selectors() {
                var selectors = {
                    panel: {
                        display: VehicleGallery.setup.internal.galleryPanelFlags,
                        panel: VehicleGallery.setup.internal.galleryPanelItem
                    },
                    tab: {
                        display: VehicleGallery.setup.internal.galleryTabFlags,
                        tab: VehicleGallery.setup.internal.galleryTabItem
                    }
                };
                delete this.selectors;
                return this.selectors = selectors;
            }
        };
        return _this;
    }
    VehicleGallery.prototype.render = function (element, options, context, eventDispatcher, callback) {
        var _this = this;
        var error = void 0;
        var galleryId = context.self.alias;
        if (this.REGISTRY[galleryId]) {
            error = new Error("Unable to render duplicate element, use actions to retrigger");
        }
        else {
            var bindAction = function (actionId, handler) {
                if (context.package && context.package.__actions) {
                    context.package.__actions.onAction(actionId, handler);
                }
            };
            var initGallery_1 = function () {
                _this.appendGalleryNodes(galleryPanel_1, galleryTab_1);
                eventDispatcher("elementDidRender");
                if (!options.deferGallery) {
                    _this.toggleGallery(galleryId);
                    eventDispatcher("elementDidShow");
                }
            };
            var galleryPanel_1 = this.createGalleryPanel(galleryId, options);
            var galleryContentWrapper = this.createGalleryContentWrapper(galleryId);
            var galleryTab_1 = this.createGalleryTab(galleryId, options.galleryTabLabel, options);
            galleryContentWrapper.appendChild(element);
            this.registerGallery(galleryId, galleryPanel_1, galleryTab_1, galleryContentWrapper);
            this.bindGalleryControls(galleryId);
            if (element instanceof HTMLIFrameElement) {
                element.addEventListener("load", function () {
                    eventDispatcher("elementDidLoad");
                });
            }
            if (options.toggleAction) {
                bindAction(options.toggleAction, function () { return _this.toggleGallery(galleryId); });
            }
            if (options.deferGalleryTab && options.initAction) {
                bindAction(options.initAction, function () { return initGallery_1(); });
            }
            else {
                initGallery_1();
            }
        }
        return callback(error);
    };
    VehicleGallery.prototype.toggleGallery = function (galleryId) {
        var active = false;
        if (this.STATE.activeGalleryId && this.STATE.activeGalleryId !== galleryId) {
            this.hideGallery(this.STATE.activeGalleryId);
        }
        var gallaryHidden = this.REGISTRY[galleryId] && this.REGISTRY[galleryId].panel && this.REGISTRY[galleryId].panel.classList.contains('hidden');
        if (this.STATE.activeGalleryId && this.STATE.activeGalleryId === galleryId && gallaryHidden) {
            this.REGISTRY[galleryId].panel.classList.remove('hidden');
            this.REGISTRY[galleryId].panel.classList.add('selected');
        }
        if (this.STATE.activeGalleryId && this.STATE.activeGalleryId === galleryId && !gallaryHidden) {
            this.REGISTRY[galleryId].panel.classList.add('selected');
        }
        if (!this.galleryIsActive(galleryId)) {
            this.resetTabs();
            this.resetPanels();
            this.selectTab(galleryId);
            this.selectPanel(galleryId);
            this.STATE.activeGalleryId = galleryId;
            active = true;
        }
        return active;
    };
    VehicleGallery.prototype.hideGallery = function (galleryId) {
        if (this.galleryIsActive(galleryId)) {
            this.deselectTab(galleryId);
            this.deselectPanel(galleryId);
            this.STATE.activeGalleryId = void 0;
        }
    };
    VehicleGallery.prototype.resetPanels = function () {
        var panelSelector = this.NODES.selectors.panel.panel;
        var panelContainer = this.NODES.galleryPanelContainer;
        var flags = VehicleGallery.setup.internal.galleryPanelFlags;
        if (panelContainer) {
            var panels = panelContainer.querySelectorAll(panelSelector);
            panels.forEach(function (el) {
                flags.show && el.classList.remove(flags.show);
                flags.hide && el.classList.add(flags.hide);
            });
        }
    };
    VehicleGallery.prototype.resetTabs = function () {
        var tabSelector = this.NODES.selectors.tab.tab;
        var tabContainer = this.NODES.galleryTabContainer;
        var flags = VehicleGallery.setup.internal.galleryTabFlags;
        if (tabContainer) {
            var tabs = tabContainer.querySelectorAll(tabSelector);
            var removeClasses_1 = function (el) {
                flags.show && el.classList.remove(flags.show);
                flags.hide && el.classList.add(flags.hide);
                if (el.children.length) {
                    Array.prototype.forEach.call(el.children, removeClasses_1);
                }
            };
            tabs.forEach(removeClasses_1);
        }
    };
    VehicleGallery.prototype.selectTab = function (galleryId) {
        var flags = VehicleGallery.setup.internal.galleryTabFlags;
        var tab = this.REGISTRY[galleryId].tab;
        if (tab instanceof HTMLElement) {
            if (flags.show) {
                tab.classList.add(flags.show);
                Array.prototype.forEach.call(tab.children, function (el) { return el && el.classList.add(flags.show); });
            }
            if (flags.hide) {
                tab.classList.remove(flags.hide);
                Array.prototype.forEach.call(tab.children, function (el) { return el && el.classList.remove(flags.hide); });
            }
        }
    };
    VehicleGallery.prototype.selectPanel = function (galleryId) {
        var flags = VehicleGallery.setup.internal.galleryPanelFlags;
        var panel = this.REGISTRY[galleryId].panel;
        if (panel instanceof HTMLElement) {
            var tabs = document.querySelectorAll('section[itemtype="//schema.org/ImageGallery"] > .deck > section');
            tabs.forEach(function (tab) {
                if (tab.getAttribute("data-bzl-id") !== galleryId) {
                    tab.classList.remove(flags.show);
                    if (tab.getAttribute("data-bzl-id") && tab.getAttribute("data-bzl-id") !== galleryId) {
                        tab.classList.add("hidden");
                    }
                    Array.prototype.forEach.call(tab.children, function (el) { return el && el.classList.remove(flags.show); });
                }
            });
            panel.appendChild(this.REGISTRY[galleryId].content);
            panel.classList.remove("hidden");
            if (flags.show) {
                panel.classList.add(flags.show);
                Array.prototype.forEach.call(panel.children, function (el) { return el && el.classList.add(flags.show); });
            }
            if (flags.hide) {
                panel.classList.remove(flags.hide);
                Array.prototype.forEach.call(panel.children, function (el) { return el && el.classList.remove(flags.hide); });
            }
        }
    };
    VehicleGallery.prototype.deselectTab = function (galleryId) {
        var flags = VehicleGallery.setup.internal.galleryTabFlags;
        var tab = this.REGISTRY[galleryId].tab;
        if (tab instanceof HTMLElement) {
            if (flags.show) {
                tab.classList.remove(flags.show);
                Array.prototype.forEach.call(tab.children, function (el) { return el && el.classList.remove(flags.show); });
            }
            if (flags.hide) {
                tab.classList.add(flags.hide);
                Array.prototype.forEach.call(tab.children, function (el) { return el && el.classList.add(flags.hide); });
            }
        }
    };
    VehicleGallery.prototype.deselectPanel = function (galleryId) {
        var flags = VehicleGallery.setup.internal.galleryPanelFlags;
        var panel = this.REGISTRY[galleryId].panel;
        if (panel instanceof HTMLElement) {
            panel.classList.add("hidden");
            flags.show && panel.classList.remove(flags.show);
            flags.hide && panel.classList.add(flags.hide);
            this.REGISTRY[galleryId].content.appendChild(panel.children[0]);
        }
    };
    VehicleGallery.prototype.appendGalleryNodes = function (galleryPanel, galleryTab) {
        var _a, _b;
        this.NODES.galleryPanelContainer.appendChild(galleryPanel);
        this.NODES.galleryTabContainer.appendChild(galleryTab);
        (_b = (_a = this.NODES.galleryContainer) === null || _a === void 0 ? void 0 : _a.querySelector("#photoGalleryTabsWrapper")) === null || _b === void 0 ? void 0 : _b.classList.remove("photo-tabs-wrapper--hidden");
    };
    VehicleGallery.prototype.registerGallery = function (galleryId, galleryPanel, galleryTab, galleryContent) {
        var frag = document.createDocumentFragment();
        frag.appendChild(galleryContent);
        this.REGISTRY[galleryId] = {
            panel: galleryPanel,
            tab: galleryTab,
            galleryId: galleryId,
            content: frag
        };
    };
    VehicleGallery.prototype.bindGalleryControls = function (galleryId) {
        var _this = this;
        this.NODES.galleryTabContainer.addEventListener("click", function (e) {
            setTimeout(function () {
                if (e.target["parentElement"] === _this.REGISTRY[galleryId].tab || e.target === _this.REGISTRY[galleryId].tab) {
                    _this.toggleGallery(galleryId);
                }
                else if ([HTMLAnchorElement, HTMLSpanElement].some(function (instance) { return e.target instanceof (instance); })) {
                    _this.hideGallery(galleryId);
                }
            }, 1);
        });
    };
    VehicleGallery.prototype.galleryIsActive = function (galleryId) {
        return this.STATE.activeGalleryId === galleryId;
    };
    VehicleGallery.prototype.createGalleryPanel = function (galleryId, options) {
        var protoTagName = this.NODES && this.NODES.initialPanel && this.NODES.initialPanel.tagName;
        if (typeof protoTagName === "string") {
            var panel_1 = document.createElement(protoTagName);
            var ratio = options.aspectRatio || "4x3";
            var aspectRatio = "bzl-" + ratio;
            panel_1.setAttribute("data-bzl-id", galleryId);
            panel_1.setAttribute("data-bzl-ui", "vehicle-gallery-panel");
            panel_1.classList.add(aspectRatio);
            panel_1.classList.add("hidden");
            if (options.classList && Array.isArray(options.classList)) {
                options.classList.forEach(function (c) { return panel_1.classList.add(c); });
            }
            return panel_1;
        }
    };
    VehicleGallery.prototype.createGalleryTab = function (galleryId, tabLabel, options) {
        var _a, _b;
        var protoTabTag = this.NODES.initialTab.tagName;
        var tab = document.createElement(protoTabTag);
        tab.innerHTML = ((_a = window["BaselContext"]) === null || _a === void 0 ? void 0 : _a.provider) === "dealeron" ? tabLabel : "<a>" + tabLabel + "</a>";
        tab.setAttribute("data-bzl-id", galleryId);
        tab.setAttribute("data-bzl-ui", "vehicle-gallery-tab");
        if (options.classList && Array.isArray(options.classList)) {
            options.classList.forEach(function (c) { return tab.classList.add(c); });
        }
        if (((_b = window["BaselContext"]) === null || _b === void 0 ? void 0 : _b.provider) === "dealeron") {
            tab.classList.add("nav-link", "photo-gallery-tab");
        }
        return tab;
    };
    VehicleGallery.prototype.createGalleryContentWrapper = function (galleryId) {
        var wrapper = this.getWrapperNode("div");
        wrapper.setAttribute("data-bzl-id", galleryId);
        wrapper.setAttribute("data-bzl-ui", "vehicle-gallery-content");
        return wrapper;
    };
    return VehicleGallery;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.VehicleGallery = VehicleGallery;

},{".":40}],64:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehicleIcon = void 0;
var _1 = require("./");
var CONFIG = {
    activeNodes: { drawer: true, wrapper: true },
    activePages: { vsr: true, vdp: true },
    domTarget: void 0,
    elementTypeAlias: "VehicleIcon",
    vehicleContext: true,
    passive: false,
    reloadable: false,
    defaultCSS: void 0,
    defaultClass: "bzl-vicon"
};
var OPTIONS = {};
var VehicleIcon = (function (_super) {
    __extends(VehicleIcon, _super);
    function VehicleIcon() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return VehicleIcon;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.VehicleIcon = VehicleIcon;

},{"./":40}],65:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehicleInformation = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { drawer: false, wrapper: true },
    activePages: { vdp: true },
    domTarget: void 0,
    defaultCSS: "",
    elementTypeAlias: "VehicleInformation",
    vehicleContext: true,
    reloadable: false,
    defaultClass: "bzl-vehicleinformation",
};
var OPTIONS = {};
var VehicleInformation = (function (_super) {
    __extends(VehicleInformation, _super);
    function VehicleInformation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return VehicleInformation;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.VehicleInformation = VehicleInformation;

},{".":40}],66:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehicleLeadAction = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { wrapper: true, drawer: true },
    activePages: { vsr: false, vdp: true },
    elementTypeAlias: "VehicleLeadAction",
    vehicleContext: true,
    reloadable: false,
    domTarget: void 0,
    defaultCSS: void 0,
    defaultClass: "bzl-vleadaction"
};
var OPTIONS = {};
var VehicleLeadAction = (function (_super) {
    __extends(VehicleLeadAction, _super);
    function VehicleLeadAction() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VehicleLeadAction.prototype.renderDrawer = function (parentNode, context) {
        var styleId = this.getControllerStyleID() + "-drawer";
        var appendData = this.resolveControllerSelector(parentNode, this.renderSettings.domTarget);
        var drawer = document.createElement("div");
        if (styleId) {
            drawer.classList.add(styleId, "content");
        }
        if (context) {
            drawer.setAttribute('data-bzl-page', context.global.pageKey);
        }
        if (appendData) {
            this.appendNode(appendData.appendMethod, drawer, appendData.node);
        }
        return drawer;
    };
    return VehicleLeadAction;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.VehicleLeadAction = VehicleLeadAction;

},{".":40}],67:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehicleMathbox = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { drawer: true, wrapper: true },
    activePages: { vdp: true, vsr: true },
    domTarget: void 0,
    defaultCSS: "",
    elementTypeAlias: "VehicleMathbox",
    vehicleContext: true,
    reloadable: false,
    defaultClass: "bzl-vmathbox"
};
var OPTIONS = {};
var VehicleMathbox = (function (_super) {
    __extends(VehicleMathbox, _super);
    function VehicleMathbox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return VehicleMathbox;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.VehicleMathbox = VehicleMathbox;

},{".":40}],68:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehiclePlatformCTA = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { drawer: false, wrapper: false },
    activePages: { vdp: true, vsr: true },
    domTarget: void 0,
    defaultCSS: "",
    elementTypeAlias: "VehiclePlatformCTA",
    vehicleContext: true,
    passive: true,
    reloadable: false,
    defaultClass: "bzl-vplatformcta"
};
var OPTIONS = {
    ctaLabel: void 0,
    type: void 0,
    order: void 0,
    icon: void 0,
    link: void 0
};
var VehiclePlatformCTA = (function (_super) {
    __extends(VehiclePlatformCTA, _super);
    function VehiclePlatformCTA() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VehiclePlatformCTA.prototype.renderPassive = function (nodeBuilder, optionsResolver, ruleResolver, lifecycleDispatcher, context, callback) {
        var _this = this;
        var _a, _b, _c;
        var error;
        var config = this.renderSettings;
        var elementData = this.getElementData(context);
        if (ruleResolver(elementData, context)) {
            var options = optionsResolver(elementData.options, context);
            var element_1 = nodeBuilder(document.createElement("a"), elementData, context);
            var domTarget = this.resolveControllerSelector(this.getParentNode(context), config.domTarget);
            var multiColumnDomTarget = this.resolveControllerSelector(this.getParentNode(context), [{ selector: ".content .link[template='hyperlink-multi-col']", appendMethod: domTarget === null || domTarget === void 0 ? void 0 : domTarget.appendMethod }]);
            var ctaLabel = options.ctaLabel;
            var ctaOrder = options.order || "-1";
            var ctaIcon = this.getCTAIcon(options.icon);
            var ctaLink = options.ctaLink || void 0;
            var visualStylingClasses_1 = ["btn-main", "btn-default", "btn-alt", "btn-cta", "btn-alt1", "btn-alt2", "btn-alt3", "btn-success"];
            var defaultStylingClass = visualStylingClasses_1[0];
            var defaultSiblingClasses = ["btn", "btn-block", "btn-lg"];
            var ctaClass = visualStylingClasses_1.includes(options.type) ? options.type : defaultStylingClass;
            var thisCTAsClasses = [];
            var existingSiblings = (_a = domTarget === null || domTarget === void 0 ? void 0 : domTarget.node) === null || _a === void 0 ? void 0 : _a.querySelectorAll("a.btn:not([data-bzl-id]), button.btn:not([data-bzl-id])");
            var existingSiblingClasses = this.getCommonCssClasses(existingSiblings);
            var existingSiblingVisualStylingClass = existingSiblingClasses.find(function (cls) { return visualStylingClasses_1.includes(cls); });
            if (options.type && visualStylingClasses_1.includes(options.type)) {
                thisCTAsClasses.push(options.type);
            }
            else if (existingSiblingVisualStylingClass) {
                thisCTAsClasses.push(existingSiblingVisualStylingClass);
            }
            else {
                thisCTAsClasses.push(defaultStylingClass);
            }
            if (existingSiblingClasses.length > 0) {
                var filteredSiblingClasses = existingSiblingClasses.filter(function (cls) { return !visualStylingClasses_1.includes(cls); });
                thisCTAsClasses.push.apply(thisCTAsClasses, __spreadArray([], __read(filteredSiblingClasses), false));
            }
            else {
                thisCTAsClasses.push.apply(thisCTAsClasses, __spreadArray([], __read(defaultSiblingClasses), false));
            }
            thisCTAsClasses.forEach(function (cls) { return element_1.classList.add(cls); });
            element_1.style.order = ctaOrder;
            element_1.innerHTML = ctaIcon + ctaLabel;
            !!ctaLink && element_1.setAttribute("href", options.link);
            var injectableElement = ((_b = window["BaselContext"]) === null || _b === void 0 ? void 0 : _b.provider) === "dealeron" ? this.createWrapper(element_1) : element_1;
            var isTripleMathbox = this.getParentNode(context).querySelector(".multi-tabs--pricing");
            if (isTripleMathbox) {
                try {
                    var tabs = this.getParentNode(context).querySelectorAll(".pricing-tab-content__pane .vehicleCallsToAction");
                    Array.from(tabs).forEach(function (tab) {
                        var newElement = element_1.cloneNode(true);
                        newElement.addEventListener("click", function () {
                            element_1.click();
                        });
                        var injectableElement = _this.createWrapper(newElement);
                        var targetNode = tab.querySelector(":scope > ul");
                        if (!targetNode) {
                            var ul = document.createElement("ul");
                            ul.classList.add("list-unstyled", "priceBlock", "priceBlockResponsiveDesktop");
                            tab.appendChild(ul);
                            targetNode = ul;
                        }
                        _this.appendNode("appendChild", injectableElement, targetNode, elementData === null || elementData === void 0 ? void 0 : elementData.alias);
                    });
                }
                catch (error) {
                    console.error("Basel Render Error: (DealerOn) => VehiclePlatformCTA.renderPassive => applying ctas to triple mathbox. ".concat(error.message));
                }
            }
            if (domTarget && !isTripleMathbox) {
                try {
                    this.appendNode(domTarget.appendMethod, injectableElement, domTarget.node, elementData === null || elementData === void 0 ? void 0 : elementData.alias);
                }
                catch (error) {
                    console.error("Basel Render Error: (DealerOn) => VehiclePlatformCTA.renderPassive => injecting cta to domTarget. ".concat(error.message));
                }
            }
            if (multiColumnDomTarget && multiColumnDomTarget.node && ((_c = window["BaselContext"]) === null || _c === void 0 ? void 0 : _c.provider) !== "dealeron") {
                var multiColElement = nodeBuilder(document.createElement("a"), elementData, context);
                multiColElement.classList.add(ctaClass);
                multiColElement.style.order = ctaOrder;
                multiColElement.innerHTML = ctaIcon + ctaLabel;
                multiColElement.setAttribute("repeat", "hyperlinks");
                !!ctaLink && multiColElement.setAttribute("href", options.link);
                this.appendNode(domTarget.appendMethod, multiColElement, multiColumnDomTarget.node);
            }
            lifecycleDispatcher("elementDidRender");
        }
        else {
            error = new Error("Element Bypassed, render blocked by element rules");
            lifecycleDispatcher("elementDidError");
        }
        return callback(error);
    };
    VehiclePlatformCTA.prototype.getCTAIcon = function (iconKey) {
        return (typeof iconKey === "string") ? "<i class=\"material-icons\">".concat(iconKey, "</i>") : "";
    };
    VehiclePlatformCTA.prototype.createWrapper = function (cta) {
        var wrapper = document.createElement("li");
        wrapper.classList.add("priceBlockItem", "priceBlockItemButton");
        wrapper.appendChild(cta);
        return wrapper;
    };
    VehiclePlatformCTA.prototype.getCommonCssClasses = function (elements) {
        if (!elements || elements.length === 0)
            return [];
        var commonClasses = new Set(elements[0].classList);
        var _loop_1 = function (i) {
            commonClasses = new Set(Array.from(commonClasses).filter(function (cls) { return elements[i].classList.contains(cls); }));
            if (commonClasses.size === 0)
                return "break";
        };
        for (var i = 1; i < elements.length; i++) {
            var state_1 = _loop_1(i);
            if (state_1 === "break")
                break;
        }
        return Array.from(commonClasses);
    };
    return VehiclePlatformCTA;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.VehiclePlatformCTA = VehiclePlatformCTA;

},{".":40}],69:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehiclePriceBadge = void 0;
var _1 = require(".");
var CONFIG = {
    activeNodes: { drawer: false, wrapper: true },
    activePages: { vdp: true, vsr: true },
    domTarget: void 0,
    defaultCSS: "",
    elementTypeAlias: "VehiclePriceBadge",
    vehicleContext: true,
    reloadable: false,
    defaultClass: "bzl-vehiclepricebadge"
};
var OPTIONS = {};
var VehiclePriceBadge = (function (_super) {
    __extends(VehiclePriceBadge, _super);
    function VehiclePriceBadge() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return VehiclePriceBadge;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.VehiclePriceBadge = VehiclePriceBadge;

},{".":40}],70:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehicleVideos = void 0;
var _1 = require(".");
var CONFIG = {
    elementTypeAlias: "VehicleVideos",
    activeNodes: { drawer: false, wrapper: true },
    activePages: { vdp: true },
    vehicleContext: true,
    reloadable: false,
    domTarget: void 0,
    defaultCSS: void 0,
    defaultClass: "bzl-vehiclevideos",
    internal: void 0
};
var OPTIONS = {
    src: void 0,
    deferGalleryTab: void 0,
    deferGallery: void 0,
    aspectRatio: void 0,
    toggleAction: void 0
};
var VehicleVideos = (function (_super) {
    __extends(VehicleVideos, _super);
    function VehicleVideos() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.STATE = { activeGalleryId: void 0 };
        _this.REGISTRY = {};
        _this.NODES = {
            get galleryPanelContainer() {
                var node = this.galleryContainer.querySelector(VehicleVideos.setup.internal.galleryPanelContainer);
                delete this.galleryPanelContainer;
                return this.galleryPanelContainer = node;
            },
            get galleryTabContainer() {
                var node = this.galleryContainer.querySelector(VehicleVideos.setup.internal.galleryTabContainer);
                delete this.galleryTabContainer;
                return this.galleryTabContainer = node;
            },
            get galleryContainer() {
                var node = document.querySelector(VehicleVideos.setup.internal.galleryContainer);
                delete this.galleryContainer;
                return this.galleryContainer = node;
            },
            get initialPanel() {
                return this.galleryPanelContainer.querySelector(VehicleVideos.setup.internal.galleryPanelItem);
            },
            get initialTab() {
                var node = this.galleryTabContainer.querySelector(VehicleVideos.setup.internal.galleryTabItem);
                delete this.initialTab;
                return this.initialTab = node;
            },
            get selectors() {
                var selectors = {
                    panel: {
                        display: VehicleVideos.setup.internal.galleryPanelFlags,
                        panel: VehicleVideos.setup.internal.galleryPanelItem
                    },
                    tab: {
                        display: VehicleVideos.setup.internal.galleryTabFlags,
                        tab: VehicleVideos.setup.internal.galleryTabItem
                    }
                };
                delete this.selectors;
                return this.selectors = selectors;
            }
        };
        return _this;
    }
    VehicleVideos.prototype.render = function (element, options, context, eventDispatcher, callback) {
        var _a, _b, _c, _d, _e;
        var _this = this;
        var _f;
        if (((_f = window["BaselContext"]) === null || _f === void 0 ? void 0 : _f.provider) === "dealeron")
            return;
        var error = void 0;
        var galleryId = context.self.alias;
        if (this.REGISTRY[galleryId]) {
            error = new Error("Unable to render duplicate element, use actions to retrigger");
        }
        else {
            var bindAction = function (actionId, handler) {
                if (context.package && context.package.__actions) {
                    context.package.__actions.onAction(actionId, handler);
                }
            };
            var initGallery_1 = function (galleryPanel, galleryTab) {
                _this.appendGalleryNodes(galleryPanel, galleryTab);
                eventDispatcher("elementDidRender");
                if (!options.deferGallery) {
                    _this.toggleGallery(galleryId);
                    eventDispatcher("elementDidShow");
                }
            };
            if (document.querySelector("section[class*='vehicleVideoGallery']")) {
                var galleryPanel = document.querySelector('section[id="card-view/card/b04032b8-1433-4fbc-85de-908003fef8ba_32693b52-642b-4f49-9af4-42ad9edc1454"]');
                galleryPanel.setAttribute("data-bzl-id", galleryId);
                var galleryTab = document.querySelector('a[href="#card-view/card/b04032b8-1433-4fbc-85de-908003fef8ba_32693b52-642b-4f49-9af4-42ad9edc1454"]');
                galleryTab = galleryTab.parentElement;
                var section = this.createThumbnailSection(options);
                var img = document.createElement('img');
                img.src = "https://media.assets.sincrod.com/teams/repository/export/v/1/ee5/695f0ac78100583490050568bfc31/ee5695f0ac78100583490050568bfc31.png";
                document.querySelector("section[class*='vehicleVideoGallery'] > .deck").appendChild(section);
                this.REGISTRY[galleryId] = {
                    panel: galleryPanel,
                    tab: galleryTab,
                    galleryId: galleryId
                };
                if (element instanceof HTMLIFrameElement) {
                    element.addEventListener("load", function () {
                        eventDispatcher("elementDidLoad");
                    });
                }
                this.bindGalleryControls(galleryId);
                if (options.toggleAction) {
                    bindAction(options.toggleAction, function () { return _this.toggleGallery(galleryId); });
                }
                if (options.deferGalleryTab && options.initAction) {
                    bindAction(options.initAction, function () { });
                }
                if (!options.deferGallery) {
                    this.toggleGallery(galleryId);
                    eventDispatcher("elementDidShow");
                }
            }
            else {
                var galleryPanel_1 = this.createGalleryPanel(galleryId, options);
                galleryPanel_1.id = "card-view/card/b04032b8-1433-4fbc-85de-908003fef8ba_32693b52-642b-4f49-9af4-42ad9edc1454";
                var classesToAdd = ['vehicleVideoGallery', 'card', 'default-motif', 'video-overlay', 'bg-transparent', 'media-bleed-full', 'deck-bleed-full', 'deck-gallery', 'col', 'link-clickable', 'no', 'bg-light', 'insight', 'theme-', 'cards-one', 'title-one', 'copy-none', 'media-none', 'links-none', 'leafy'];
                (_a = galleryPanel_1.classList).add.apply(_a, __spreadArray([], __read(classesToAdd), false));
                galleryPanel_1.setAttribute("smartgallery", "order: 1;visibleThumbnails: 5;thumbnailMaxHeight: 75;thumbnailMargin: 20;childItemSelector: .deck > *;selectedIndex: 0;addSingleArrows: true;addPageArrows: true;arrowClass: arrow;dynamicArrows: true;selectedScale: 1;mainImageSize: 640;thumbnailSize: 100;");
                var galleryTab_1 = this.createGalleryTab(galleryId, 'Videos');
                galleryTab_1.children[0].setAttribute('href', '#card-view/card/b04032b8-1433-4fbc-85de-908003fef8ba_32693b52-642b-4f49-9af4-42ad9edc1454');
                var el = this.createVideosElement(options);
                var thumbnail = this.createThumbnailSection(options);
                thumbnail.setAttribute("aria-current", "true");
                var deck = document.createElement('div');
                deck.classList.add('deck');
                deck.setAttribute("each", "cards");
                var nextVideoArrow = document.createElement('div');
                var nextVideoArrowClasses = ["next", "single", "arrow"];
                (_b = nextVideoArrow.classList).add.apply(_b, __spreadArray([], __read(nextVideoArrowClasses), false));
                var prevVideoArrow = document.createElement('div');
                var prevVideoArrowClasses = ["prev", "single", "arrow"];
                (_c = prevVideoArrow.classList).add.apply(_c, __spreadArray([], __read(prevVideoArrowClasses), false));
                var nextPageArrow = document.createElement('div');
                var nextPageArrowClasses = ["next", "page", "arrow"];
                (_d = nextPageArrow.classList).add.apply(_d, __spreadArray([], __read(nextPageArrowClasses), false));
                var prevPageArrow = document.createElement('div');
                var prevPageArrowClasses = ["prev", "page", "arrow"];
                (_e = prevPageArrow.classList).add.apply(_e, __spreadArray([], __read(prevPageArrowClasses), false));
                deck.appendChild(thumbnail);
                galleryPanel_1.appendChild(el);
                galleryPanel_1.appendChild(deck);
                galleryPanel_1.appendChild(nextVideoArrow);
                galleryPanel_1.appendChild(prevVideoArrow);
                galleryPanel_1.appendChild(nextPageArrow);
                galleryPanel_1.appendChild(prevPageArrow);
                this.registerGallery(galleryId, galleryPanel_1, galleryTab_1, galleryPanel_1);
                this.bindGalleryControls(galleryId);
                if (element instanceof HTMLIFrameElement) {
                    element.addEventListener("load", function () {
                        eventDispatcher("elementDidLoad");
                    });
                }
                if (options.toggleAction) {
                    bindAction(options.toggleAction, function () { return _this.toggleGallery(galleryId); });
                }
                if (options.deferGalleryTab && options.initAction) {
                    bindAction(options.initAction, function () { return initGallery_1(galleryPanel_1, galleryTab_1); });
                }
                else {
                    initGallery_1(galleryPanel_1, galleryTab_1);
                }
                if (this.isMobile()) {
                    this.isMobileVideosAdded();
                }
            }
        }
        return callback(error);
    };
    VehicleVideos.prototype.isMobileVideosAdded = function () {
        var content = document.querySelector('section[id="card-view/card/b04032b8-1433-4fbc-85de-908003fef8ba_32693b52-642b-4f49-9af4-42ad9edc1454"]');
        content = content && content.innerHTML;
        var removeArrows = setInterval(function () {
            var updatedContent = document.querySelector('section[id="card-view/card/b04032b8-1433-4fbc-85de-908003fef8ba_32693b52-642b-4f49-9af4-42ad9edc1454"]');
            if (content !== updatedContent.innerHTML) {
                Array.prototype.forEach.call(updatedContent.children, function (el) {
                    if (!(el.getAttribute('data-insight')) && !(el.classList.contains('deck'))) {
                        el.style.display = 'none';
                    }
                });
                clearInterval(removeArrows);
            }
        }, 1000);
    };
    VehicleVideos.prototype.isMobile = function () {
        return typeof navigator !== "undefined" && (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));
    };
    VehicleVideos.prototype.forceResize = function () {
        var e = new Event('resize');
        e["forceResize"] = true;
        window.dispatchEvent(e);
    };
    VehicleVideos.prototype.createVideosElement = function (options) {
        var content = document.createElement("div");
        content.classList.add('content');
        var thumbnail = document.createElement("div");
        thumbnail.classList.add('media');
        thumbnail.setAttribute("template", "media");
        var figure = document.createElement('figure');
        figure.setAttribute("template", "videos-UW");
        figure.setAttribute("model", "subject");
        figure.setAttribute("additionaltype", "//schema.org/VideoObject");
        var iframe = document.createElement("iframe");
        iframe.setAttribute('src', options.src);
        iframe.setAttribute('itemprop', 'associatedMedia');
        iframe.width = "650";
        iframe.height = "450";
        figure.appendChild(iframe);
        thumbnail.appendChild(figure);
        content.appendChild(thumbnail);
        return content;
    };
    VehicleVideos.prototype.createThumbnailSection = function (options) {
        var _a;
        var section = document.createElement("section");
        var classes = ["card", "cards-none", "title-none", "copy-none", "media-one", "links-none", "leafy", "default-motif", "hover-interaction-media-treatment", "title-treatment-on", "video-overlay", "bg-light", "media-bleed-full", "deck-bleed-full", "deck-listing", "col", "link-clickable", "no"];
        (_a = section.classList).add.apply(_a, __spreadArray([], __read(classes), false));
        var content = document.createElement("div");
        content.classList.add('content');
        var thumbnail = document.createElement("div");
        thumbnail.classList.add('media');
        thumbnail.classList.add('img-thumbnail');
        thumbnail.setAttribute("template", "media");
        var img = document.createElement('img');
        img.src = "https://media.assets.sincrod.com/teams/repository/export/v/1/ee5/695f0ac78100583490050568bfc31/ee5695f0ac78100583490050568bfc31.png";
        img.setAttribute("if", "#content.vehicle.lazyLoadVideo");
        img.style.display = "none";
        var figure = document.createElement('figure');
        figure.setAttribute("template", "videos-UW");
        figure.setAttribute("additionaltype", "//schema.org/VideoObject");
        var lazy = document.createElement('div');
        lazy.setAttribute("lazyFrame", "src:".concat(options.src, ";allowfullscreen:true;itemprop:associatedMedia;width:650;height:450;protocol:https"));
        figure.appendChild(lazy);
        figure.appendChild(img);
        thumbnail.appendChild(figure);
        content.appendChild(thumbnail);
        section.appendChild(content);
        return section;
    };
    VehicleVideos.prototype.toggleGallery = function (galleryId) {
        this.forceResize();
        var active = false;
        if (this.STATE.activeGalleryId && this.STATE.activeGalleryId !== galleryId) {
            this.hideGallery(this.STATE.activeGalleryId);
        }
        var gallaryHidden = this.REGISTRY[galleryId] && this.REGISTRY[galleryId].panel && this.REGISTRY[galleryId].panel.classList.contains('hidden');
        if (this.STATE.activeGalleryId && this.STATE.activeGalleryId === galleryId && gallaryHidden) {
            this.REGISTRY[galleryId].panel.classList.remove('hidden');
            this.REGISTRY[galleryId].panel.classList.add('selected');
        }
        if (this.STATE.activeGalleryId && this.STATE.activeGalleryId === galleryId && !gallaryHidden) {
            this.REGISTRY[galleryId].panel.classList.add('selected');
        }
        if (!this.galleryIsActive(galleryId)) {
            this.resetTabs();
            this.resetPanels();
            this.selectTab(galleryId);
            this.selectPanel(galleryId);
            this.STATE.activeGalleryId = galleryId;
            active = true;
        }
        return active;
    };
    VehicleVideos.prototype.hideGallery = function (galleryId) {
        if (this.galleryIsActive(galleryId)) {
            this.deselectTab(galleryId);
            this.deselectPanel(galleryId);
            this.STATE.activeGalleryId = void 0;
        }
    };
    VehicleVideos.prototype.resetPanels = function () {
        var panelSelector = this.NODES.selectors.panel.panel;
        var panelContainer = this.NODES.galleryPanelContainer;
        var flags = VehicleVideos.setup.internal.galleryPanelFlags;
        if (panelContainer) {
            var panels = panelContainer.querySelectorAll(panelSelector);
            panels.forEach(function (el) {
                flags.show && el.classList.remove(flags.show);
                flags.hide && el.classList.add(flags.hide);
            });
        }
    };
    VehicleVideos.prototype.resetTabs = function () {
        var tabSelector = this.NODES.selectors.tab.tab;
        var tabContainer = this.NODES.galleryTabContainer;
        var flags = VehicleVideos.setup.internal.galleryTabFlags;
        if (tabContainer) {
            var tabs = tabContainer.querySelectorAll(tabSelector);
            var removeClasses_1 = function (el) {
                flags.show && el.classList.remove(flags.show);
                flags.hide && el.classList.add(flags.hide);
                if (el.children.length) {
                    Array.prototype.forEach.call(el.children, removeClasses_1);
                }
            };
            tabs.forEach(removeClasses_1);
        }
    };
    VehicleVideos.prototype.selectTab = function (galleryId) {
        var flags = VehicleVideos.setup.internal.galleryTabFlags;
        var tab = this.REGISTRY[galleryId].tab;
        if (tab instanceof HTMLElement) {
            if (flags.show) {
                tab.classList.add(flags.show);
                Array.prototype.forEach.call(tab.children, function (el) { return el && el.classList.add(flags.show); });
            }
            if (flags.hide) {
                tab.classList.remove(flags.hide);
                Array.prototype.forEach.call(tab.children, function (el) { return el && el.classList.remove(flags.hide); });
            }
        }
    };
    VehicleVideos.prototype.selectPanel = function (galleryId) {
        var flags = VehicleVideos.setup.internal.galleryPanelFlags;
        var panel = this.REGISTRY[galleryId].panel;
        if (panel instanceof HTMLElement) {
            var tabs = document.querySelectorAll('section[itemtype="//schema.org/ImageGallery"] > .deck > section');
            tabs.forEach(function (tab) {
                if (tab.getAttribute("data-bzl-id") !== galleryId) {
                    tab.classList.remove(flags.show);
                    if (tab.getAttribute("data-bzl-id") && tab.getAttribute("data-bzl-id") !== galleryId) {
                        tab.classList.add("hidden");
                    }
                    Array.prototype.forEach.call(tab.children, function (el) { return el && el.classList.remove(flags.show); });
                }
            });
            panel.classList.remove("hidden");
            if (flags.show) {
                panel.classList.add(flags.show);
                Array.prototype.forEach.call(panel.children, function (el) { return el && el.classList.add(flags.show); });
            }
            if (flags.hide) {
                panel.classList.remove(flags.hide);
                Array.prototype.forEach.call(panel.children, function (el) { return el && el.classList.remove(flags.hide); });
            }
        }
    };
    VehicleVideos.prototype.deselectTab = function (galleryId) {
        var flags = VehicleVideos.setup.internal.galleryTabFlags;
        var tab = this.REGISTRY[galleryId].tab;
        if (tab instanceof HTMLElement) {
            if (flags.show) {
                tab.classList.remove(flags.show);
                Array.prototype.forEach.call(tab.children, function (el) { return el && el.classList.remove(flags.show); });
            }
            if (flags.hide) {
                tab.classList.add(flags.hide);
                Array.prototype.forEach.call(tab.children, function (el) { return el && el.classList.add(flags.hide); });
            }
        }
    };
    VehicleVideos.prototype.deselectPanel = function (galleryId) {
        var flags = VehicleVideos.setup.internal.galleryPanelFlags;
        var panel = this.REGISTRY[galleryId].panel;
        if (panel instanceof HTMLElement) {
            panel.classList.add("hidden");
            flags.show && panel.classList.remove(flags.show);
            flags.hide && panel.classList.add(flags.hide);
        }
    };
    VehicleVideos.prototype.appendGalleryNodes = function (galleryPanel, galleryTab) {
        this.NODES.galleryPanelContainer.appendChild(galleryPanel);
        this.NODES.galleryTabContainer.appendChild(galleryTab);
    };
    VehicleVideos.prototype.registerGallery = function (galleryId, galleryPanel, galleryTab, galleryContent) {
        var frag = document.createDocumentFragment();
        frag.appendChild(galleryContent);
        this.REGISTRY[galleryId] = {
            panel: galleryPanel,
            tab: galleryTab,
            galleryId: galleryId,
            content: frag
        };
    };
    VehicleVideos.prototype.bindGalleryControls = function (galleryId) {
        var _this = this;
        this.NODES.galleryTabContainer.addEventListener("click", function (e) {
            setTimeout(function () {
                if (e.target["parentElement"] === _this.REGISTRY[galleryId].tab) {
                    _this.toggleGallery(galleryId);
                }
                else if ([HTMLAnchorElement, HTMLSpanElement].some(function (instance) { return e.target instanceof (instance); })) {
                    _this.hideGallery(galleryId);
                }
            }, 1);
        });
    };
    VehicleVideos.prototype.galleryIsActive = function (galleryId) {
        return this.STATE.activeGalleryId === galleryId;
    };
    VehicleVideos.prototype.createGalleryPanel = function (galleryId, options) {
        var protoTagName = this.NODES && this.NODES.initialPanel && this.NODES.initialPanel.tagName;
        if (typeof protoTagName === "string") {
            var panel = document.createElement(protoTagName);
            panel.setAttribute("data-bzl-id", galleryId);
            panel.setAttribute("data-bzl-ui", "vehicle-videos-gallery-panel");
            panel.classList.add("hidden");
            return panel;
        }
    };
    VehicleVideos.prototype.createGalleryTab = function (galleryId, tabLabel) {
        var protoTabTag = this.NODES.initialTab.tagName;
        var tab = document.createElement(protoTabTag);
        tab.innerHTML = "<a>" + tabLabel + "</a>";
        tab.setAttribute("data-bzl-id", galleryId);
        tab.setAttribute("data-bzl-ui", "vehicle-videos-gallery-tab");
        return tab;
    };
    VehicleVideos.prototype.createGalleryContentWrapper = function (galleryId) {
        var wrapper = this.getWrapperNode("div");
        wrapper.setAttribute("data-bzl-id", galleryId);
        wrapper.setAttribute("data-bzl-ui", "vehicle-videos-content");
        return wrapper;
    };
    return VehicleVideos;
}((0, _1.UIController)(CONFIG, OPTIONS)));
exports.VehicleVideos = VehicleVideos;

},{".":40}],71:[function(require,module,exports){
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ElementRenderer = void 0;
var ElementRenderer = (function () {
    function ElementRenderer(resolvers) {
        this.resolvers = resolvers;
    }
    ElementRenderer.prototype.initializeElement = function (element, context) {
        var links;
        var renderConfig;
        var dom;
        var options;
        var pageKey = context.global.pageKey;
        var elementAllowed = !(this.elementRestricted(element, context));
        if (elementAllowed) {
            var config = element.data.config;
            dom = config.dom;
            options = this.resolveRequiredInitialOptions(config.options, context);
            context["self"] = { dom: dom, options: options, elType: element.data.config.elementType };
            var controllerConfig = this.resolvers.controller.getControllerConfig(config.elementType, context);
            var controllerPages = controllerConfig.activePages;
            links = this.resolveGraphLinks(element.data.refs);
            if (controllerConfig.vehicleContext && context.vehicle.inventoryStatus === "Available-to-order") {
                elementAllowed = !!element.data.config.options.enableVirtualVehicle;
            }
            renderConfig = {
                active: (controllerPages[pageKey] === true) || (controllerPages["default"] === true && controllerPages[pageKey] !== false),
                reloadable: !!controllerConfig.reloadable,
                vehicle: !!controllerConfig.vehicleContext,
                passive: controllerConfig.passive
            };
        }
        return {
            alias: element.uid,
            allowed: elementAllowed,
            elementType: element.data.config.elementType,
            dom: dom,
            options: options,
            links: links,
            renderConfig: renderConfig
        };
    };
    ElementRenderer.prototype.initializeComponent = function (component, context) {
        var _this = this;
        var links;
        var elements;
        var dependencies;
        var rules;
        var lifecycleEvents;
        var componentActive = this.renderAllowed(component.data.config.activePages, context);
        var getLinks = function () { return _this.resolveGraphLinks(component.data.refs); };
        if (componentActive) {
            var initializeElements = function (elements, context) {
                if (elements === void 0) { elements = []; }
                return elements.map(function (el) { return _this.initializeElement(el, context); });
            };
            links = this.resolveGraphLinks(component.data.refs);
            lifecycleEvents = links.lifecycleEvents;
            rules = links.rules;
            dependencies = {
                async: this.filterActiveElements(initializeElements(links.dependencies, context)),
                deferred: this.filterActiveElements(initializeElements(links.deferredDependencies, context))
            };
            elements = this.sortComponentElements(this.filterActiveElements(initializeElements(links.elements, context)));
        }
        return {
            alias: component.uid,
            allowed: componentActive,
            dependencies: dependencies,
            elements: elements,
            lifecycleEvents: lifecycleEvents,
            rules: rules,
        };
    };
    ElementRenderer.prototype.renderElement = function (element, context, callback) {
        context = this.bindElementDataToContext(element, context);
        var controller = this.fetchController(element, context);
        if (!controller) {
            return callback(new Error("Unable to fetch Controller, Controller is not active or Element data is invalid"));
        }
        else if (element.renderConfig && element.renderConfig.passive) {
            this.renderPassiveElement(controller, element, context, callback);
        }
        else {
            this.renderActiveElement(controller, element, context, callback);
        }
        var validElementTypes = ["VehicleIcon", "VehicleCTA", "VehiclePlatformCTA", "VehicleMathbox"];
        var alignGridVSRListingDeck = document.querySelector('.product-listing-results .deck[aligngrid]');
        if (alignGridVSRListingDeck && validElementTypes.includes(element.elementType)) {
            alignGridVSRListingDeck.dispatchEvent(new CustomEvent("retrieval-complete"));
        }
    };
    ElementRenderer.prototype.renderCustomCSS = function (element, context) {
        var customCSS = !!(element.dom.style) && this.resolvers.property.resolveBaselProperty(element.dom.style, context);
        var styleId = element.alias + "-style";
        if (customCSS && !(document.querySelector("#" + styleId))) {
            var style = document.createElement("style");
            style.id = styleId;
            style.innerHTML = customCSS;
            document.head.appendChild(style);
        }
    };
    ElementRenderer.prototype.renderActiveElement = function (controller, element, context, callback) {
        if (this.resolveInstanceRules(element.links.rules, context)) {
            this.renderCustomCSS(element, context);
            var htmlNode = !(element.renderConfig && element.renderConfig.passive) ? this.newInstanceNode(element, context) : void 0;
            var options = this.resolveInstanceOptions(element.options, context);
            var lifecycleEventHelper = this.setLifecycleEvents(element.links.lifecycleEvents, context).bind(this);
            return controller.render(htmlNode, options, context, lifecycleEventHelper, callback);
        }
        else {
            var error = new Error("Element bypassed due to rule restriction");
            return callback(error);
        }
    };
    ElementRenderer.prototype.renderPassiveElement = function (controller, element, context, callback) {
        var _this = this;
        var renderCSS = function () { return _this.renderCustomCSS(element, context); };
        var ruleResolver = function (element, context) {
            var pass = _this.resolveInstanceRules(element.links.rules, context);
            if (pass) {
                renderCSS();
            }
            return pass;
        };
        var optionsResolver = function (options, context) { return _this.resolveInstanceOptions(options, context); };
        var nodeBuilder = function (node, element, context) { return _this.bindContextToDOMNode(node, element, context); };
        var lifecycleDispatcher = this.setLifecycleEvents(element.links.lifecycleEvents, context);
        var ctx = this.bindInstanceActions(element.links.actions, context);
        return controller.renderPassive(nodeBuilder.bind(this), optionsResolver.bind(this), ruleResolver.bind(this), lifecycleDispatcher, ctx, callback);
    };
    ElementRenderer.prototype.fetchController = function (element, context) {
        var controller;
        if (element && typeof element.elementType === "string" && context) {
            controller = this.resolvers.controller.fetchController(element.elementType, context);
        }
        return controller;
    };
    ElementRenderer.prototype.setLifecycleEvents = function (lifecycleEvents, context) {
        var _this = this;
        return function (eventName) {
            (lifecycleEvents instanceof Array) && lifecycleEvents.forEach(function (event) {
                if (eventName === event.data.eventName) {
                    return _this.resolvers.property.resolveBaselProperty(event.data.handler, context);
                }
            });
            return;
        };
    };
    ElementRenderer.prototype.newInstanceNode = function (element, context) {
        if (element.dom && element.dom.tag && element.dom.attributes) {
            var dom = element.dom;
            var attributes = this.resolveElementAttributes(dom.attributes, context);
            var tag = this.resolvers.property.resolveBaselProperty(dom.tag, context);
            var node = this.assignHTMLAttributes(document.createElement(tag), attributes);
            node.setAttribute("data-bzl-id", element.alias);
            return this.bindInstanceEvents(node, element.links.events, this.bindInstanceActions(element.links.actions, context));
        }
        else {
            return void 0;
        }
    };
    ElementRenderer.prototype.bindContextToDOMNode = function (domNode, element, context) {
        var attributes = this.resolveElementAttributes(element.dom.attributes, context);
        domNode = this.bindInstanceEvents(this.assignHTMLAttributes(domNode, attributes), element.links.events, context);
        domNode.setAttribute("data-bzl-id", element.alias);
        return domNode;
    };
    ElementRenderer.prototype.elementRestricted = function (elementNode, context) {
        var restricted = true;
        if (elementNode && elementNode.data && elementNode.data.config) {
            var pageKey = context.global.pageKey;
            var pageMap = elementNode.data.config.pageRestrictions;
            var pageKeyRestricted = this.resolvers.property.resolveBaselProperty(pageMap[pageKey], context);
            var defaultRestricted = this.resolvers.property.resolveBaselProperty(pageMap["default"], context);
            if (defaultRestricted === undefined && pageKeyRestricted === undefined) {
                restricted = false;
            }
            else if (defaultRestricted !== undefined && pageKeyRestricted === undefined) {
                restricted = !!defaultRestricted;
            }
            else if (defaultRestricted !== undefined && pageKeyRestricted !== undefined) {
                var notRestricted = (!!defaultRestricted === true && !!pageKeyRestricted === false) || (!!defaultRestricted === false && !!pageKeyRestricted === false);
                restricted = !!notRestricted ? false : true;
            }
            else if (pageKeyRestricted !== undefined && defaultRestricted === undefined) {
                restricted = !!pageKeyRestricted;
            }
        }
        return restricted;
    };
    ElementRenderer.prototype.resolveInstanceRules = function (rules, context) {
        var _this = this;
        return rules.every(function (rule) { return _this.resolvers.property.resolveBaselProperty(rule.data, context); });
    };
    ElementRenderer.prototype.resolveInstanceOptions = function (options, context) {
        var _this = this;
        return Object.keys(options).reduce(function (opts, option) {
            opts[option] = _this.resolvers.property.resolveBaselProperty(options[option], context);
            return opts;
        }, {});
    };
    ElementRenderer.prototype.resolveElementAttributes = function (elementAttributes, context) {
        var _this = this;
        var attributes = elementAttributes || {};
        var strategies = {
            classList: function (classList) {
                return classList.map(function (cls) { return _this.resolvers.property.resolveBaselProperty(cls, context); });
            },
            style: function (styleMap) {
                return Object.keys(styleMap).reduce(function (styles, style) {
                    styles[style] = _this.resolvers.property.resolveBaselProperty(styleMap[style], context);
                    return styles;
                }, {});
            },
            default: function (attr) {
                return _this.resolvers.property.resolveBaselProperty(attr, context);
            }
        };
        var reduceAttributes = function (attributes, attr) {
            var stratKey = strategies[attr] ? attr : "default";
            attributes[attr] = strategies[stratKey](elementAttributes[attr], context);
            return attributes;
        };
        return Object.keys(attributes).reduce(reduceAttributes, {});
    };
    ElementRenderer.prototype.assignHTMLAttributes = function (node, attributes) {
        var strategies = {
            style: function (styleMap) {
                Object.keys(styleMap).forEach(function (prop) {
                    node.style[prop] = styleMap[prop];
                });
            },
            classList: function (classList) {
                var _a;
                (_a = node.classList).add.apply(_a, __spreadArray([], __read(classList), false));
            },
            "class": function (val) {
                node.classList.add(val);
            },
            innerHTML: function (val) {
                if (typeof val === "string")
                    node.innerHTML = val;
            },
            text: function (val) {
                node.text = val;
            }
        };
        var applyAttribute = function (attr) {
            var val = attributes[attr];
            if (strategies[attr]) {
                strategies[attr](val);
            }
            else {
                node.setAttribute(attr, val);
            }
        };
        Object.keys(attributes).forEach(applyAttribute);
        return node;
    };
    ElementRenderer.prototype.dispatchAction = function (baselAction, context) {
        var _this = this;
        var actionHelper = context.package["__actions"];
        if (baselAction["baselAction"]) {
            var action_1 = baselAction.baselAction;
            var actionPayload = Object.keys(action_1.payload).reduce(function (data, item) {
                data[item] = _this.resolvers.property.resolveBaselProperty(action_1.payload[item], context);
                return data;
            }, {});
            return actionHelper.dispatchAction(action_1.actionId, actionPayload);
        }
    };
    ElementRenderer.prototype.bindInstanceEvents = function (node, events, context) {
        var _this = this;
        if (events instanceof Array) {
            var dispatchEvent_1 = function (handler) {
                if (handler["baselAction"]) {
                    _this.dispatchAction(handler, context);
                }
                else {
                    _this.resolvers.property.resolveBaselProperty(handler, context);
                }
            };
            events.reduce(function (el, event) {
                var domEvent = event.data.event;
                var handler = event.data.handler;
                el.addEventListener(domEvent, function () { return dispatchEvent_1(handler); });
                return el;
            }, node);
        }
        return node;
    };
    ElementRenderer.prototype.bindInstanceActions = function (actions, context) {
        var actionHelper = context.package["__actions"];
        if ((actions instanceof Array) && actions.length) {
            var assignActionPayloadToContext = function (action) {
                var payloadBindings = action.data.payload;
                actionHelper.onAction(action.data.actionID, function (payload) { return resolvePayload_1(payload, payloadBindings); });
            };
            var resolvePayload_1 = function (payload, payloadBindings) {
                Object.keys(payloadBindings).forEach(function (reassignKey) {
                    var searchKey = payloadBindings[reassignKey];
                    if (payload.hasOwnProperty(searchKey)) {
                        context.self[reassignKey] = payload[searchKey];
                    }
                });
            };
            actions.forEach(assignActionPayloadToContext);
        }
        return context;
    };
    ElementRenderer.prototype.bindElementDataToContext = function (element, context) {
        context["self"] = element;
        return context;
    };
    ElementRenderer.prototype.resolveGraphLinks = function (links) {
        var _this = this;
        var resolved;
        if (links) {
            resolved = Object.keys(links).reduce(function (resolved, linkType) {
                var nodeType = (linkType === "deferredDependencies" || linkType === "dependencies") ? "elements" : linkType;
                var nodes = _this.resolvers.graph.fetchGraphNodes(nodeType, links[linkType]);
                resolved[linkType] = nodes;
                return resolved;
            }, {});
        }
        return resolved;
    };
    ElementRenderer.prototype.filterActiveElements = function (elements) {
        return elements.filter(function (el) { return !!el.allowed && !!el.renderConfig.active; });
    };
    ElementRenderer.prototype.sortComponentElements = function (elements) {
        var sorted;
        if (elements instanceof Array) {
            sorted = elements.reduce(function (sorted, el) {
                var sortKey = el.renderConfig.reloadable ? "reloadable" : el.renderConfig.vehicle ? "vehicle" : "page";
                sorted[sortKey].push(el);
                return sorted;
            }, { vehicle: [], page: [], reloadable: [] });
        }
        return sorted;
    };
    ElementRenderer.prototype.renderAllowed = function (pageMap, context) {
        return this.resolvers.property["resolvers"].baselProperties.isPropertyActive(pageMap, context);
    };
    ElementRenderer.prototype.resolveRequiredInitialOptions = function (unresolvedOptions, context) {
        var requiredInitialOptions = {};
        if ("urlKey" in unresolvedOptions)
            requiredInitialOptions.urlKey = unresolvedOptions.urlKey;
        if ("defer" in unresolvedOptions)
            requiredInitialOptions.defer = unresolvedOptions.defer;
        if ("styleID" in unresolvedOptions)
            requiredInitialOptions.styleID = unresolvedOptions.styleID;
        var resolvedRequiredInitialOptions = this.resolveInstanceOptions(requiredInitialOptions, context);
        return __assign(__assign({}, unresolvedOptions), resolvedRequiredInitialOptions);
    };
    return ElementRenderer;
}());
exports.ElementRenderer = ElementRenderer;

},{}],72:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./element-renderer"), exports);
__exportStar(require("./package-renderer"), exports);
__exportStar(require("./renderer"), exports);

},{"./element-renderer":71,"./package-renderer":73,"./renderer":74}],73:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PackageRenderer = void 0;
var PackageRenderer = (function () {
    function PackageRenderer(resolvers, elementRenderer, asyncUtil) {
        this.resolvers = resolvers;
        this.helpers = {
            async: asyncUtil,
            elementRenderer: elementRenderer
        };
    }
    PackageRenderer.prototype.renderPackage = function (baselPackage, packageState, callback) {
        var _this = this;
        var packageRefs = baselPackage.data.refs;
        var packageLinks = this.resolveGraphLinks(packageRefs);
        var initializeComponents = function (componentNodes, context) {
            return componentNodes.map(function (component) { return _this.initializeComponent(component, context); }).filter(function (component) { return !!component.allowed; });
        };
        var initialContext = this.resolvers.context.getContext(packageState, 0, void 0);
        var sortedCustomProperties = this.sortCustomProperties(packageLinks.customProperties);
        var packageOptions = packageState.get("options");
        var pkgNamespace = packageOptions && packageOptions.packageNS;
        var initScripts = packageOptions && packageOptions.initScripts;
        if (pkgNamespace) {
            this.setPackageNS(pkgNamespace, packageState, initialContext);
        }
        return this.renderInitScripts(initScripts, initialContext, function () {
            _this.resolvePackageProperties(sortedCustomProperties.sync, initialContext, function () {
                _this.resolvePackageProperties(sortedCustomProperties.async, initialContext, function () {
                    var dependencies = _this.initDependencies(packageLinks.dependencies, packageLinks.deferredDependencies, initialContext);
                    _this.renderElements(dependencies.async, initialContext, function () {
                        var components = initializeComponents(packageLinks.components, initialContext);
                        _this.renderComponents(components, packageState, function () { return _this.renderElements(dependencies.deferred, initialContext, function () { return callback(); }); });
                    });
                });
            });
        });
    };
    PackageRenderer.prototype.setPackageNS = function (pkgNamespace, packageState, initialContext) {
        if (pkgNamespace) {
            var pkgController_1 = {
                dispatch: function (actionId, payload) {
                    return this.state.get("__actions").dispatchAction(actionId, payload);
                },
                state: packageState,
                context: initialContext,
                on: function (actionId, handler, once) {
                    this.state.get("__actions").onAction(actionId, handler, once);
                }
            };
            window[pkgNamespace] = pkgController_1;
        }
    };
    PackageRenderer.prototype.renderInitScripts = function (initScripts, context, callback) {
        var _this = this;
        if (!initScripts || !initScripts.length) {
            return callback();
        }
        var resolveProperty = function (t) { return _this.resolvers.property.resolveBaselProperty(t, context); };
        this.helpers.async.forEach(initScripts, function (script, next, i) {
            var s;
            var target = script && resolveProperty(script.inlineJs || script.src);
            if (!target) {
                return next(void 0);
            }
            else if (script.inlineJs) {
                s = document.createElement("script");
                s.type = "text/javascript";
                s.innerHTML = target;
                document.head.appendChild(s);
                return next(void 0);
            }
            else if (script.src) {
                s = document.createElement("script");
                s.src = target;
                s.addEventListener("load", function () { return next(void 0); });
                document.head.appendChild(s);
            }
        }, callback);
    };
    PackageRenderer.prototype.renderComponent = function (component, packageState, callback) {
        var _this = this;
        if (!component || !component.dependencies || !component.elements) {
            return callback();
        }
        var dependencies = component.dependencies, elements = component.elements;
        var renderContextElements = function (packageState, callback) {
            var context = _this.resolvers.context.getContext(packageState, 0, void 0);
            return _this.renderElements(elements.reloadable, context, function () {
                _this.renderVehicleContextElements(elements.vehicle, packageState, function () {
                    return callback();
                });
            });
        };
        var context = this.resolvers.context.getContext(packageState, 0, void 0);
        this.resolvers.context.onPageContextChange(function () { return renderContextElements(packageState, function () {
            return _this.reRenderPageElements(elements.page, context, function () { return callback(); });
        }); });
        return this.renderElements(dependencies.async, context, function () {
            return _this.renderElements(elements.page, context, function () {
                return renderContextElements(packageState, function () {
                    return _this.renderElements(dependencies.deferred, context, function () { return callback(); });
                });
            });
        });
    };
    PackageRenderer.prototype.renderComponents = function (components, packageState, callback) {
        var _this = this;
        if (!(components instanceof Array) || !components.length) {
            return callback();
        }
        return this.helpers.async.forEach(components, function (component, next, i) {
            return _this.renderComponent(component, packageState, function () {
                return next(void 0);
            });
        }, callback);
    };
    PackageRenderer.prototype.renderVehicleContextElements = function (elements, packageState, callback) {
        var _this = this;
        var vehicleContexts = this.resolvers.context.globalContext.get("activeVehicleListings");
        if (!(elements instanceof Array) || !elements.length || !vehicleContexts.length) {
            return callback();
        }
        return this.helpers.async.forEach(vehicleContexts, function (vehicle, next, i) {
            var elContext = _this.resolvers.context.getContext(packageState, i, void 0);
            _this.renderElements(elements, elContext, function () {
                return next(void 0);
            });
        }, function () {
            return callback();
        });
    };
    PackageRenderer.prototype.resolvePackageProperties = function (customProps, context, callback) {
        var _this = this;
        return this.helpers.async.forEach(customProps, function (property, next, i) {
            return _this.resolvers.property.resolvePackageProperty(property.data, context, function (err, res) {
                var key = res.key, value = res.value;
                context.package[key] = value;
                return next(void 0);
            });
        }, callback);
    };
    PackageRenderer.prototype.sortCustomProperties = function (packageProperties) {
        if (packageProperties === void 0) { packageProperties = []; }
        return packageProperties.reduce(function (props, prop) {
            var target = (["SET_VALUE", "URL_PARAM"].indexOf(prop.data.fetchType) > -1) ? "sync" : "async";
            props[target].push(prop);
            return props;
        }, { async: [], sync: [] });
    };
    PackageRenderer.prototype.renderElements = function (elements, context, callback) {
        var _this = this;
        if ((typeof elements.push !== "function") || !elements.length) {
            return callback();
        }
        return this.helpers.async.forEach(elements, function (element, next, i) {
            return _this.helpers.elementRenderer.renderElement(element, context, function () { return next(void 0); });
        }, function () {
            return callback();
        });
    };
    PackageRenderer.prototype.reRenderPageElements = function (elements, context, callback) {
        var _this = this;
        if (!document.querySelector("[data-outline=\"VehicleSearchResults-MobileFirst\"]")
            || !Array.isArray(elements)
            || !elements.length)
            return void 0;
        return this.helpers.async.forEach(elements, function (element, next, i) {
            if (document.querySelector("[data-bzl-id=\"".concat(element.alias, "\"]")))
                return next(void 0);
            return _this.helpers.elementRenderer.renderElement(element, context, function () { return next(void 0); });
        }, function () {
            return callback();
        });
    };
    PackageRenderer.prototype.initDependencies = function (asyncDependencies, deferredDependencies, context) {
        return {
            async: this.filterActiveElements(this.initializeElements(asyncDependencies, context)),
            deferred: this.filterActiveElements(this.initializeElements(deferredDependencies, context))
        };
    };
    PackageRenderer.prototype.initializeComponent = function (component, context) {
        return this.helpers.elementRenderer.initializeComponent(component, context);
    };
    PackageRenderer.prototype.initializeElement = function (element, context) {
        return this.helpers.elementRenderer.initializeElement(element, context);
    };
    PackageRenderer.prototype.initializeElements = function (elements, context) {
        var _this = this;
        return elements.map(function (el) { return _this.helpers.elementRenderer.initializeElement(el, context); });
    };
    PackageRenderer.prototype.resolveGraphLinks = function (links) {
        return this.helpers.elementRenderer["resolveGraphLinks"](links);
    };
    PackageRenderer.prototype.filterActiveElements = function (elements) {
        return this.helpers.elementRenderer["filterActiveElements"](elements);
    };
    return PackageRenderer;
}());
exports.PackageRenderer = PackageRenderer;

},{}],74:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Renderer = void 0;
var Renderer = (function () {
    function Renderer(rendererContext, packageRenderer) {
        this.helpers = {
            context: rendererContext,
            renderer: packageRenderer
        };
    }
    Renderer.prototype.renderPackage = function (packageNode, packageState, callback) {
        if (!packageNode) {
            var error = new Error("Unable to render package -- Invalid Package");
            return callback(error);
        }
        return this.helpers.renderer.renderPackage(packageNode, packageState, function (err) { return callback(err); });
    };
    return Renderer;
}());
exports.Renderer = Renderer;

},{}],75:[function(require,module,exports){
"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomPropertyResolver = void 0;
var CustomPropertyResolver = (function () {
    function CustomPropertyResolver(packagePropertyResolver, xhrHelper) {
        this.helpers = {
            properties: packagePropertyResolver,
            xhr: xhrHelper
        };
        this.resolvers = {
            HTML: this.htmlProperty.bind(this),
            SET_VALUE: this.valueProperty.bind(this),
            URL_PARAM: this.urlProperty.bind(this),
            JSON: this.jsonProperty.bind(this),
            "JSON-P": this.jsonpProperty.bind(this),
            ASYNC_SET: this.resolveAsyncSet.bind(this)
        };
    }
    CustomPropertyResolver.prototype.resolveCustomProperty = function (property, context, callback) {
        var propType = this.getPropertyType(property);
        var propActive = propType && this.isPropertyActive(property.applyPages, context);
        return propActive ? this.resolvers[propType](property, context, callback) : callback(new Error("Not a custom property"), { key: property.assignBaselToken, value: void 0 });
    };
    CustomPropertyResolver.prototype.valueProperty = function (property, context, callback) {
        var _a = property, assignBaselToken = _a.assignBaselToken, assignValue = _a.assignValue;
        var result;
        var error;
        result = {
            key: assignBaselToken,
            value: assignValue
        };
        return callback(error, result);
    };
    CustomPropertyResolver.prototype.urlProperty = function (property, context, callback) {
        var error;
        var _a = property, searchKey = _a.searchKey, assignBaselToken = _a.assignBaselToken;
        var result = { key: assignBaselToken, value: void 0 };
        var key = this.helpers.properties.resolveProperty(searchKey, context);
        var regexp = new RegExp("(" + key + "=.*?)(&|$)");
        var query = regexp.exec(window.location.search);
        if (query && typeof query[1] === "string") {
            var val = this.helpers.properties.resolveProperty(query[1].split("=")[1], context);
            result.value = val;
        }
        else {
            error = new Error("Term [" + key + "] does not exist in URL");
        }
        return callback(error, result);
    };
    CustomPropertyResolver.prototype.jsonProperty = function (property, context, callback) {
        var _this = this;
        var error;
        var result = { key: property.assignBaselToken, value: void 0 };
        var handleResponse = function (err, response) {
            error = err;
            result.value = response.value;
            if (result.value && typeof result.value === "string") {
                var parsed = _this.helpers.xhr.tryParse(result.value);
                result.value = parsed.value;
                error = parsed.error || error;
            }
            return callback(error, result);
        };
        return this.resolveAjaxProperty(property, context, handleResponse);
    };
    CustomPropertyResolver.prototype.jsonpProperty = function (property, context, callback) {
        var error;
        var result = { key: property.assignBaselToken, value: void 0 };
        var url = this.helpers.properties.resolveProperty(property.endpoint, context);
        if (!url) {
            error = new Error("Unable to resolve JSONP Property Assignment, Invalid Request URL");
            return callback(error, result);
        }
        else if (typeof window.$ !== "function") {
            error = new Error("Unable to resolve JSONP Property Assignment, jQuery not found on window");
            return callback(error, result);
        }
        else {
            window["$"].ajax({
                url: url,
                jsonp: "jsoncallback",
                dataType: "jsonp",
                success: function (data) {
                    result.value = data;
                    return callback(error, result);
                },
                error: function (req, status, err) {
                    error = new Error("Error resolving JSON-P Property Assignment, request failed with " + status + " " + err);
                    return callback(error, result);
                }
            });
        }
    };
    CustomPropertyResolver.prototype.htmlProperty = function (property, context, callback) {
        return this.resolveAjaxProperty(property, context, callback);
    };
    CustomPropertyResolver.prototype.resolveAjaxProperty = function (property, context, callback) {
        var endpoint = property.endpoint, assignBaselToken = property.assignBaselToken, request = property.request;
        var url = this.helpers.properties.resolveProperty(endpoint, context);
        var result = {
            key: assignBaselToken,
            value: void 0
        };
        var error = void 0;
        if (url && request.method) {
            if (request.payload) {
                request.payload = this.resolveObjectProperties(request.payload, context);
            }
            if (request.headers) {
                request.headers = this.resolveObjectProperties(request.headers, context);
            }
            this.helpers.xhr.request(url, request, function (err, response) {
                error = err;
                result.value = response;
                return callback(error, result);
            });
        }
        else {
            error = new Error("Unable to resolve Ajax Property Assignment, invalid URL or request method");
            return callback(error, result);
        }
    };
    CustomPropertyResolver.prototype.resolveAsyncSet = function (property, context, callback) {
        var _this = this;
        var assignBaselToken = property.assignBaselToken, method = property.method, args = property.args;
        var path = this.helpers.properties.resolveProperty(method, context);
        var _args = args.map(function (prop) { return _this.helpers.properties.resolveProperty(prop, context); });
        var fn = this.helpers.properties["resolveFnPath"](path, context);
        var result = { key: assignBaselToken, value: void 0 };
        return fn.apply(void 0, __spreadArray(__spreadArray([], __read(_args), false), [function (data) {
                result.value = data;
                return callback(void 0, data);
            }], false));
    };
    CustomPropertyResolver.prototype.getPropertyType = function (property) {
        var type = property["fetchType"];
        return this.resolvers.hasOwnProperty(type) ? type : void 0;
    };
    CustomPropertyResolver.prototype.isPropertyActive = function (pageAssignment, context) {
        return this.helpers.properties.isPropertyActive(pageAssignment, context);
    };
    CustomPropertyResolver.prototype.resolveObjectProperties = function (target, context) {
        var _this = this;
        var resolvedTarget = target;
        if (target instanceof Object) {
            resolvedTarget = Object.keys(target).reduce(function (resolved, key) {
                resolved[key] = _this.helpers.properties.resolveProperty(target[key], context);
                return resolved;
            }, {});
        }
        return resolvedTarget;
    };
    return CustomPropertyResolver;
}());
exports.CustomPropertyResolver = CustomPropertyResolver;

},{}],76:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./custom-property-resolver"), exports);
__exportStar(require("./package-action-resolver"), exports);
__exportStar(require("./package-node-resolver"), exports);
__exportStar(require("./package-property-resolver"), exports);
__exportStar(require("./property-resolver"), exports);

},{"./custom-property-resolver":75,"./package-action-resolver":77,"./package-node-resolver":78,"./package-property-resolver":79,"./property-resolver":80}],77:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PackageActionResolver = void 0;
var PackageActionResolver = (function () {
    function PackageActionResolver(defaultActions) {
        this.registry = {};
        if (defaultActions) {
            this.registry = defaultActions;
        }
    }
    PackageActionResolver.prototype.onAction = function (actionId, handler, once) {
        if (typeof handler === "function") {
            var isRegistered = this.registry[actionId] instanceof Array;
            if (!isRegistered) {
                this.registry[actionId] = [];
            }
            var actionHandle = {
                once: once,
                handler: handler
            };
            this.registry[actionId].push(actionHandle);
        }
    };
    PackageActionResolver.prototype.dispatchAction = function (actionId, payload) {
        var registeredActions = this.registry[actionId];
        if (registeredActions) {
            var triggerActions = function (actionHandler) {
                actionHandler.handler(payload);
                return !actionHandler.once;
            };
            this.registry[actionId] = registeredActions.filter(triggerActions);
        }
        return void 0;
    };
    return PackageActionResolver;
}());
exports.PackageActionResolver = PackageActionResolver;

},{}],78:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PackageNodeResolver = void 0;
var PackageNodeResolver = (function () {
    function PackageNodeResolver(graph) {
        this.GRAPH = graph;
    }
    PackageNodeResolver.prototype.fetchGraphNodes = function (clusterId, nodeIds) {
        return this.GRAPH.searchNodes(clusterId, function (node, index) { return (nodeIds.indexOf(node.uid) > -1); });
    };
    return PackageNodeResolver;
}());
exports.PackageNodeResolver = PackageNodeResolver;

},{}],79:[function(require,module,exports){
"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PackagePropertyResolver = void 0;
var PackagePropertyResolver = (function () {
    function PackagePropertyResolver(tokenizer) {
        this.propertyFormat = /\@\{\{(.*?)\}\}\@/g;
        this.transformerOps = {
            EQUAL: function (target, val) { return target === val; },
            BOOLEAN_EQUAL: function (target, val) {
                var newTarget = (typeof target === "string" ? target.trim() : target);
                var a = (newTarget === "undefined" || newTarget === "false") ? false : !!newTarget;
                var b = (val === "undefined" || val === "false") ? false : !!val;
                return a === b;
            }
        };
        this.resolvers = {
            baselCondition: this.resolveBaselCondition.bind(this),
            baselString: this.resolveBaselString.bind(this),
            baselMethod: this.resolveBaselMethod.bind(this),
            baselProp: this.resolveBaselProp.bind(this),
            baselRule: this.resolveBaselRule.bind(this),
            baselBool: this.resolveBaselBoolean.bind(this)
        };
        this.helpers = { tokenizer: tokenizer };
    }
    PackagePropertyResolver.prototype.resolveProperty = function (property, context) {
        var result = property;
        var propertyType = this.getPropertyType(property);
        if (propertyType) {
            result = this.resolveProperty(this.resolvers[propertyType](property, context), context);
        }
        return result;
    };
    PackagePropertyResolver.prototype.resolveBaselProp = function (property, context) {
        var _this = this;
        var result;
        if (this.getPropertyType(property) === "baselProp") {
            var prop = this.resolveProperty(property.baselProp, context);
            var formatTokens_1 = function (str) { return _this.containsDeprecatedProperties(str) ? _this.formatDeprecatedTokens(str) : str; };
            var resolveAsString = function (prop) {
                var result;
                var str = formatTokens_1(prop);
                var tokens = _this.helpers.tokenizer.parseAllTokens(str, context);
                var tokenCount = tokens.length;
                if (tokenCount === 1) {
                    result = _this.resolveProperty(tokens[0].value, context);
                }
                else if (tokenCount > 1) {
                    result = _this.helpers.tokenizer["replaceString"](str, tokens);
                }
                return result;
            };
            var resolveAsArray = function (prop) { return prop.map(function (p) { return _this.resolveProperty(p, context); }); };
            var resolveAsObject = function (prop) {
                return Object.keys(prop).reduce(function (props, key) {
                    props[key] = _this.resolveProperty(prop[key], context);
                    return props;
                }, {});
            };
            if (typeof prop === "string") {
                result = resolveAsString(prop);
            }
            else if (prop instanceof Array) {
                result = resolveAsArray(prop);
            }
            else if (prop instanceof Object) {
                result = resolveAsObject(prop);
            }
            else {
                result = prop;
            }
        }
        return result;
    };
    PackagePropertyResolver.prototype.resolveBaselCondition = function (property, context) {
        var result;
        var ops = {
            EQUALS: function (value) { return value; },
            AS_BOOLEAN: function (value) { return (value === "undefined" || value === "false") ? false : !!value; }
        };
        if (this.getPropertyType(property) === "baselCondition") {
            var _a = property.baselCondition, assertion = _a.assertion, cases = _a.cases, evalTarget = _a.evalTarget;
            var assertValue = this.resolveProperty(evalTarget, context);
            if (typeof ops[assertion] !== "function") {
                throw new Error("Invalid Condition Assertion Type");
            }
            var caseValue = ops[assertion](assertValue);
            if (cases.hasOwnProperty(caseValue)) {
                result = this.resolveProperty(cases[caseValue], context);
            }
            else if (cases.hasOwnProperty("default")) {
                result = this.resolveProperty(cases.default, context);
            }
        }
        return result;
    };
    PackagePropertyResolver.prototype.resolveBaselString = function (property, context) {
        var _this = this;
        var formatStr = function (str) { return _this.containsDeprecatedProperties(str) ? _this.formatDeprecatedTokens(str) : str; };
        var hasTokens = function (str) { return !!(str.match(/@{{(.*?)}}@/g)); };
        var result;
        var bzlStr = (property && typeof property.baselString === "string") ? formatStr(property.baselString) : void 0;
        if (!bzlStr) {
            result = void 0;
        }
        else if (!hasTokens(bzlStr)) {
            result = bzlStr;
        }
        else {
            var tokens = this.helpers.tokenizer.parseAllTokens(bzlStr, context).map(function (t) {
                t.value = _this.resolveProperty(t.value, context);
                return t;
            });
            result = this.helpers.tokenizer["replaceString"](bzlStr, tokens);
        }
        return result;
    };
    PackagePropertyResolver.prototype.resolveBaselMethod = function (property, context) {
        var _this = this;
        var result;
        if (this.getPropertyType(property) === "baselMethod") {
            var _a = property.baselMethod, method = _a.method, args = _a.args, useNew = _a.useNew;
            var fnPath = this.resolveProperty(method, context);
            var fnArgs = args.map(function (arg) { return _this.resolveProperty(arg, context); });
            var callee = this.resolveFnPath(fnPath, context);
            if (typeof callee === "function") {
                result = (!useNew) ? (callee.apply(void 0, __spreadArray([], __read(fnArgs), false))) : (new (callee.bind.apply(callee, __spreadArray([void 0], __read(fnArgs), false)))());
            }
        }
        return result;
    };
    PackagePropertyResolver.prototype.resolveBaselRule = function (property, context) {
        var result = true;
        var OPS = this.transformerOps;
        if (property.baselRule && this.isPropertyActive(property.baselRule.applyPages, context)) {
            var _a = property.baselRule, value = _a.value, expectProp = _a.expectProp, to = _a.to, toNot = _a.toNot;
            var evalTarget = this.resolveProperty(expectProp, context);
            var assertVal = this.resolveProperty(value, context);
            if (to && OPS[to]) {
                result = OPS[to](evalTarget, assertVal);
            }
            if (toNot && OPS[toNot]) {
                result = !(OPS[toNot](evalTarget, assertVal));
            }
        }
        return result;
    };
    PackagePropertyResolver.prototype.resolveBaselBoolean = function (property, context) {
        var value;
        var invert;
        var prop = (property || {}).baselBool;
        if (typeof prop === "string") {
            value = this.resolveProperty({ baselProp: prop }, context);
            if (value === "true") {
                value = true;
            }
            else if (value === "false") {
                value = false;
            }
        }
        else if (prop) {
            invert = prop.invert;
            value = this.resolveProperty(prop.target, context);
            if (value === "true") {
                value = true;
            }
            else if (value === "false") {
                value = false;
            }
        }
        return invert ? !(value) : !!value;
    };
    PackagePropertyResolver.prototype.isPropertyActive = function (pageAssignment, context) {
        var OPS = this.transformerOps;
        var pageKey = context.global.pageKey;
        var defaultAllow = pageAssignment.hasOwnProperty("default") ? this.resolveProperty(pageAssignment["default"], context) : false;
        var currentPageAssignment = pageAssignment.hasOwnProperty(pageKey) ? (this.resolveProperty(pageAssignment[pageKey], context)) : void 0;
        var propertyActive = false;
        if (OPS.BOOLEAN_EQUAL(currentPageAssignment, true) || (OPS.BOOLEAN_EQUAL(defaultAllow, true) && (currentPageAssignment !== undefined ? !(OPS.BOOLEAN_EQUAL(currentPageAssignment, false)) : true))) {
            propertyActive = true;
        }
        return propertyActive;
    };
    PackagePropertyResolver.prototype.getPropertyType = function (property) {
        var propTypes = Object.keys(this.resolvers);
        var propType;
        if (property) {
            for (var i = 0, len = propTypes.length; i < len; i++) {
                var key = propTypes[i];
                if (property[key]) {
                    propType = key;
                    break;
                }
            }
        }
        return propType;
    };
    PackagePropertyResolver.prototype.containsDeprecatedProperties = function (key) {
        var regexp = this.deprecatedPropertyRegexp(true);
        return regexp.test(key);
    };
    PackagePropertyResolver.prototype.deprecatedPropertyRegexp = function (globalFlag) {
        return !!globalFlag ? /@\!(.*?)\!@|@\^(.*?)\^@|@\*(.*?)\*@|@\$\{(.*)\}@|@\#(.*?)\#@/g : /@\!(.*?)\!@|@\^(.*?)\^@|@\*(.*?)\*@|@\$\{(.*)\}@|@\#(.*?)\#@/;
    };
    PackagePropertyResolver.prototype.formatDeprecatedTokens = function (str) {
        var tokenStr = str;
        var replacements = {
            "@{{package.$1}}@": /@\*(.*?)\*@/g,
            "@{{vehicle.$1}}@": /@\!(.*?)\!@/g,
            "@{{global.$1}}@": /@\^(.*?)\^@/g,
            "@{{window.$1}}@": /@\#(.*?)\#@/g,
            "@{{$1}}@": /@\$\{(.*)\}@/g
        };
        tokenStr = Object.keys(replacements).reduce(function (replacedStr, key) {
            var regexp = replacements[key];
            return replacedStr = replacedStr.replace(regexp, key);
        }, str);
        return tokenStr;
    };
    PackagePropertyResolver.prototype.resolveFnPath = function (path, ctx) {
        var context = ctx || {};
        var segments = path.split(".");
        var nsId = segments.shift();
        var ns = context.hasOwnProperty(nsId) ? ctx[nsId] : window[nsId];
        var fn = segments.reduce(function (fn, p) { return (fn = fn[p]) && fn || fn; }, ns);
        return typeof fn === "function" ? fn.bind(ns) : fn;
    };
    return PackagePropertyResolver;
}());
exports.PackagePropertyResolver = PackagePropertyResolver;

},{}],80:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PropertyResolver = void 0;
var PropertyResolver = (function () {
    function PropertyResolver(customPropertyResolver, baselPropertyResolver) {
        this.resolvers = {
            baselProperties: baselPropertyResolver,
            customProperties: customPropertyResolver
        };
    }
    PropertyResolver.prototype.resolvePackageProperty = function (property, context, callback) {
        return this.resolvers.customProperties.resolveCustomProperty(property, context, callback);
    };
    PropertyResolver.prototype.resolveBaselProperty = function (property, context) {
        return this.resolvers.baselProperties.resolveProperty(property, context);
    };
    return PropertyResolver;
}());
exports.PropertyResolver = PropertyResolver;

},{}],81:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./render-service"), exports);

},{"./render-service":82}],82:[function(require,module,exports){
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RenderService = void 0;
var RenderService = (function () {
    function RenderService(dependencies) {
        this.helpers = dependencies;
    }
    RenderService.prototype.onRenderContextChange = function (fn, once) {
        return this.helpers.context.onPageContextChange(fn, once);
    };
    RenderService.prototype.renderPackage = function (packageNode, parameters, sharedInvProperties, callback) {
        var packageState = this.newPackageState(packageNode, parameters, sharedInvProperties);
        return this.helpers.renderer.renderPackage(packageNode, packageState, callback);
    };
    RenderService.prototype.fetchPackage = function (packageId) {
        return this.helpers.renderer.helpers.renderer.helpers.elementRenderer.resolvers.graph["GRAPH"].fetchNode("packages", packageId);
    };
    RenderService.prototype.fetchGlobalContext = function () {
        return this.helpers.context.globalContext.fetch();
    };
    RenderService.prototype.newPackageState = function (packageNode, parameters, sharedInvProperties) {
        var _state = __assign({ __actions: new this.helpers.actions(), options: packageNode.data.config.options, partner: packageNode.data.config.partner, packageId: packageNode.uid, prefix: packageNode.data.config.prefix, links: packageNode.data.refs, sharedInvProperties: sharedInvProperties }, parameters);
        var state = new this.helpers.state(_state);
        return state;
    };
    return RenderService;
}());
exports.RenderService = RenderService;

},{}],83:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaselPackageLogger = void 0;
var BaselPackageLogger = (function () {
    function BaselPackageLogger() {
        this.entries = {};
    }
    BaselPackageLogger.prototype.log = function (logGroupId, details) {
        var group = this.entries[logGroupId];
        if (!group) {
            this.entries[logGroupId] = [];
        }
        this.entries[logGroupId].push(details);
    };
    return BaselPackageLogger;
}());
exports.BaselPackageLogger = BaselPackageLogger;

},{}],84:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaselPackageUtilities = void 0;
var BaselPackageUtilities = (function () {
    function BaselPackageUtilities() {
    }
    BaselPackageUtilities.convertSecureURL = function (strURL) {
        if (strURL.indexOf("https://") !== -1 || strURL.indexOf("//") === 0) {
            return strURL;
        }
        else if (strURL.indexOf("http://") === 0) {
            return document.location.protocol + strURL.slice(5, strURL.length);
        }
        return document.location.protocol + "//" + strURL;
    };
    return BaselPackageUtilities;
}());
exports.BaselPackageUtilities = BaselPackageUtilities;

},{}],85:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.State = void 0;
var State = (function () {
    function State(state) {
        this.state = state || {};
    }
    State.prototype.get = function (key) {
        return key ? this.state[key] : void 0;
    };
    State.prototype.set = function (key, value) {
        return key ? this.state[key] = value : void 0;
    };
    State.prototype.fetch = function () {
        return this.state;
    };
    return State;
}());
exports.State = State;

},{}],86:[function(require,module,exports){
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tokenizer = void 0;
var Tokenizer = (function () {
    function Tokenizer() {
    }
    Tokenizer.parseTokens = function (tokenStr, regexp) {
        var matches = [];
        if (typeof tokenStr === "string" && (regexp instanceof RegExp)) {
            var match = void 0;
            while (match = regexp.exec(tokenStr)) {
                var matched = match.filter(Boolean);
                var _a = __read(this.parseTokenKey(matched[0]), 2), key = _a[0], fallback = _a[1];
                matches.push({ token: matched[0], key: key, fallback: fallback });
            }
        }
        return matches;
    };
    Tokenizer.replace = function (str, context, options) {
        var _this = this;
        if (options === void 0) { options = { transformer: function (val) { return val; }, regexp: void 0 }; }
        var value;
        if (typeof str === "string" && (options.regexp instanceof RegExp)) {
            value = this.replaceTokens(str, this.parseTokens(str, options.regexp).map(function (d) { return (__assign(__assign({}, d), { value: options.transformer(_this.getContextProperty(d.key, context, d.fallback)) })); }));
        }
        return value;
    };
    Tokenizer.getContextProperty = function (key, context, fallback) {
        var _a, _b, _c;
        if (fallback === void 0) { fallback = undefined; }
        if (!key || (typeof key !== "string") || !context) {
            return void 0;
        }
        var path = key.split(".");
        var ns = path.shift();
        var vehicleWebId = (_a = context.vehicle) === null || _a === void 0 ? void 0 : _a.webId;
        var sharedVal = ns === "package" && vehicleWebId && ((_c = (_b = context.self) === null || _b === void 0 ? void 0 : _b.renderConfig) === null || _c === void 0 ? void 0 : _c.vehicle)
            ? context.package.sharedInvProperties
                && context.package.sharedInvProperties[vehicleWebId]
                && context.package.sharedInvProperties[vehicleWebId][path[path.length - 1]]
            : undefined;
        if (sharedVal)
            return sharedVal;
        var val;
        var i = 0;
        if (context[ns]) {
            while (path.length > 0) {
                ++i;
                val = (i === 1) ? context[ns] : val[path.shift()];
                if (val === void 0) {
                    break;
                }
            }
        }
        return val || fallback;
    };
    Tokenizer.replaceTokens = function (str, tokens) {
        var replaced;
        if (str && (typeof str === "string") && (tokens instanceof Array)) {
            replaced = str;
            var t = void 0;
            while (t = tokens.pop()) {
                t.value = (t.value instanceof Object) ? JSON.stringify(t.value) : t.value;
                replaced = replaced.replace(t.token, t.value);
            }
        }
        return replaced;
    };
    Tokenizer.parseAllTokens = function (text, context) {
        var _this = this;
        var getTokens = function (sourceText) {
            var tokens = _this.sortTokensByStatus(_this.parseTokensFromString(sourceText).map(function (m) { return _this.getTokenData(m, context); }));
            while (tokens.pending.length > 0) {
                tokens.pending = tokens.pending.filter(function (p) {
                    var pend = true;
                    tokens.resolved.forEach(function (r) {
                        p.token = (p.token.replace(r.token, r.value));
                    });
                    p.count = _this.countTokens(p.token);
                    if (p.count === 1) {
                        var _a = __read(_this.parseTokenKey(p.token), 2), key = _a[0], fallback = _a[1];
                        p.key = key;
                        p.value = _this.getContextProperty(p.key, context, fallback);
                        tokens.resolved.push(p);
                        pend = false;
                    }
                    return pend;
                });
            }
            return tokens.resolved;
        };
        return getTokens(text);
    };
    Tokenizer.replaceStringTokens = function (sourceText, context) {
        var tokens = this.parseAllTokens(sourceText, context);
        return this.replaceString(sourceText, tokens);
    };
    Tokenizer.replaceString = function (sourceText, tokens) {
        return tokens.reduce(function (txt, token) {
            var val = (token.value instanceof Object) ? JSON.stringify(token.value) : token.value;
            return txt.replace(token.token, val);
        }, sourceText);
    };
    Tokenizer.parseTokensFromString = function (sourceText) {
        var isStart = function (index, src) { return ((src[index] === "@") && (src[index + 1] === "{") && (src[index + 2] === "{")); };
        var isEnd = function (index, src) { return ((src[index] === "@") && (src[index - 1] === "}") && (src[index - 2] === "}")); };
        var source = sourceText.split("");
        var starts = [];
        return source.reduce(function (sets, char, index) {
            if (isStart(index, sourceText)) {
                starts.push(index);
            }
            else if (isEnd(index, sourceText)) {
                sets.push(sourceText.slice(starts.pop(), (index + 1)));
            }
            return sets;
        }, []);
    };
    Tokenizer.sortTokensByStatus = function (tokenData) {
        return tokenData.reduce(function (_matches, match) {
            match.count === 1 ? _matches.resolved.push(match) : _matches.pending.push(match);
            return _matches;
        }, { pending: [], resolved: [] });
    };
    Tokenizer.countTokens = function (text) {
        return (text.match(/@{{/g) || []).length;
    };
    Tokenizer.parseTokenKey = function (text) {
        var _a;
        var match = text.match(/@{{(.*?)}}@/)[1];
        if (!match)
            return null;
        return (_a = match.split("||")) === null || _a === void 0 ? void 0 : _a.map(function (i) { return i.trim().replace(/'/g, "").replace(/"/g, ""); });
    };
    Tokenizer.getTokenData = function (token, context) {
        var _a;
        var key;
        var fallback;
        var value;
        var count = this.countTokens(token);
        if (count === 1) {
            _a = __read(this.parseTokenKey(token), 2), key = _a[0], fallback = _a[1];
            value = this.getContextProperty(key, context, fallback);
        }
        return { token: token, value: value, count: count, key: key };
    };
    return Tokenizer;
}());
exports.Tokenizer = Tokenizer;

},{}],87:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.XHR = void 0;
var XHR = (function () {
    function XHR() {
    }
    XHR.request = function (url, options, callback) {
        var payload = this.formatPayload(options.payload || null);
        var xhr = new XMLHttpRequest();
        xhr.open(options.method, url);
        xhr.addEventListener("load", function (e) {
            var error;
            var response = xhr.response;
            if (!response) {
                error = new Error("Invalid XHR Response at request [" + options.method + " - " + url + "]");
            }
            return callback(error, response);
        });
        xhr.addEventListener("error", function (e) {
            var error = new Error("XHR Error at request [" + options.method + " - " + url + "]");
            return callback(error, void 0);
        });
        this.applyHeaders(options, xhr);
        xhr.send(payload);
    };
    XHR.tryParse = function (jsonString) {
        try {
            var parsed = JSON.parse(jsonString);
            return { value: parsed };
        }
        catch (e) {
            return { value: void 0, error: e };
        }
    };
    XHR.applyHeaders = function (options, xhr) {
        var headers = options.headers;
        if (headers) {
            var keys = Object.keys(headers);
            keys.forEach(function (header) {
                xhr.setRequestHeader(header, headers[header]);
            });
        }
        return xhr;
    };
    XHR.formatPayload = function (payload) {
        if (payload instanceof Object) {
            payload = JSON.stringify(payload);
        }
        return payload;
    };
    return XHR;
}());
exports.XHR = XHR;

},{}],88:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./basel-package-logger"), exports);
__exportStar(require("./basel-package-utilities"), exports);
__exportStar(require("./basel-state"), exports);
__exportStar(require("./basel-tokenizer"), exports);
__exportStar(require("./basel-xhr"), exports);

},{"./basel-package-logger":83,"./basel-package-utilities":84,"./basel-state":85,"./basel-tokenizer":86,"./basel-xhr":87}],89:[function(require,module,exports){
arguments[4][9][0].apply(exports,arguments)
},{"dup":9}],90:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Extension = void 0;
var basel_extension_1 = require("./basel-extension");
Object.defineProperty(exports, "Extension", { enumerable: true, get: function () { return basel_extension_1.Extension; } });

},{"./basel-extension":16}],91:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Basel = void 0;
var basel_graph_1 = require("./core/basel-graph/basel-graph");
Object.defineProperty(exports, "Basel", { enumerable: true, get: function () { return basel_graph_1.BaselGraph; } });

},{"./core/basel-graph/basel-graph":4}],92:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaselEmitter = void 0;
var BaselEmitter = (function () {
    function BaselEmitter() {
        this.EVENTS = {};
    }
    BaselEmitter.prototype.on = function (eventID, handler, once) {
        var event = {
            handler: handler,
            once: once || false
        };
        if (!this.eventRegistered(eventID)) {
            this.EVENTS[eventID] = [event];
        }
        else {
            this.EVENTS[eventID].push(event);
        }
        return true;
    };
    BaselEmitter.prototype.dispatch = function (eventID, eventData) {
        if (!this.eventRegistered(eventID)) {
            return void 0;
        }
        var events = this.EVENTS[eventID];
        var dispatchAndFilter = function (event, index, target) {
            var persist = event.once !== true;
            event.handler(eventData);
            return persist;
        };
        this.EVENTS[eventID] = events.filter(dispatchAndFilter);
        return true;
    };
    BaselEmitter.prototype.emit = function (eventID) {
        this.dispatch(eventID, {});
    };
    BaselEmitter.prototype.eventRegistered = function (eventID) {
        return this.EVENTS.hasOwnProperty(eventID);
    };
    return BaselEmitter;
}());
exports.BaselEmitter = BaselEmitter;

},{}]},{},[1]);
